[
  {
    "id": 1,
    "name": "@prestojs/codegen",
    "kind": 1,
    "kindString": "Package",
    "flags": {
      "isExported": true
    },
    "originalName": "/Users/dave/Development/internal/xenopus/js-packages/@prestojs/codegen/src/index.ts",
    "comment": {
      "text": "<h1 id=\"generator\">Generator</h1>\n<p>Code generator for frontend. Accepts JSON definitions generated from other sources (eg. django).</p>\n"
    },
    "groups": [
      {
        "title": "Classes",
        "kind": 128,
        "children": [2]
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/codegen/src/index.ts",
        "line": 1,
        "character": 0
      }
    ],
    "childIds": [2]
  },
  {
    "id": 2,
    "name": "Generator",
    "kind": 128,
    "kindString": "Class",
    "flags": {
      "isExported": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/codegen/src/index.ts",
        "line": 1,
        "character": 22
      }
    ]
  },
  {
    "id": 1739,
    "name": "@prestojs/final-form",
    "kind": 1,
    "kindString": "Package",
    "flags": {
      "isExported": true
    },
    "originalName": "/Users/dave/Development/internal/xenopus/js-packages/@prestojs/final-form/src/FormField.tsx",
    "comment": {
      "text": "<h1 id=\"react-final-form-integration\">React Final Form Integration</h1>\n<p>Integration with <a href=\"https://github.com/final-form/react-final-form\">react-final-form</a> that fills out\nthe widget to use based on a ViewModel field.</p>\n<p>TODO: Review/expand this once interface settled</p>\n<h2 id=\"basic-usage\">Basic usage</h2>\n<pre><code class=\"language-js\"><span class=\"xml\">import React from 'react';\nimport </span><span class=\"hljs-template-variable\">{ Form }</span><span class=\"xml\"> from '@prestojs/final-form';\n\nfunction UserForm(onSubmit) </span><span class=\"hljs-template-variable\">{\n    return (\n        &lt;Form onSubmit={onSubmit}</span><span class=\"xml\">&gt;\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Form.Item</span> <span class=\"hljs-attr\">field</span>=</span></span><span class=\"hljs-template-variable\">{User.fields.firstName}</span><span class=\"xml\"><span class=\"hljs-tag\"> /&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Form.Item</span> <span class=\"hljs-attr\">field</span>=</span></span><span class=\"hljs-template-variable\">{User.fields.lastName}</span><span class=\"xml\"><span class=\"hljs-tag\"> /&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Form.Item</span> <span class=\"hljs-attr\">field</span>=</span></span><span class=\"hljs-template-variable\">{User.fields.email}</span><span class=\"xml\"><span class=\"hljs-tag\"> /&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Form.Item</span> <span class=\"hljs-attr\">field</span>=</span></span><span class=\"hljs-template-variable\">{User.fields.email}</span><span class=\"xml\"><span class=\"hljs-tag\"> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"emailConfirmation\"</span> <span class=\"hljs-attr\">label</span>=<span class=\"hljs-string\">\"Confirm Email\"</span> /&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Form.Item</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Form.Field</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"signUpNewsletter\"</span>&gt;</span>\n                    </span><span class=\"hljs-template-variable\">{({ input }</span><span class=\"xml\">) =&gt; <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Checkbox</span> </span></span><span class=\"hljs-template-variable\">{...input}</span><span class=\"xml\"><span class=\"hljs-tag\">&gt;</span>Sign up to newsletter?<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Checkbox</span>&gt;</span>}\n                <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Form.Field</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Form.Item</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"submit\"</span>&gt;</span>Submit<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Form</span>&gt;</span>\n    );\n}</span></code></pre>\n"
    },
    "groups": [
      {
        "title": "Type aliases",
        "kind": 4194304,
        "children": [1753, 1740, 1771, 1758, 1764, 1778]
      },
      {
        "title": "Functions",
        "kind": 64,
        "children": [1782, 1745, 1773]
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/final-form/src/FormField.tsx",
        "line": 1,
        "character": 0
      }
    ],
    "childIds": [1753, 1740, 1771, 1758, 1764, 1778, 1782, 1745, 1773]
  },
  {
    "id": 1753,
    "name": "CommonProps",
    "kind": 4194304,
    "kindString": "Type alias",
    "flags": {},
    "sources": [
      {
        "fileName": "js-packages/@prestojs/final-form/src/FormItem.tsx",
        "line": 7,
        "character": 16
      }
    ],
    "type": {
      "type": "reflection",
      "declaration": {
        "id": 1754,
        "name": "__type",
        "kind": 65536,
        "kindString": "Type literal",
        "flags": {},
        "children": [
          {
            "id": 1755,
            "name": "help",
            "kind": 32,
            "kindString": "Variable",
            "flags": {
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "js-packages/@prestojs/final-form/src/FormItem.tsx",
                "line": 8,
                "character": 8
              }
            ],
            "type": {
              "type": "reference",
              "name": "React.ReactNode"
            }
          },
          {
            "id": 1756,
            "name": "label",
            "kind": 32,
            "kindString": "Variable",
            "flags": {
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "js-packages/@prestojs/final-form/src/FormItem.tsx",
                "line": 9,
                "character": 9
              }
            ],
            "type": {
              "type": "reference",
              "name": "React.ReactNode"
            }
          },
          {
            "id": 1757,
            "name": "required",
            "kind": 32,
            "kindString": "Variable",
            "flags": {
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "js-packages/@prestojs/final-form/src/FormItem.tsx",
                "line": 10,
                "character": 12
              }
            ],
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "intrinsic",
                  "name": "undefined"
                },
                {
                  "type": "intrinsic",
                  "name": "false"
                },
                {
                  "type": "intrinsic",
                  "name": "true"
                }
              ]
            }
          }
        ],
        "groups": [
          {
            "title": "Variables",
            "kind": 32,
            "children": [1755, 1756, 1757]
          }
        ],
        "sources": [
          {
            "fileName": "js-packages/@prestojs/final-form/src/FormItem.tsx",
            "line": 7,
            "character": 18
          }
        ]
      }
    }
  },
  {
    "id": 1740,
    "name": "FormFieldProps",
    "kind": 4194304,
    "kindString": "Type alias",
    "flags": {},
    "typeParameter": [
      {
        "id": 1741,
        "name": "T",
        "kind": 131072,
        "kindString": "Type parameter",
        "flags": {}
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/final-form/src/FormField.tsx",
        "line": 6,
        "character": 19
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "reference",
          "name": "FieldProps",
          "typeArguments": [
            {
              "type": "intrinsic",
              "name": "any"
            },
            {
              "type": "intrinsic",
              "name": "any"
            }
          ]
        },
        {
          "type": "intersection",
          "types": [
            {
              "type": "reflection",
              "declaration": {
                "id": 1742,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {}
              }
            },
            {
              "type": "reflection",
              "declaration": {
                "id": 1743,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "children": [
                  {
                    "id": 1744,
                    "name": "field",
                    "kind": 32,
                    "kindString": "Variable",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "js-packages/@prestojs/final-form/src/FormField.tsx",
                        "line": 8,
                        "character": 51
                      }
                    ],
                    "type": {
                      "type": "reference",
                      "name": "Field",
                      "id": 24,
                      "typeArguments": [
                        {
                          "type": "typeParameter",
                          "name": "T"
                        }
                      ]
                    }
                  }
                ],
                "groups": [
                  {
                    "title": "Variables",
                    "kind": 32,
                    "children": [1744]
                  }
                ]
              }
            }
          ]
        }
      ]
    }
  },
  {
    "id": 1771,
    "name": "FormItemProps",
    "kind": 4194304,
    "kindString": "Type alias",
    "flags": {},
    "typeParameter": [
      {
        "id": 1772,
        "name": "T",
        "kind": 131072,
        "kindString": "Type parameter",
        "flags": {}
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/final-form/src/FormItem.tsx",
        "line": 27,
        "character": 18
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "reference",
          "name": "FormItemPropsNoField",
          "id": 1758
        },
        {
          "type": "reference",
          "name": "FormItemPropsWithField",
          "id": 1764,
          "typeArguments": [
            {
              "type": "typeParameter",
              "name": "T"
            }
          ]
        }
      ]
    }
  },
  {
    "id": 1758,
    "name": "FormItemPropsNoField",
    "kind": 4194304,
    "kindString": "Type alias",
    "flags": {},
    "sources": [
      {
        "fileName": "js-packages/@prestojs/final-form/src/FormItem.tsx",
        "line": 13,
        "character": 25
      }
    ],
    "type": {
      "type": "intersection",
      "types": [
        {
          "type": "reflection",
          "declaration": {
            "id": 1759,
            "name": "__type",
            "kind": 65536,
            "kindString": "Type literal",
            "flags": {},
            "children": [
              {
                "id": 1763,
                "name": "children",
                "kind": 32,
                "kindString": "Variable",
                "flags": {},
                "sources": [
                  {
                    "fileName": "js-packages/@prestojs/final-form/src/FormItem.tsx",
                    "line": 17,
                    "character": 12
                  }
                ],
                "type": {
                  "type": "reference",
                  "name": "React.ReactNode"
                }
              },
              {
                "id": 1760,
                "name": "field",
                "kind": 32,
                "kindString": "Variable",
                "flags": {},
                "sources": [
                  {
                    "fileName": "js-packages/@prestojs/final-form/src/FormItem.tsx",
                    "line": 14,
                    "character": 9
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "undefined"
                }
              },
              {
                "id": 1761,
                "name": "fieldProps",
                "kind": 32,
                "kindString": "Variable",
                "flags": {},
                "sources": [
                  {
                    "fileName": "js-packages/@prestojs/final-form/src/FormItem.tsx",
                    "line": 15,
                    "character": 14
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "undefined"
                }
              },
              {
                "id": 1762,
                "name": "name",
                "kind": 32,
                "kindString": "Variable",
                "flags": {},
                "sources": [
                  {
                    "fileName": "js-packages/@prestojs/final-form/src/FormItem.tsx",
                    "line": 16,
                    "character": 8
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              }
            ],
            "groups": [
              {
                "title": "Variables",
                "kind": 32,
                "children": [1763, 1760, 1761, 1762]
              }
            ],
            "sources": [
              {
                "fileName": "js-packages/@prestojs/final-form/src/FormItem.tsx",
                "line": 13,
                "character": 27
              }
            ]
          }
        },
        {
          "type": "reference",
          "name": "CommonProps",
          "id": 1753
        }
      ]
    }
  },
  {
    "id": 1764,
    "name": "FormItemPropsWithField",
    "kind": 4194304,
    "kindString": "Type alias",
    "flags": {},
    "typeParameter": [
      {
        "id": 1765,
        "name": "T",
        "kind": 131072,
        "kindString": "Type parameter",
        "flags": {}
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/final-form/src/FormItem.tsx",
        "line": 20,
        "character": 27
      }
    ],
    "type": {
      "type": "intersection",
      "types": [
        {
          "type": "reflection",
          "declaration": {
            "id": 1766,
            "name": "__type",
            "kind": 65536,
            "kindString": "Type literal",
            "flags": {},
            "children": [
              {
                "id": 1770,
                "name": "children",
                "kind": 32,
                "kindString": "Variable",
                "flags": {
                  "isOptional": true
                },
                "sources": [
                  {
                    "fileName": "js-packages/@prestojs/final-form/src/FormItem.tsx",
                    "line": 24,
                    "character": 12
                  }
                ],
                "type": {
                  "type": "reference",
                  "name": "React.ReactNode"
                }
              },
              {
                "id": 1768,
                "name": "field",
                "kind": 32,
                "kindString": "Variable",
                "flags": {},
                "sources": [
                  {
                    "fileName": "js-packages/@prestojs/final-form/src/FormItem.tsx",
                    "line": 22,
                    "character": 9
                  }
                ],
                "type": {
                  "type": "reference",
                  "name": "Field",
                  "id": 24,
                  "typeArguments": [
                    {
                      "type": "typeParameter",
                      "name": "T"
                    }
                  ]
                }
              },
              {
                "id": 1769,
                "name": "fieldProps",
                "kind": 32,
                "kindString": "Variable",
                "flags": {},
                "sources": [
                  {
                    "fileName": "js-packages/@prestojs/final-form/src/FormItem.tsx",
                    "line": 23,
                    "character": 14
                  }
                ],
                "type": {
                  "type": "reference",
                  "name": "FieldProps",
                  "typeArguments": [
                    {
                      "type": "intrinsic",
                      "name": "any"
                    },
                    {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  ]
                }
              },
              {
                "id": 1767,
                "name": "name",
                "kind": 32,
                "kindString": "Variable",
                "flags": {},
                "sources": [
                  {
                    "fileName": "js-packages/@prestojs/final-form/src/FormItem.tsx",
                    "line": 21,
                    "character": 8
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "undefined"
                }
              }
            ],
            "groups": [
              {
                "title": "Variables",
                "kind": 32,
                "children": [1770, 1768, 1769, 1767]
              }
            ],
            "sources": [
              {
                "fileName": "js-packages/@prestojs/final-form/src/FormItem.tsx",
                "line": 20,
                "character": 32
              }
            ]
          }
        },
        {
          "type": "reference",
          "name": "CommonProps",
          "id": 1753
        }
      ]
    }
  },
  {
    "id": 1778,
    "name": "FormProps",
    "kind": 4194304,
    "kindString": "Type alias",
    "flags": {},
    "typeParameter": [
      {
        "id": 1779,
        "name": "FormValues",
        "kind": 131072,
        "kindString": "Type parameter",
        "flags": {}
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/final-form/src/Form.tsx",
        "line": 7,
        "character": 14
      }
    ],
    "type": {
      "type": "intersection",
      "types": [
        {
          "type": "reference",
          "name": "FinalFormProps",
          "typeArguments": [
            {
              "type": "typeParameter",
              "name": "FormValues"
            }
          ]
        },
        {
          "type": "reflection",
          "declaration": {
            "id": 1780,
            "name": "__type",
            "kind": 65536,
            "kindString": "Type literal",
            "flags": {},
            "children": [
              {
                "id": 1781,
                "name": "initialValues",
                "kind": 32,
                "kindString": "Variable",
                "flags": {
                  "isOptional": true
                },
                "sources": [
                  {
                    "fileName": "js-packages/@prestojs/final-form/src/Form.tsx",
                    "line": 8,
                    "character": 17
                  }
                ],
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "typeParameter",
                      "name": "FormValues"
                    },
                    {
                      "type": "reference",
                      "name": "ViewModel",
                      "id": 309
                    }
                  ]
                }
              }
            ],
            "groups": [
              {
                "title": "Variables",
                "kind": 32,
                "children": [1781]
              }
            ],
            "sources": [
              {
                "fileName": "js-packages/@prestojs/final-form/src/Form.tsx",
                "line": 7,
                "character": 66
              }
            ]
          }
        }
      ]
    }
  },
  {
    "id": 1782,
    "name": "Form",
    "kind": 64,
    "kindString": "Function",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 1783,
        "name": "Form",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Wrapper around react-final-form with some extensions",
          "text": "1) You can pass a record to `initialValues` and it will pass through the underlying data to the form\n\n2) final-form expects a function as a child which you then render a <form> element with and pass through\n   handleSubmit. Most the time this is the same thing so you optionally just pass through renderable\n   children and the form will be created implicitly for you.\n"
        },
        "parameters": [
          {
            "id": 1784,
            "name": "__namedParameters",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "originalName": "__0",
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 1785,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "children": [
                  {
                    "id": 1787,
                    "name": "children",
                    "kind": 32,
                    "kindString": "Variable",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "js-packages/@prestojs/final-form/src/Form.tsx",
                        "line": 20,
                        "character": 54
                      }
                    ],
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "undefined"
                        },
                        {
                          "type": "intrinsic",
                          "name": "null"
                        },
                        {
                          "type": "intrinsic",
                          "name": "string"
                        },
                        {
                          "type": "intrinsic",
                          "name": "number"
                        },
                        {
                          "type": "intrinsic",
                          "name": "false"
                        },
                        {
                          "type": "intrinsic",
                          "name": "true"
                        },
                        {
                          "type": "reference",
                          "name": "__type"
                        },
                        {
                          "type": "reference",
                          "name": "ReactElement",
                          "typeArguments": [
                            {
                              "type": "intrinsic",
                              "name": "any"
                            },
                            {
                              "type": "union",
                              "types": [
                                {
                                  "type": "intrinsic",
                                  "name": "string"
                                },
                                {
                                  "type": "reflection",
                                  "declaration": {
                                    "id": 1788,
                                    "name": "__type",
                                    "kind": 65536,
                                    "kindString": "Type literal",
                                    "flags": {},
                                    "signatures": [
                                      {
                                        "id": 1789,
                                        "name": "__call",
                                        "kind": 4096,
                                        "kindString": "Call signature",
                                        "flags": {},
                                        "parameters": [
                                          {
                                            "id": 1790,
                                            "name": "props",
                                            "kind": 32768,
                                            "kindString": "Parameter",
                                            "flags": {},
                                            "type": {
                                              "type": "typeParameter",
                                              "name": "P"
                                            }
                                          }
                                        ],
                                        "type": {
                                          "type": "union",
                                          "types": [
                                            {
                                              "type": "reference",
                                              "name": "ReactElement"
                                            },
                                            {
                                              "type": "intrinsic",
                                              "name": "null"
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "reflection",
                                  "declaration": {
                                    "id": 1791,
                                    "name": "__type",
                                    "kind": 65536,
                                    "kindString": "Type literal",
                                    "flags": {}
                                  }
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "reference",
                          "name": "ReactNodeArray"
                        },
                        {
                          "type": "reference",
                          "name": "ReactPortal"
                        },
                        {
                          "type": "reflection",
                          "declaration": {
                            "id": 1792,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {},
                            "signatures": [
                              {
                                "id": 1793,
                                "name": "__call",
                                "kind": 4096,
                                "kindString": "Call signature",
                                "flags": {},
                                "parameters": [
                                  {
                                    "id": 1794,
                                    "name": "props",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {},
                                    "type": {
                                      "type": "typeParameter",
                                      "name": "T"
                                    }
                                  }
                                ],
                                "type": {
                                  "type": "reference",
                                  "name": "React.ReactNode"
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  {
                    "id": 1786,
                    "name": "initialValues",
                    "kind": 32,
                    "kindString": "Variable",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "js-packages/@prestojs/final-form/src/Form.tsx",
                        "line": 20,
                        "character": 44
                      }
                    ],
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "undefined"
                        },
                        {
                          "type": "intrinsic",
                          "name": "object"
                        },
                        {
                          "type": "intersection",
                          "types": [
                            {
                              "type": "intrinsic",
                              "name": "object"
                            },
                            {
                              "type": "reference",
                              "name": "ViewModel",
                              "id": 309
                            }
                          ]
                        }
                      ]
                    }
                  },
                  {
                    "id": 1795,
                    "name": "rest",
                    "kind": 32,
                    "kindString": "Variable",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "js-packages/@prestojs/final-form/src/Form.tsx",
                        "line": 20,
                        "character": 63
                      }
                    ],
                    "type": {
                      "type": "reference",
                      "name": "rest",
                      "id": 1795
                    }
                  }
                ],
                "groups": [
                  {
                    "title": "Variables",
                    "kind": 32,
                    "children": [1787, 1786, 1795]
                  }
                ],
                "sources": [
                  {
                    "fileName": "js-packages/@prestojs/final-form/src/Form.tsx",
                    "line": 20,
                    "character": 29
                  }
                ]
              }
            }
          }
        ],
        "type": {
          "type": "reference",
          "name": "ReactElement"
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/final-form/src/Form.tsx",
        "line": 20,
        "character": 28
      }
    ]
  },
  {
    "id": 1745,
    "name": "FormField",
    "kind": 64,
    "kindString": "Function",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 1746,
        "name": "FormField",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Wrapper around Field from react-final-form that determines the widget to use based on the field.",
          "text": "Must be used within a `ViewModelForm`.\n\nIf `component`, `render` or `children` are passed they will be used instead of selecting a widget\nbased on the field type.\n"
        },
        "typeParameter": [
          {
            "id": 1747,
            "name": "T",
            "kind": 131072,
            "kindString": "Type parameter",
            "flags": {}
          }
        ],
        "parameters": [
          {
            "id": 1748,
            "name": "__namedParameters",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "originalName": "__0",
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 1749,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "children": [
                  {
                    "id": 1750,
                    "name": "field",
                    "kind": 32,
                    "kindString": "Variable",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "js-packages/@prestojs/final-form/src/FormField.tsx",
                        "line": 19,
                        "character": 9
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  },
                  {
                    "id": 1751,
                    "name": "formProps",
                    "kind": 32,
                    "kindString": "Variable",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "js-packages/@prestojs/final-form/src/FormField.tsx",
                        "line": 20,
                        "character": 16
                      }
                    ],
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "reference",
                          "name": "formProps",
                          "id": 1751
                        },
                        {
                          "type": "reference",
                          "name": "formProps",
                          "id": 1751
                        }
                      ]
                    }
                  }
                ],
                "groups": [
                  {
                    "title": "Variables",
                    "kind": 32,
                    "children": [1750, 1751]
                  }
                ],
                "sources": [
                  {
                    "fileName": "js-packages/@prestojs/final-form/src/FormField.tsx",
                    "line": 18,
                    "character": 37
                  }
                ]
              }
            }
          }
        ],
        "type": {
          "type": "reference",
          "name": "ReactElement"
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/final-form/src/FormField.tsx",
        "line": 18,
        "character": 33
      }
    ]
  },
  {
    "id": 1773,
    "name": "FormItem",
    "kind": 64,
    "kindString": "Function",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 1774,
        "name": "FormItem",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Wrapper around Field from react-final-form that determines the widget to use based on the field.",
          "text": "Must be used within a `ViewModelForm`.\n\nIf `component`, `render` or `children` are passed they will be used instead of selecting a widget\nbased on the field type.\n\nUsage:\n\n```js\n// Fill out label, help text, required indicator and the field widget component to use based\n// on the User email field\n<Form.Item field={User.fields.email} />\n// The equivalent thing writing out everything explicitly:\n<Form.Item\n    required={User.fields.email.required}\n    label={User.fields.email.label}\n    help={User.fields.email.help}\n>\n    <Form.Field field={User.fields.email} />\n</Form.Item>\n```\n\nYou can override any prop that is autofilled from the field:\n\n```js\n<Form.Item field={User.fields.email} label=\"Email Address\" />\n```\n\nOr you can specify everything, including the field\n\n```js\n<Form.Item label=\"Email\" help=\"Please double check your email\">\n    <Form.Field field={User.fields.email} />\n</Form.Item>\n```\n"
        },
        "typeParameter": [
          {
            "id": 1775,
            "name": "T",
            "kind": 131072,
            "kindString": "Type parameter",
            "flags": {}
          }
        ],
        "parameters": [
          {
            "id": 1776,
            "name": "props",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "name": "FormItemProps",
              "id": 1771,
              "typeArguments": [
                {
                  "type": "typeParameter",
                  "name": "T"
                }
              ]
            }
          }
        ],
        "type": {
          "type": "reference",
          "name": "ReactElement"
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/final-form/src/FormItem.tsx",
        "line": 67,
        "character": 32
      }
    ]
  },
  {
    "id": 1842,
    "name": "@prestojs/rest",
    "kind": 1,
    "kindString": "Package",
    "flags": {
      "isExported": true
    },
    "originalName": "/Users/dave/Development/internal/xenopus/js-packages/@prestojs/rest/src/Endpoint.ts",
    "comment": {
      "text": "<h1 id=\"rest-api\">REST API</h1>\n"
    },
    "groups": [
      {
        "title": "Classes",
        "kind": 128,
        "children": [1855, 1873, 1843, 1868]
      },
      {
        "title": "Type aliases",
        "kind": 4194304,
        "children": [1923, 1920, 1937, 1933]
      },
      {
        "title": "Functions",
        "kind": 64,
        "children": [1945, 1938, 1942]
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/rest/src/Endpoint.ts",
        "line": 1,
        "character": 0
      }
    ],
    "childIds": [1855, 1873, 1843, 1868, 1923, 1920, 1937, 1933, 1945, 1938, 1942]
  },
  {
    "id": 1855,
    "name": "ApiError",
    "kind": 128,
    "kindString": "Class",
    "flags": {
      "isExported": true
    },
    "comment": {
      "shortText": "Indicates a response outside the 200 range",
      "tags": [
        {
          "tag": "param",
          "text": "response status code",
          "param": "status"
        },
        {
          "tag": "param",
          "text": "HTTP status code message",
          "param": "statusText"
        },
        {
          "tag": "param",
          "text": "the contents returned by server as processed be decodeBody\n",
          "param": "content"
        }
      ]
    },
    "groups": [
      {
        "title": "Constructors",
        "kind": 512,
        "children": [1859]
      },
      {
        "title": "Properties",
        "kind": 1024,
        "children": [1858, 1865, 1864, 1866, 1856, 1857, 1867]
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/rest/src/Endpoint.ts",
        "line": 111,
        "character": 21
      }
    ],
    "extendedTypes": [
      {
        "type": "reference",
        "name": "Error"
      }
    ],
    "childIds": [1859, 1858, 1865, 1864, 1866, 1856, 1857, 1867]
  },
  {
    "id": 1859,
    "name": "constructor",
    "kind": 512,
    "kindString": "Constructor",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 1860,
        "name": "new ApiError",
        "kind": 16384,
        "kindString": "Constructor signature",
        "flags": {},
        "parameters": [
          {
            "id": 1861,
            "name": "status",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "intrinsic",
              "name": "number"
            }
          },
          {
            "id": 1862,
            "name": "statusText",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          },
          {
            "id": 1863,
            "name": "content",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "intrinsic",
              "name": "any"
            }
          }
        ],
        "type": {
          "type": "reference",
          "name": "ApiError",
          "id": 1855
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/rest/src/Endpoint.ts",
        "line": 114,
        "character": 17
      }
    ]
  },
  {
    "id": 1858,
    "name": "content",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isExported": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/rest/src/Endpoint.ts",
        "line": 114,
        "character": 11
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "any"
    }
  },
  {
    "id": 1865,
    "name": "message",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isExported": true
    },
    "sources": [
      {
        "fileName": "node_modules/typescript/lib/lib.es5.d.ts",
        "line": 974,
        "character": 11
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "string"
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Error.message"
    }
  },
  {
    "id": 1864,
    "name": "name",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isExported": true
    },
    "sources": [
      {
        "fileName": "node_modules/typescript/lib/lib.es5.d.ts",
        "line": 973,
        "character": 8
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "string"
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Error.name"
    }
  },
  {
    "id": 1866,
    "name": "stack",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isExported": true,
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "node_modules/typescript/lib/lib.es5.d.ts",
        "line": 975,
        "character": 9
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "undefined"
        },
        {
          "type": "intrinsic",
          "name": "string"
        }
      ]
    },
    "overwrites": {
      "type": "reference",
      "name": "Error.stack"
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Error.stack"
    }
  },
  {
    "id": 1856,
    "name": "status",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isExported": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/rest/src/Endpoint.ts",
        "line": 112,
        "character": 10
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "number"
    }
  },
  {
    "id": 1857,
    "name": "statusText",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isExported": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/rest/src/Endpoint.ts",
        "line": 113,
        "character": 14
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "string"
    }
  },
  {
    "id": 1867,
    "name": "Error",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isStatic": true,
      "isExported": true
    },
    "sources": [
      {
        "fileName": "node_modules/typescript/lib/lib.es5.d.ts",
        "line": 984,
        "character": 17
      }
    ],
    "type": {
      "type": "reference",
      "name": "ErrorConstructor"
    }
  },
  {
    "id": 1873,
    "name": "Endpoint",
    "kind": 128,
    "kindString": "Class",
    "flags": {
      "isExported": true
    },
    "comment": {
      "shortText": "Describe an REST API endpoint that can then be executed.",
      "text": "Accepts a `UrlPattern` and optionally a `decodeBody` function which decodes the `Response` body as returned by\n`fetch` and a `transformResponseBody` function that can transform the decoded body. The default `decodeBody` handles\ndecoding the data based on content type and is suitable for endpoints that return JSON or text with the appropriate\ncontent types. If you just wish to do something with the decoded data (eg. the JSON data) use `transformResponseBody`.\n\nIn addition you can pass all options accepted by `fetch` and these will be used as defaults to any call to `execute`\nor `prepare`.\n\nUsage:\n\n```js\nconst userList = new Action(new UrlPattern('/api/users/'));\nconst users = await userList.execute();\n```\n\nYou can pass `urlArgs` and `query` to resolve the URL:\n\n```js\nconst userDetail = new Action(new UrlPattern('/api/user/:id/'));\n// Resolves to /api/user/1/?showAddresses=true\nconst user = await userDetail.execute({ urlArgs: { id: 1 }, query: 'showAddresses': true });\n```\n\nYou can also pass through any `fetch` options to both the constructor and calls to `execute` and `prepare`\n\n```\n// Always pass through Content-Type header to all calls to userDetail\nconst userDetail = new Action(new UrlPattern('/api/user/:id/'), {\n    'Content-Type': 'application/json'\n});\n// Set other fetch options at execution time\nuserDetail.execute({ urlArgs: { id: 1 }, method: 'PATCH', body: JSON.stringify({ name: 'Dave' }) });\n```\n\nOften you have some global options you want to apply everywhere. This can be set on `Endpoint`\ndirectly:\n\n```js\n// Set default options to pass through to the request init option of `fetch`\nEndpoint.defaultConfig.requestInit = {\n  headers: {\n    'X-CSRFToken': getCsrfToken(),\n  },\n};\n\n// All actions will now use the default headers specified\nuserDetail.execute({ urlArgs: { id: 1 } });\n```\n\nYou can also \"prepare\" an action for execution by calling the `prepare` method. Each call to prepare will\nreturn the same object (ie. it passes strict equality checks) given the same parameters. This is useful when\nyou need to have a stable cache key for an action. For example you may have a React hook that executes\nyour action when things change:\n\n```js\nimport useSWR from 'swr';\n\n...\n\n// prepare the action and pass it to useSWR. useSWR will then call the second parameter (the \"fetcher\")\n// which executes the prepared action.\nconst { data } = useSWR([action.prepare()], (preparedAction) => preparedAction.execute());\n```\n\nYou can wrap this up in a custom hook to make usage more ergonomic:\n\n```js\nimport { useCallback } from 'react';\nimport useSWR from 'swr';\n\n/**\n* Wrapper around useSWR for use with `Endpoint`\n* @param action Endpoint to execute. Can be null if not yet ready to execute\n* @param args Any args to pass through to `prepare`\n* @return Object Same values as returned by useSWR with the addition of `execute` which\n* can be used to execute the action directly, optionally with new arguments.\n*\nexport default function useEndpoint(action, args) {\n  const preparedAction = action ? action.prepare(args) : null;\n  const execute = useCallback(init => preparedAction.execute(init), [preparedAction]);\n  return {\n    execute,\n    ...useSWR(preparedAction && [preparedAction], act => act.execute()),\n  };\n}\n```\n"
    },
    "groups": [
      {
        "title": "Constructors",
        "kind": 512,
        "children": [1888]
      },
      {
        "title": "Properties",
        "kind": 1024,
        "children": [1883, 1887, 1878, 1882, 1877]
      },
      {
        "title": "Methods",
        "kind": 2048,
        "children": [1911, 1902]
      },
      {
        "title": "Object literals",
        "kind": 2097152,
        "children": [1874]
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/rest/src/Endpoint.ts",
        "line": 247,
        "character": 29
      }
    ],
    "childIds": [1888, 1883, 1887, 1878, 1882, 1877, 1911, 1902, 1874]
  },
  {
    "id": 1888,
    "name": "constructor",
    "kind": 512,
    "kindString": "Constructor",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 1889,
        "name": "new Endpoint",
        "kind": 16384,
        "kindString": "Constructor signature",
        "flags": {},
        "parameters": [
          {
            "id": 1890,
            "name": "urlPattern",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "name": "UrlPattern",
              "id": 1800
            }
          },
          {
            "id": 1891,
            "name": "__namedParameters",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "originalName": "__1",
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 1892,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "children": [
                  {
                    "id": 1893,
                    "name": "decodeBody",
                    "kind": 32,
                    "kindString": "Variable",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "js-packages/@prestojs/rest/src/Endpoint.ts",
                        "line": 261,
                        "character": 22
                      }
                    ],
                    "type": {
                      "type": "reflection",
                      "declaration": {
                        "id": 1894,
                        "name": "__type",
                        "kind": 65536,
                        "kindString": "Type literal",
                        "flags": {},
                        "signatures": [
                          {
                            "id": 1895,
                            "name": "__call",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {},
                            "parameters": [
                              {
                                "id": 1896,
                                "name": "res",
                                "kind": 32768,
                                "kindString": "Parameter",
                                "flags": {},
                                "type": {
                                  "type": "reference",
                                  "name": "Response"
                                }
                              }
                            ],
                            "type": {
                              "type": "intrinsic",
                              "name": "any"
                            }
                          }
                        ]
                      }
                    },
                    "defaultValue": " defaultDecodeBody"
                  },
                  {
                    "id": 1901,
                    "name": "requestInit",
                    "kind": 32,
                    "kindString": "Variable",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "js-packages/@prestojs/rest/src/Endpoint.ts",
                        "line": 263,
                        "character": 26
                      }
                    ],
                    "type": {
                      "type": "reference",
                      "name": "requestInit",
                      "id": 1901
                    }
                  },
                  {
                    "id": 1897,
                    "name": "transformResponseBody",
                    "kind": 32,
                    "kindString": "Variable",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "js-packages/@prestojs/rest/src/Endpoint.ts",
                        "line": 262,
                        "character": 33
                      }
                    ],
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "undefined"
                        },
                        {
                          "type": "reflection",
                          "declaration": {
                            "id": 1898,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {},
                            "signatures": [
                              {
                                "id": 1899,
                                "name": "__call",
                                "kind": 4096,
                                "kindString": "Call signature",
                                "flags": {},
                                "parameters": [
                                  {
                                    "id": 1900,
                                    "name": "data",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {},
                                    "type": {
                                      "type": "intrinsic",
                                      "name": "any"
                                    }
                                  }
                                ],
                                "type": {
                                  "type": "intrinsic",
                                  "name": "any"
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ],
                "groups": [
                  {
                    "title": "Variables",
                    "kind": 32,
                    "children": [1893, 1901, 1897]
                  }
                ],
                "sources": [
                  {
                    "fileName": "js-packages/@prestojs/rest/src/Endpoint.ts",
                    "line": 259,
                    "character": 31
                  }
                ]
              }
            },
            "defaultValue": " {}"
          }
        ],
        "type": {
          "type": "reference",
          "name": "Endpoint",
          "id": 1873
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/rest/src/Endpoint.ts",
        "line": 256,
        "character": 36
      }
    ]
  },
  {
    "id": 1883,
    "name": "decodeBody",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isExported": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/rest/src/Endpoint.ts",
        "line": 255,
        "character": 14
      }
    ],
    "type": {
      "type": "reflection",
      "declaration": {
        "id": 1884,
        "name": "__type",
        "kind": 65536,
        "kindString": "Type literal",
        "flags": {},
        "signatures": [
          {
            "id": 1885,
            "name": "__call",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "parameters": [
              {
                "id": 1886,
                "name": "res",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "reference",
                  "name": "Response"
                }
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "any"
            }
          }
        ],
        "sources": [
          {
            "fileName": "js-packages/@prestojs/rest/src/Endpoint.ts",
            "line": 255,
            "character": 15
          }
        ]
      }
    }
  },
  {
    "id": 1887,
    "name": "requestInit",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isExported": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/rest/src/Endpoint.ts",
        "line": 256,
        "character": 15
      }
    ],
    "type": {
      "type": "reference",
      "name": "ExecuteInitOptions",
      "id": 1920
    }
  },
  {
    "id": 1878,
    "name": "transformResponseBody",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isExported": true,
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/rest/src/Endpoint.ts",
        "line": 253,
        "character": 25
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "undefined"
        },
        {
          "type": "reflection",
          "declaration": {
            "id": 1879,
            "name": "__type",
            "kind": 65536,
            "kindString": "Type literal",
            "flags": {},
            "signatures": [
              {
                "id": 1880,
                "name": "__call",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 1881,
                    "name": "data",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "any"
                }
              }
            ]
          }
        }
      ]
    }
  },
  {
    "id": 1882,
    "name": "urlCache",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isExported": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/rest/src/Endpoint.ts",
        "line": 254,
        "character": 12
      }
    ],
    "type": {
      "type": "reference",
      "name": "Map",
      "typeArguments": [
        {
          "type": "intrinsic",
          "name": "string"
        },
        {
          "type": "reference",
          "name": "Map",
          "typeArguments": [
            {
              "type": "reference",
              "name": "__type"
            },
            {
              "type": "reference",
              "name": "PreparedAction",
              "id": 1843
            }
          ]
        }
      ]
    }
  },
  {
    "id": 1877,
    "name": "urlPattern",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isExported": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/rest/src/Endpoint.ts",
        "line": 252,
        "character": 14
      }
    ],
    "type": {
      "type": "reference",
      "name": "UrlPattern",
      "id": 1800
    }
  },
  {
    "id": 1911,
    "name": "execute",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 1912,
        "name": "execute",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Triggers the `fetch` call for an action",
          "text": "This can be called directly or indirectly via `prepare`.\n\nIf the fetch call itself fails (eg. a network error) a `RequestError` will be thrown.\n\nIf the response is a non-2XX response an `ApiError` will be thrown.\n\nIf the call is successful the body will be decoded using `decodeBody`. The default implementation\nwill decode JSON to an object or return text based on the content type. If the content type is\nnot JSON or text the raw `Response` will be returned.\n\nYou can transform the decoded body with `transformResponseBody`. This is useful if you need to do something\nwith the returned data. For example you could add it to a cache or create an instance of a class.\n\n```js\n// Via prepare\nconst preparedAction = action.prepare({ urlArgs: { id: '1' }});\npreparedAction.execute();\n\n// Directly\naction.execute({ urlArgs: { id: '1' }});\n```\n"
        },
        "parameters": [
          {
            "id": 1913,
            "name": "__namedParameters",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "originalName": "__0",
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 1914,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "children": [
                  {
                    "id": 1919,
                    "name": "init",
                    "kind": 32,
                    "kindString": "Variable",
                    "flags": {},
                    "comment": {
                      "text": "Options to pass to `fetch`. These will be merged with any options passed to `Endpoint` directly\nand `Endpoint.defaultConfig.requestInit`. Options passed here will take precedence. Only the `headers` key will be merged if it\nexists in multiple places (eg. defaultConfig may include headers you want on every request). If you need to remove\na header entirely set the value to `undefined`.\n"
                    },
                    "sources": [
                      {
                        "fileName": "js-packages/@prestojs/rest/src/Endpoint.ts",
                        "line": 336,
                        "character": 48
                      }
                    ],
                    "type": {
                      "type": "reference",
                      "name": "init",
                      "id": 1919
                    }
                  },
                  {
                    "id": 1917,
                    "name": "query",
                    "kind": 32,
                    "kindString": "Variable",
                    "flags": {},
                    "comment": {
                      "text": "query params to pass through to `urlPattern.resolve`"
                    },
                    "sources": [
                      {
                        "fileName": "js-packages/@prestojs/rest/src/Endpoint.ts",
                        "line": 336,
                        "character": 39
                      }
                    ],
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "undefined"
                        },
                        {
                          "type": "reflection",
                          "declaration": {
                            "id": 1918,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {}
                          }
                        }
                      ]
                    }
                  },
                  {
                    "id": 1915,
                    "name": "urlArgs",
                    "kind": 32,
                    "kindString": "Variable",
                    "flags": {},
                    "comment": {
                      "text": "args to pass through to `urlPattern.resolve`"
                    },
                    "sources": [
                      {
                        "fileName": "js-packages/@prestojs/rest/src/Endpoint.ts",
                        "line": 336,
                        "character": 27
                      }
                    ],
                    "type": {
                      "type": "reflection",
                      "declaration": {
                        "id": 1916,
                        "name": "__type",
                        "kind": 65536,
                        "kindString": "Type literal",
                        "flags": {}
                      }
                    }
                  }
                ],
                "groups": [
                  {
                    "title": "Variables",
                    "kind": 32,
                    "children": [1919, 1917, 1915]
                  }
                ],
                "sources": [
                  {
                    "fileName": "js-packages/@prestojs/rest/src/Endpoint.ts",
                    "line": 336,
                    "character": 18
                  }
                ]
              }
            },
            "defaultValue": " {}"
          }
        ],
        "type": {
          "type": "reference",
          "name": "Promise",
          "typeArguments": [
            {
              "type": "intrinsic",
              "name": "any"
            }
          ]
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/rest/src/Endpoint.ts",
        "line": 336,
        "character": 17
      }
    ]
  },
  {
    "id": 1902,
    "name": "prepare",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 1903,
        "name": "prepare",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Prepare an action for execution. Given the same parameters returns the same object. This is useful\nwhen using libraries like `useSWR` that accept a parameter that identifies a request and is used\nfor caching but execution is handled by a separate function.",
          "text": "For example to use with `useSWR` you can do:\n\n```js\nconst { data } = useSWR([action.prepare()], (preparedAction) => preparedAction.execute());\n```\n\nIf you just want to call the action directly then you can bypass `prepare` and just call `execute`\ndirectly.\n"
        },
        "parameters": [
          {
            "id": 1904,
            "name": "__namedParameters",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "originalName": "__0",
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 1905,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "children": [
                  {
                    "id": 1910,
                    "name": "init",
                    "kind": 32,
                    "kindString": "Variable",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "js-packages/@prestojs/rest/src/Endpoint.ts",
                        "line": 287,
                        "character": 42
                      }
                    ],
                    "type": {
                      "type": "reference",
                      "name": "init",
                      "id": 1910
                    }
                  },
                  {
                    "id": 1908,
                    "name": "query",
                    "kind": 32,
                    "kindString": "Variable",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "js-packages/@prestojs/rest/src/Endpoint.ts",
                        "line": 287,
                        "character": 33
                      }
                    ],
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "undefined"
                        },
                        {
                          "type": "reflection",
                          "declaration": {
                            "id": 1909,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {}
                          }
                        }
                      ]
                    }
                  },
                  {
                    "id": 1906,
                    "name": "urlArgs",
                    "kind": 32,
                    "kindString": "Variable",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "js-packages/@prestojs/rest/src/Endpoint.ts",
                        "line": 287,
                        "character": 21
                      }
                    ],
                    "type": {
                      "type": "reflection",
                      "declaration": {
                        "id": 1907,
                        "name": "__type",
                        "kind": 65536,
                        "kindString": "Type literal",
                        "flags": {}
                      }
                    }
                  }
                ],
                "groups": [
                  {
                    "title": "Variables",
                    "kind": 32,
                    "children": [1910, 1908, 1906]
                  }
                ],
                "sources": [
                  {
                    "fileName": "js-packages/@prestojs/rest/src/Endpoint.ts",
                    "line": 287,
                    "character": 12
                  }
                ]
              }
            },
            "defaultValue": " {}"
          }
        ],
        "type": {
          "type": "reference",
          "name": "PreparedAction",
          "id": 1843
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/rest/src/Endpoint.ts",
        "line": 287,
        "character": 11
      }
    ]
  },
  {
    "id": 1874,
    "name": "defaultConfig",
    "kind": 2097152,
    "kindString": "Object literal",
    "flags": {
      "isStatic": true,
      "isExported": true
    },
    "groups": [
      {
        "title": "Variables",
        "kind": 32,
        "children": [1875]
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/rest/src/Endpoint.ts",
        "line": 248,
        "character": 24
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "object"
    },
    "childIds": [1875]
  },
  {
    "id": 1875,
    "name": "requestInit",
    "kind": 32,
    "kindString": "Variable",
    "flags": {
      "isExported": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/rest/src/Endpoint.ts",
        "line": 249,
        "character": 19
      }
    ],
    "type": {
      "type": "reflection",
      "declaration": {
        "id": 1876,
        "name": "__type",
        "kind": 65536,
        "kindString": "Type literal",
        "flags": {}
      }
    }
  },
  {
    "id": 1843,
    "name": "PreparedAction",
    "kind": 128,
    "kindString": "Class",
    "flags": {},
    "groups": [
      {
        "title": "Constructors",
        "kind": 512,
        "children": [1847]
      },
      {
        "title": "Properties",
        "kind": 1024,
        "children": [1844, 1845, 1846]
      },
      {
        "title": "Methods",
        "kind": 2048,
        "children": [1852]
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/rest/src/Endpoint.ts",
        "line": 76,
        "character": 20
      }
    ],
    "childIds": [1847, 1844, 1845, 1846, 1852]
  },
  {
    "id": 1847,
    "name": "constructor",
    "kind": 512,
    "kindString": "Constructor",
    "flags": {},
    "signatures": [
      {
        "id": 1848,
        "name": "new PreparedAction",
        "kind": 16384,
        "kindString": "Constructor signature",
        "flags": {},
        "parameters": [
          {
            "id": 1849,
            "name": "action",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "name": "Endpoint",
              "id": 1873
            }
          },
          {
            "id": 1850,
            "name": "urlResolveOptions",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "name": "UrlResolveOptions",
              "id": 1933
            }
          },
          {
            "id": 1851,
            "name": "options",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "name": "ExecuteInitOptions",
              "id": 1920
            }
          }
        ],
        "type": {
          "type": "reference",
          "name": "PreparedAction",
          "id": 1843
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/rest/src/Endpoint.ts",
        "line": 79,
        "character": 41
      }
    ]
  },
  {
    "id": 1844,
    "name": "action",
    "kind": 1024,
    "kindString": "Property",
    "flags": {},
    "sources": [
      {
        "fileName": "js-packages/@prestojs/rest/src/Endpoint.ts",
        "line": 77,
        "character": 10
      }
    ],
    "type": {
      "type": "reference",
      "name": "Endpoint",
      "id": 1873
    }
  },
  {
    "id": 1845,
    "name": "options",
    "kind": 1024,
    "kindString": "Property",
    "flags": {},
    "sources": [
      {
        "fileName": "js-packages/@prestojs/rest/src/Endpoint.ts",
        "line": 78,
        "character": 11
      }
    ],
    "type": {
      "type": "reference",
      "name": "PrepareOptions",
      "id": 1937
    }
  },
  {
    "id": 1846,
    "name": "urlResolveOptions",
    "kind": 1024,
    "kindString": "Property",
    "flags": {},
    "sources": [
      {
        "fileName": "js-packages/@prestojs/rest/src/Endpoint.ts",
        "line": 79,
        "character": 21
      }
    ],
    "type": {
      "type": "reference",
      "name": "UrlResolveOptions",
      "id": 1933
    }
  },
  {
    "id": 1852,
    "name": "execute",
    "kind": 2048,
    "kindString": "Method",
    "flags": {},
    "signatures": [
      {
        "id": 1853,
        "name": "execute",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "parameters": [
          {
            "id": 1854,
            "name": "init",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "name": "ExecuteInitOptions",
              "id": 1920
            },
            "defaultValue": " {}"
          }
        ],
        "type": {
          "type": "reference",
          "name": "Promise",
          "typeArguments": [
            {
              "type": "intrinsic",
              "name": "any"
            }
          ]
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/rest/src/Endpoint.ts",
        "line": 91,
        "character": 11
      }
    ]
  },
  {
    "id": 1868,
    "name": "RequestError",
    "kind": 128,
    "kindString": "Class",
    "flags": {
      "isExported": true
    },
    "groups": [
      {
        "title": "Properties",
        "kind": 1024,
        "children": [1870, 1869, 1871, 1872]
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/rest/src/Endpoint.ts",
        "line": 124,
        "character": 25
      }
    ],
    "extendedTypes": [
      {
        "type": "reference",
        "name": "Error"
      }
    ],
    "childIds": [1870, 1869, 1871, 1872]
  },
  {
    "id": 1870,
    "name": "message",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isExported": true
    },
    "sources": [
      {
        "fileName": "node_modules/typescript/lib/lib.es5.d.ts",
        "line": 974,
        "character": 11
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "string"
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Error.message"
    }
  },
  {
    "id": 1869,
    "name": "name",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isExported": true
    },
    "sources": [
      {
        "fileName": "node_modules/typescript/lib/lib.es5.d.ts",
        "line": 973,
        "character": 8
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "string"
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Error.name"
    }
  },
  {
    "id": 1871,
    "name": "stack",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isExported": true,
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "node_modules/typescript/lib/lib.es5.d.ts",
        "line": 975,
        "character": 9
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "undefined"
        },
        {
          "type": "intrinsic",
          "name": "string"
        }
      ]
    },
    "overwrites": {
      "type": "reference",
      "name": "Error.stack"
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Error.stack"
    }
  },
  {
    "id": 1872,
    "name": "Error",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isStatic": true,
      "isExported": true
    },
    "sources": [
      {
        "fileName": "node_modules/typescript/lib/lib.es5.d.ts",
        "line": 984,
        "character": 17
      }
    ],
    "type": {
      "type": "reference",
      "name": "ErrorConstructor"
    }
  },
  {
    "id": 1923,
    "name": "EndpointOptions",
    "kind": 4194304,
    "kindString": "Type alias",
    "flags": {},
    "sources": [
      {
        "fileName": "js-packages/@prestojs/rest/src/Endpoint.ts",
        "line": 11,
        "character": 20
      }
    ],
    "type": {
      "type": "intersection",
      "types": [
        {
          "type": "reference",
          "name": "ExecuteInitOptions",
          "id": 1920
        },
        {
          "type": "reflection",
          "declaration": {
            "id": 1924,
            "name": "__type",
            "kind": 65536,
            "kindString": "Type literal",
            "flags": {},
            "children": [
              {
                "id": 1925,
                "name": "decodeBody",
                "kind": 32,
                "kindString": "Variable",
                "flags": {
                  "isOptional": true
                },
                "sources": [
                  {
                    "fileName": "js-packages/@prestojs/rest/src/Endpoint.ts",
                    "line": 12,
                    "character": 14
                  }
                ],
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "intrinsic",
                      "name": "undefined"
                    },
                    {
                      "type": "reflection",
                      "declaration": {
                        "id": 1926,
                        "name": "__type",
                        "kind": 65536,
                        "kindString": "Type literal",
                        "flags": {},
                        "signatures": [
                          {
                            "id": 1927,
                            "name": "__call",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {},
                            "parameters": [
                              {
                                "id": 1928,
                                "name": "res",
                                "kind": 32768,
                                "kindString": "Parameter",
                                "flags": {},
                                "type": {
                                  "type": "reference",
                                  "name": "Response"
                                }
                              }
                            ],
                            "type": {
                              "type": "intrinsic",
                              "name": "any"
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "id": 1929,
                "name": "transformResponseBody",
                "kind": 32,
                "kindString": "Variable",
                "flags": {
                  "isOptional": true
                },
                "sources": [
                  {
                    "fileName": "js-packages/@prestojs/rest/src/Endpoint.ts",
                    "line": 13,
                    "character": 25
                  }
                ],
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "intrinsic",
                      "name": "undefined"
                    },
                    {
                      "type": "reflection",
                      "declaration": {
                        "id": 1930,
                        "name": "__type",
                        "kind": 65536,
                        "kindString": "Type literal",
                        "flags": {},
                        "signatures": [
                          {
                            "id": 1931,
                            "name": "__call",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {},
                            "parameters": [
                              {
                                "id": 1932,
                                "name": "data",
                                "kind": 32768,
                                "kindString": "Parameter",
                                "flags": {},
                                "type": {
                                  "type": "intrinsic",
                                  "name": "any"
                                }
                              }
                            ],
                            "type": {
                              "type": "intrinsic",
                              "name": "any"
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ],
            "groups": [
              {
                "title": "Variables",
                "kind": 32,
                "children": [1925, 1929]
              }
            ],
            "sources": [
              {
                "fileName": "js-packages/@prestojs/rest/src/Endpoint.ts",
                "line": 11,
                "character": 43
              }
            ]
          }
        }
      ]
    }
  },
  {
    "id": 1920,
    "name": "ExecuteInitOptions",
    "kind": 4194304,
    "kindString": "Type alias",
    "flags": {},
    "sources": [
      {
        "fileName": "js-packages/@prestojs/rest/src/Endpoint.ts",
        "line": 7,
        "character": 23
      }
    ],
    "type": {
      "type": "intersection",
      "types": [
        {
          "type": "reference",
          "name": "Omit",
          "typeArguments": [
            {
              "type": "reference",
              "name": "RequestInit"
            },
            {
              "type": "stringLiteral",
              "value": "headers"
            }
          ]
        },
        {
          "type": "reflection",
          "declaration": {
            "id": 1921,
            "name": "__type",
            "kind": 65536,
            "kindString": "Type literal",
            "flags": {},
            "children": [
              {
                "id": 1922,
                "name": "headers",
                "kind": 32,
                "kindString": "Variable",
                "flags": {
                  "isOptional": true
                },
                "sources": [
                  {
                    "fileName": "js-packages/@prestojs/rest/src/Endpoint.ts",
                    "line": 8,
                    "character": 11
                  }
                ],
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "reference",
                      "name": "HeadersInit"
                    },
                    {
                      "type": "reference",
                      "name": "Record",
                      "typeArguments": [
                        {
                          "type": "intrinsic",
                          "name": "string"
                        },
                        {
                          "type": "union",
                          "types": [
                            {
                              "type": "intrinsic",
                              "name": "undefined"
                            },
                            {
                              "type": "intrinsic",
                              "name": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              }
            ],
            "groups": [
              {
                "title": "Variables",
                "kind": 32,
                "children": [1922]
              }
            ],
            "sources": [
              {
                "fileName": "js-packages/@prestojs/rest/src/Endpoint.ts",
                "line": 7,
                "character": 56
              }
            ]
          }
        }
      ]
    }
  },
  {
    "id": 1937,
    "name": "PrepareOptions",
    "kind": 4194304,
    "kindString": "Type alias",
    "flags": {},
    "sources": [
      {
        "fileName": "js-packages/@prestojs/rest/src/Endpoint.ts",
        "line": 21,
        "character": 19
      }
    ],
    "type": {
      "type": "intersection",
      "types": [
        {
          "type": "reference",
          "name": "ExecuteInitOptions",
          "id": 1920
        },
        {
          "type": "reference",
          "name": "UrlResolveOptions",
          "id": 1933
        }
      ]
    }
  },
  {
    "id": 1933,
    "name": "UrlResolveOptions",
    "kind": 4194304,
    "kindString": "Type alias",
    "flags": {},
    "sources": [
      {
        "fileName": "js-packages/@prestojs/rest/src/Endpoint.ts",
        "line": 16,
        "character": 22
      }
    ],
    "type": {
      "type": "reflection",
      "declaration": {
        "id": 1934,
        "name": "__type",
        "kind": 65536,
        "kindString": "Type literal",
        "flags": {},
        "children": [
          {
            "id": 1936,
            "name": "query",
            "kind": 32,
            "kindString": "Variable",
            "flags": {
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "js-packages/@prestojs/rest/src/Endpoint.ts",
                "line": 18,
                "character": 9
              }
            ],
            "type": {
              "type": "reference",
              "name": "Record",
              "typeArguments": [
                {
                  "type": "intrinsic",
                  "name": "string"
                },
                {
                  "type": "union",
                  "types": [
                    {
                      "type": "intrinsic",
                      "name": "boolean"
                    },
                    {
                      "type": "intrinsic",
                      "name": "string"
                    },
                    {
                      "type": "intrinsic",
                      "name": "null"
                    },
                    {
                      "type": "intrinsic",
                      "name": "number"
                    }
                  ]
                }
              ]
            }
          },
          {
            "id": 1935,
            "name": "urlArgs",
            "kind": 32,
            "kindString": "Variable",
            "flags": {
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "js-packages/@prestojs/rest/src/Endpoint.ts",
                "line": 17,
                "character": 11
              }
            ],
            "type": {
              "type": "reference",
              "name": "Record",
              "typeArguments": [
                {
                  "type": "intrinsic",
                  "name": "string"
                },
                {
                  "type": "intrinsic",
                  "name": "any"
                }
              ]
            }
          }
        ],
        "groups": [
          {
            "title": "Variables",
            "kind": 32,
            "children": [1936, 1935]
          }
        ],
        "sources": [
          {
            "fileName": "js-packages/@prestojs/rest/src/Endpoint.ts",
            "line": 16,
            "character": 24
          }
        ]
      }
    }
  },
  {
    "id": 1945,
    "name": "defaultDecodeBody",
    "kind": 64,
    "kindString": "Function",
    "flags": {},
    "signatures": [
      {
        "id": 1946,
        "name": "defaultDecodeBody",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Decode body and return content based on Content-Type",
          "text": "If type includes 'json' (eg. application/json) returns decoded json\nIf type includes 'text (eg. text/plain, text/html) returns text\nIf status is 204 or 205 will return null\n\nOtherwise Response object itself is returned"
        },
        "parameters": [
          {
            "id": 1947,
            "name": "response",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "\n"
            },
            "type": {
              "type": "reference",
              "name": "Response"
            }
          }
        ],
        "type": {
          "type": "union",
          "types": [
            {
              "type": "reference",
              "name": "Response"
            },
            {
              "type": "reference",
              "name": "Record",
              "typeArguments": [
                {
                  "type": "intrinsic",
                  "name": "string"
                },
                {
                  "type": "intrinsic",
                  "name": "any"
                }
              ]
            },
            {
              "type": "intrinsic",
              "name": "string"
            },
            {
              "type": "intrinsic",
              "name": "null"
            }
          ]
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/rest/src/Endpoint.ts",
        "line": 136,
        "character": 26
      }
    ]
  },
  {
    "id": 1938,
    "name": "mergeHeaders",
    "kind": 64,
    "kindString": "Function",
    "flags": {},
    "signatures": [
      {
        "id": 1939,
        "name": "mergeHeaders",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Merge two Headers instances together"
        },
        "parameters": [
          {
            "id": 1940,
            "name": "headers1",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "name": "Headers"
            }
          },
          {
            "id": 1941,
            "name": "headers2",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "name": "Headers"
            }
          }
        ],
        "type": {
          "type": "reference",
          "name": "Headers"
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/rest/src/Endpoint.ts",
        "line": 26,
        "character": 21
      }
    ]
  },
  {
    "id": 1942,
    "name": "mergeRequestInit",
    "kind": 64,
    "kindString": "Function",
    "flags": {},
    "signatures": [
      {
        "id": 1943,
        "name": "mergeRequestInit",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Given multiple RequestInit objects merge them into a single RequestInit merging headers\nfrom each one. Does not merge body. The last object passed with the value set takes\nprecedence."
        },
        "parameters": [
          {
            "id": 1944,
            "name": "args",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {
              "isRest": true
            },
            "comment": {
              "text": "\n"
            },
            "type": {
              "type": "array",
              "elementType": {
                "type": "reference",
                "name": "ExecuteInitOptions",
                "id": 1920
              }
            }
          }
        ],
        "type": {
          "type": "reference",
          "name": "RequestInit"
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/rest/src/Endpoint.ts",
        "line": 41,
        "character": 25
      }
    ]
  },
  {
    "id": 1797,
    "name": "@prestojs/routing",
    "kind": 1,
    "kindString": "Package",
    "flags": {
      "isExported": true
    },
    "originalName": "/Users/dave/Development/internal/xenopus/js-packages/@prestojs/routing/src/UrlPattern.ts",
    "comment": {
      "text": "<h1 id=\"routing\">Routing</h1>\n<p>Provides base primitives for dealing with routing.</p>\n<h2 id=\"define-url-patterns\">Define URL Patterns</h2>\n<p>See <a href=\"https://github.com/pillarjs/path-to-regexp\">path-to-regexp</a> for more details on\naccepted format for pattern definitions.</p>\n<pre><code class=\"language-js\"><span class=\"hljs-title\">import</span> { UrlPattern} from <span class=\"hljs-string\">'@prestojs/routing'</span>;\n<span class=\"hljs-keyword\">const</span> userList = <span class=\"hljs-keyword\">new</span> UrlPattern(<span class=\"hljs-string\">'/users/'</span>);\n<span class=\"hljs-keyword\">const</span> userDetail = <span class=\"hljs-keyword\">new</span> UrlPattern(<span class=\"hljs-string\">'/users/:id/'</span>);\n\n<span class=\"hljs-comment\">// Resolve to a URL</span>\nuserList.resolve()\n<span class=\"hljs-comment\">// /users/</span>\nuserDetail.resolve({ <span class=\"hljs-attribute\">id:</span><span class=\"hljs-string\"> 5 });\n// /users</span>/<span class=\"hljs-number\">5</span>/\n<span class=\"hljs-comment\">// Optionally add query parameters</span>\n<span class=\"hljs-built_in\">url</span>.resolve({ <span class=\"hljs-attribute\">id:</span><span class=\"hljs-string\"> 5 }, { query</span>: { <span class=\"hljs-attribute\">showAddresses</span>: <span class=\"hljs-literal\">true</span> }});\n<span class=\"hljs-comment\">// /users/5/?showAddresses=true</span></code></pre>\n<h2 id=\"define-named-urls\">Define named URLs</h2>\n<p>This allows you to lookup URLs based on a name</p>\n<pre><code class=\"language-js\"><span class=\"hljs-comment\">// urls.js</span>\n<span class=\"hljs-keyword\">import</span> { NamedUrlPatterns, UrlPattern} from <span class=\"hljs-string\">'@prestojs/routing'</span>;\n\nexport <span class=\"hljs-keyword\">default</span> <span class=\"hljs-keyword\">new</span> NamedUrlPatterns({\n    <span class=\"hljs-string\">'user-list'</span>: <span class=\"hljs-keyword\">new</span> UrlPattern(<span class=\"hljs-string\">'/users/'</span>),\n    <span class=\"hljs-string\">'user-detail'</span>: <span class=\"hljs-keyword\">new</span> UrlPattern(<span class=\"hljs-string\">'/users/:id/'</span>),\n});\n\n<span class=\"hljs-comment\">// ... elsewhere</span>\n<span class=\"hljs-keyword\">import</span> namedUrls from <span class=\"hljs-string\">'../urls.js'</span>;\n\nnamedUrls.resolve(<span class=\"hljs-string\">'user-list'</span>);\n<span class=\"hljs-comment\">// /users/</span>\nnamedUrls.resolve(<span class=\"hljs-string\">'user-detail'</span>, { <span class=\"hljs-string\">id:</span> <span class=\"hljs-number\">5</span> }, { <span class=\"hljs-string\">query:</span> { <span class=\"hljs-string\">showAddresses:</span> <span class=\"hljs-literal\">true</span> }});\n<span class=\"hljs-comment\">// /users/5/?showAddresses=true</span>\n\n<span class=\"hljs-comment\">// Or to get the pattern direclty without resolving URL</span>\nnamedUrls.get(<span class=\"hljs-string\">'user-list'</span>)\n<span class=\"hljs-comment\">// UrlPattern('/users/')</span></code></pre>\n"
    },
    "groups": [
      {
        "title": "Classes",
        "kind": 128,
        "children": [1816, 1824, 1800]
      },
      {
        "title": "Interfaces",
        "kind": 256,
        "children": [1798]
      },
      {
        "title": "Type aliases",
        "kind": 4194304,
        "children": [1837]
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/routing/src/UrlPattern.ts",
        "line": 1,
        "character": 0
      }
    ],
    "childIds": [1816, 1824, 1800, 1798, 1837]
  },
  {
    "id": 1816,
    "name": "NamedUrlNotFoundError",
    "kind": 128,
    "kindString": "Class",
    "flags": {
      "isExported": true
    },
    "groups": [
      {
        "title": "Constructors",
        "kind": 512,
        "children": [1817]
      },
      {
        "title": "Properties",
        "kind": 1024,
        "children": [1821, 1820, 1822, 1823]
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/routing/src/NamedUrlPatterns.ts",
        "line": 7,
        "character": 34
      }
    ],
    "extendedTypes": [
      {
        "type": "reference",
        "name": "Error"
      }
    ],
    "childIds": [1817, 1821, 1820, 1822, 1823]
  },
  {
    "id": 1817,
    "name": "constructor",
    "kind": 512,
    "kindString": "Constructor",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 1818,
        "name": "new NamedUrlNotFoundError",
        "kind": 16384,
        "kindString": "Constructor signature",
        "flags": {},
        "parameters": [
          {
            "id": 1819,
            "name": "name",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "intrinsic",
              "name": "any"
            }
          }
        ],
        "type": {
          "type": "reference",
          "name": "NamedUrlNotFoundError",
          "id": 1816
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/routing/src/NamedUrlPatterns.ts",
        "line": 7,
        "character": 50
      }
    ]
  },
  {
    "id": 1821,
    "name": "message",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isExported": true
    },
    "sources": [
      {
        "fileName": "node_modules/typescript/lib/lib.es5.d.ts",
        "line": 974,
        "character": 11
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "string"
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Error.message"
    }
  },
  {
    "id": 1820,
    "name": "name",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isExported": true
    },
    "sources": [
      {
        "fileName": "node_modules/typescript/lib/lib.es5.d.ts",
        "line": 973,
        "character": 8
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "string"
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Error.name"
    }
  },
  {
    "id": 1822,
    "name": "stack",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isExported": true,
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "node_modules/typescript/lib/lib.es5.d.ts",
        "line": 975,
        "character": 9
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "undefined"
        },
        {
          "type": "intrinsic",
          "name": "string"
        }
      ]
    },
    "overwrites": {
      "type": "reference",
      "name": "Error.stack"
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Error.stack"
    }
  },
  {
    "id": 1823,
    "name": "Error",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isStatic": true,
      "isExported": true
    },
    "sources": [
      {
        "fileName": "node_modules/typescript/lib/lib.es5.d.ts",
        "line": 984,
        "character": 17
      }
    ],
    "type": {
      "type": "reference",
      "name": "ErrorConstructor"
    }
  },
  {
    "id": 1824,
    "name": "NamedUrlPatterns",
    "kind": 128,
    "kindString": "Class",
    "flags": {
      "isExported": true
    },
    "comment": {
      "shortText": "Define a lookup from a name to a URL pattern.",
      "text": "Provides shortcut to resolve a pattern based on name.\n\nUsage:\n\n```js\n// urls.js\nimport { NamedUrlPatterns, UrlPattern} from '@prestojs/routing';\n\nexport default new NamedUrlPatterns({\n  'user-list': new UrlPattern('/users/'),\n  'user-detail': new UrlPattern('/users/:id/'),\n});\n\n// ... elsewhere\nimport namedUrls from '../urls.js';\n\nnamedUrls.resolve('user-list');\n// /users/\nnamedUrls.resolve('user-detail', { id: 5 }, { query: { showAddresses: true }});\n// /users/5/?showAddresses=true\n\n// Or to get the pattern direclty without resolving URL\nnamedUrls.get('user-list')\n// UrlPattern('/users/')\n```\n"
    },
    "groups": [
      {
        "title": "Constructors",
        "kind": 512,
        "children": [1826]
      },
      {
        "title": "Properties",
        "kind": 1024,
        "children": [1825]
      },
      {
        "title": "Methods",
        "kind": 2048,
        "children": [1829, 1832]
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/routing/src/NamedUrlPatterns.ts",
        "line": 42,
        "character": 37
      }
    ],
    "childIds": [1826, 1825, 1829, 1832]
  },
  {
    "id": 1826,
    "name": "constructor",
    "kind": 512,
    "kindString": "Constructor",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 1827,
        "name": "new NamedUrlPatterns",
        "kind": 16384,
        "kindString": "Constructor signature",
        "flags": {},
        "parameters": [
          {
            "id": 1828,
            "name": "urls",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "name": "UrlPatternMapping",
              "id": 1837
            }
          }
        ],
        "type": {
          "type": "reference",
          "name": "NamedUrlPatterns",
          "id": 1824
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/routing/src/NamedUrlPatterns.ts",
        "line": 43,
        "character": 35
      }
    ]
  },
  {
    "id": 1825,
    "name": "urlPatterns",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isExported": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/routing/src/NamedUrlPatterns.ts",
        "line": 43,
        "character": 15
      }
    ],
    "type": {
      "type": "reference",
      "name": "UrlPatternMapping",
      "id": 1837
    }
  },
  {
    "id": 1829,
    "name": "get",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 1830,
        "name": "get",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Get the UrlPattern for the specified name"
        },
        "parameters": [
          {
            "id": 1831,
            "name": "name",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "Name of pattern to retrieve\n"
            },
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          }
        ],
        "type": {
          "type": "union",
          "types": [
            {
              "type": "reference",
              "name": "UrlPattern",
              "id": 1800
            },
            {
              "type": "intrinsic",
              "name": "null"
            }
          ]
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/routing/src/NamedUrlPatterns.ts",
        "line": 62,
        "character": 7
      }
    ]
  },
  {
    "id": 1832,
    "name": "reverse",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 1833,
        "name": "reverse",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Reverse a UrlPattern by it's name"
        },
        "parameters": [
          {
            "id": 1834,
            "name": "name",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "Name of the pattern to resolve"
            },
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          },
          {
            "id": 1835,
            "name": "kwargs",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "Arguments to replace in pattern, if any"
            },
            "type": {
              "type": "reference",
              "name": "__type"
            },
            "defaultValue": " {}"
          },
          {
            "id": 1836,
            "name": "options",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "Extra options to pass through to `UrlPattern.resolve`\n"
            },
            "type": {
              "type": "reference",
              "name": "ResolveOptions",
              "id": 1798
            },
            "defaultValue": " {}"
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "string"
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/routing/src/NamedUrlPatterns.ts",
        "line": 72,
        "character": 11
      }
    ]
  },
  {
    "id": 1800,
    "name": "UrlPattern",
    "kind": 128,
    "kindString": "Class",
    "flags": {
      "isExported": true
    },
    "comment": {
      "shortText": "Allows definition of URL as a pattern with ability to resolve it to a URL by performing argument replacement",
      "text": "Patterns are defined using the [path-to-regexp](https://github.com/pillarjs/path-to-regexp) library\n\nUsage:\n\n```js\nconst url = new UrlPattern('/users/:id/'),\nurl.resolve({ id: 5 });\n// /users/5/\nurl.resolve({ id: 5 }, { query: { showAddresses: true }});\n// /users/5/?showAddresses=true\n```\n"
    },
    "groups": [
      {
        "title": "Constructors",
        "kind": 512,
        "children": [1806]
      },
      {
        "title": "Properties",
        "kind": 1024,
        "children": [1805, 1801, 1803, 1804, 1802]
      },
      {
        "title": "Methods",
        "kind": 2048,
        "children": [1809]
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/routing/src/UrlPattern.ts",
        "line": 23,
        "character": 31
      }
    ],
    "childIds": [1806, 1805, 1801, 1803, 1804, 1802, 1809]
  },
  {
    "id": 1806,
    "name": "constructor",
    "kind": 512,
    "kindString": "Constructor",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 1807,
        "name": "new UrlPattern",
        "kind": 16384,
        "kindString": "Constructor signature",
        "flags": {},
        "parameters": [
          {
            "id": 1808,
            "name": "pattern",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          }
        ],
        "type": {
          "type": "reference",
          "name": "UrlPattern",
          "id": 1800
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/routing/src/UrlPattern.ts",
        "line": 28,
        "character": 16
      }
    ]
  },
  {
    "id": 1805,
    "name": "keys",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isExported": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/routing/src/UrlPattern.ts",
        "line": 28,
        "character": 8
      }
    ],
    "type": {
      "type": "array",
      "elementType": {
        "type": "reference",
        "name": "Key"
      }
    }
  },
  {
    "id": 1801,
    "name": "pattern",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isExported": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/routing/src/UrlPattern.ts",
        "line": 24,
        "character": 11
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "string"
    }
  },
  {
    "id": 1803,
    "name": "requiredArgNames",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isExported": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/routing/src/UrlPattern.ts",
        "line": 26,
        "character": 20
      }
    ],
    "type": {
      "type": "array",
      "elementType": {
        "type": "intrinsic",
        "name": "string"
      }
    }
  },
  {
    "id": 1804,
    "name": "toPath",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isExported": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/routing/src/UrlPattern.ts",
        "line": 27,
        "character": 10
      }
    ],
    "type": {
      "type": "reference",
      "name": "PathFunction"
    }
  },
  {
    "id": 1802,
    "name": "validArgNames",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isExported": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/routing/src/UrlPattern.ts",
        "line": 25,
        "character": 17
      }
    ],
    "type": {
      "type": "array",
      "elementType": {
        "type": "intrinsic",
        "name": "string"
      }
    }
  },
  {
    "id": 1809,
    "name": "resolve",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 1810,
        "name": "resolve",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "parameters": [
          {
            "id": 1811,
            "name": "kwargs",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "name": "__type"
            },
            "defaultValue": " {}"
          },
          {
            "id": 1812,
            "name": "__namedParameters",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "originalName": "__1",
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 1813,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "children": [
                  {
                    "id": 1814,
                    "name": "query",
                    "kind": 32,
                    "kindString": "Variable",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "js-packages/@prestojs/routing/src/UrlPattern.ts",
                        "line": 41,
                        "character": 36
                      }
                    ],
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "undefined"
                        },
                        {
                          "type": "reference",
                          "name": "__type"
                        }
                      ]
                    }
                  }
                ],
                "groups": [
                  {
                    "title": "Variables",
                    "kind": 32,
                    "children": [1814]
                  }
                ],
                "sources": [
                  {
                    "fileName": "js-packages/@prestojs/routing/src/UrlPattern.ts",
                    "line": 41,
                    "character": 28
                  }
                ]
              }
            },
            "defaultValue": " {}"
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "string"
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/routing/src/UrlPattern.ts",
        "line": 41,
        "character": 11
      }
    ]
  },
  {
    "id": 1798,
    "name": "ResolveOptions",
    "kind": 256,
    "kindString": "Interface",
    "flags": {
      "isExported": true
    },
    "groups": [
      {
        "title": "Properties",
        "kind": 1024,
        "children": [1799]
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/routing/src/UrlPattern.ts",
        "line": 4,
        "character": 31
      }
    ],
    "childIds": [1799]
  },
  {
    "id": 1799,
    "name": "query",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isExported": true,
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/routing/src/UrlPattern.ts",
        "line": 5,
        "character": 9
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "undefined"
        },
        {
          "type": "reference",
          "name": "__type"
        }
      ]
    }
  },
  {
    "id": 1837,
    "name": "UrlPatternMapping",
    "kind": 4194304,
    "kindString": "Type alias",
    "flags": {},
    "sources": [
      {
        "fileName": "js-packages/@prestojs/routing/src/NamedUrlPatterns.ts",
        "line": 3,
        "character": 22
      }
    ],
    "type": {
      "type": "reflection",
      "declaration": {
        "id": 1838,
        "name": "__type",
        "kind": 65536,
        "kindString": "Type literal",
        "flags": {},
        "indexSignature": [
          {
            "id": 1839,
            "name": "__index",
            "kind": 8192,
            "kindString": "Index signature",
            "flags": {},
            "parameters": [
              {
                "id": 1840,
                "name": "urlName",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              }
            ],
            "type": {
              "type": "reference",
              "name": "UrlPattern",
              "id": 1800
            }
          }
        ],
        "sources": [
          {
            "fileName": "js-packages/@prestojs/routing/src/NamedUrlPatterns.ts",
            "line": 3,
            "character": 24
          }
        ]
      }
    }
  },
  {
    "id": 1539,
    "name": "@prestojs/ui",
    "kind": 1,
    "kindString": "Package",
    "flags": {
      "isExported": true
    },
    "originalName": "/Users/dave/Development/internal/xenopus/js-packages/@prestojs/ui/src/FieldWidgetInterface.ts",
    "comment": {
      "text": "<h1 id=\"ui\">UI</h1>\n<p>Base types and components for UI integration with prestojs.</p>\n<p>To use wrap your app with the <code>UiProvider</code>:</p>\n<pre><code class=\"language-js\"><span class=\"hljs-keyword\">import</span> { render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>;\n<span class=\"hljs-keyword\">import</span> { UiProvider } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@prestojs/ui'</span>;\n<span class=\"hljs-keyword\">import</span> { getWidgetForField <span class=\"hljs-keyword\">as</span> getDateWidget} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'customdatepackage'</span>;\n<span class=\"hljs-keyword\">import</span> { getWidgetForField <span class=\"hljs-keyword\">as</span> getAntdWidget } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@prestojs/ui-antd'</span>;\n\n<span class=\"hljs-keyword\">import</span> App <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./App'</span>;\n\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">getWidgetForField</span>(<span class=\"hljs-params\">field</span>) </span>{\n    <span class=\"hljs-comment\">// Add any app specific customisations here</span>\n    <span class=\"hljs-keyword\">if</span> (field <span class=\"hljs-keyword\">instanceof</span> BooleanField) {\n        <span class=\"hljs-keyword\">return</span> CustomBooleanWidget; \n    }\n    <span class=\"hljs-comment\">// Otherwise fall back to specific UI library defaults</span>\n    <span class=\"hljs-keyword\">let</span> widget;\n    <span class=\"hljs-keyword\">if</span> (widget = getDateWidget(field)) <span class=\"hljs-keyword\">return</span> widget;\n    <span class=\"hljs-keyword\">if</span> (widget = getAntdWidget(field)) <span class=\"hljs-keyword\">return</span> widget;\n\n    <span class=\"hljs-comment\">// Fall through to any parent UiProvider. If there is none or they</span>\n    <span class=\"hljs-comment\">// don't provide a widget for this field then an error will be thrown</span>\n}\n\n\nrender(\n    <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">UiProvider</span> <span class=\"hljs-attr\">getWidgetForField</span>=<span class=\"hljs-string\">{getWidgetFromField}</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">App</span> /&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">UiProvider</span>&gt;</span></span>,\n    <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">'root'</span>)\n);</code></pre>\n"
    },
    "groups": [
      {
        "title": "Interfaces",
        "kind": 256,
        "children": [1578, 1540, 1566, 1586, 1582, 1560]
      },
      {
        "title": "Type aliases",
        "kind": 4194304,
        "children": [1574, 1602, 1608, 1590, 1596, 1615]
      },
      {
        "title": "Variables",
        "kind": 32,
        "children": [1614, 1715, 1714]
      },
      {
        "title": "Functions",
        "kind": 64,
        "children": [
          1628,
          1635,
          1641,
          1649,
          1657,
          1731,
          1722,
          1665,
          1680,
          1672,
          1692,
          1706,
          1621,
          1716,
          1625
        ]
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/ui/src/FieldWidgetInterface.ts",
        "line": 1,
        "character": 0
      }
    ],
    "childIds": [
      1578,
      1540,
      1566,
      1586,
      1582,
      1560,
      1574,
      1602,
      1608,
      1590,
      1596,
      1615,
      1614,
      1715,
      1714,
      1628,
      1635,
      1641,
      1649,
      1657,
      1731,
      1722,
      1665,
      1680,
      1672,
      1692,
      1706,
      1621,
      1716,
      1625
    ]
  },
  {
    "id": 1578,
    "name": "FormItemProps",
    "kind": 256,
    "kindString": "Interface",
    "flags": {
      "isExported": true
    },
    "groups": [
      {
        "title": "Properties",
        "kind": 1024,
        "children": [1580, 1581, 1579]
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/ui/src/UiProvider.tsx",
        "line": 21,
        "character": 30
      }
    ],
    "childIds": [1580, 1581, 1579]
  },
  {
    "id": 1580,
    "name": "help",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isExported": true,
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/ui/src/UiProvider.tsx",
        "line": 23,
        "character": 8
      }
    ],
    "type": {
      "type": "reference",
      "name": "React.ReactNode"
    }
  },
  {
    "id": 1581,
    "name": "label",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isExported": true,
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/ui/src/UiProvider.tsx",
        "line": 24,
        "character": 9
      }
    ],
    "type": {
      "type": "reference",
      "name": "React.ReactNode"
    }
  },
  {
    "id": 1579,
    "name": "required",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isExported": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/ui/src/UiProvider.tsx",
        "line": 22,
        "character": 12
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "boolean"
    }
  },
  {
    "id": 1540,
    "name": "InputProps",
    "kind": 256,
    "kindString": "Interface",
    "flags": {
      "isExported": true
    },
    "typeParameter": [
      {
        "id": 1541,
        "name": "FieldValue",
        "kind": 131072,
        "kindString": "Type parameter",
        "flags": {}
      },
      {
        "id": 1542,
        "name": "T",
        "kind": 131072,
        "kindString": "Type parameter",
        "flags": {},
        "type": {
          "type": "reference",
          "name": "HTMLElement"
        }
      }
    ],
    "groups": [
      {
        "title": "Properties",
        "kind": 1024,
        "children": [1558, 1559, 1543, 1544, 1548, 1552, 1556, 1557]
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/ui/src/FieldWidgetInterface.ts",
        "line": 4,
        "character": 27
      }
    ],
    "childIds": [1558, 1559, 1543, 1544, 1548, 1552, 1556, 1557]
  },
  {
    "id": 1558,
    "name": "checked",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isExported": true,
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/ui/src/FieldWidgetInterface.ts",
        "line": 11,
        "character": 11
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "undefined"
        },
        {
          "type": "intrinsic",
          "name": "false"
        },
        {
          "type": "intrinsic",
          "name": "true"
        }
      ]
    }
  },
  {
    "id": 1559,
    "name": "multiple",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isExported": true,
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/ui/src/FieldWidgetInterface.ts",
        "line": 12,
        "character": 12
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "undefined"
        },
        {
          "type": "intrinsic",
          "name": "false"
        },
        {
          "type": "intrinsic",
          "name": "true"
        }
      ]
    }
  },
  {
    "id": 1543,
    "name": "name",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isExported": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/ui/src/FieldWidgetInterface.ts",
        "line": 5,
        "character": 8
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "string"
    }
  },
  {
    "id": 1544,
    "name": "onBlur",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isExported": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/ui/src/FieldWidgetInterface.ts",
        "line": 6,
        "character": 10
      }
    ],
    "type": {
      "type": "reflection",
      "declaration": {
        "id": 1545,
        "name": "__type",
        "kind": 65536,
        "kindString": "Type literal",
        "flags": {},
        "signatures": [
          {
            "id": 1546,
            "name": "__call",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "parameters": [
              {
                "id": 1547,
                "name": "event",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {
                  "isOptional": true
                },
                "type": {
                  "type": "reference",
                  "name": "React.FocusEvent",
                  "typeArguments": [
                    {
                      "type": "typeParameter",
                      "name": "T",
                      "constraint": {
                        "type": "reference",
                        "name": "HTMLElement"
                      }
                    }
                  ]
                }
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "void"
            }
          }
        ],
        "sources": [
          {
            "fileName": "js-packages/@prestojs/ui/src/FieldWidgetInterface.ts",
            "line": 6,
            "character": 11
          }
        ]
      }
    }
  },
  {
    "id": 1548,
    "name": "onChange",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isExported": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/ui/src/FieldWidgetInterface.ts",
        "line": 7,
        "character": 12
      }
    ],
    "type": {
      "type": "reflection",
      "declaration": {
        "id": 1549,
        "name": "__type",
        "kind": 65536,
        "kindString": "Type literal",
        "flags": {},
        "signatures": [
          {
            "id": 1550,
            "name": "__call",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "parameters": [
              {
                "id": 1551,
                "name": "event",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "reference",
                      "name": "ChangeEvent",
                      "typeArguments": [
                        {
                          "type": "typeParameter",
                          "name": "T",
                          "constraint": {
                            "type": "reference",
                            "name": "HTMLElement"
                          }
                        }
                      ]
                    },
                    {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  ]
                }
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "void"
            }
          }
        ],
        "sources": [
          {
            "fileName": "js-packages/@prestojs/ui/src/FieldWidgetInterface.ts",
            "line": 7,
            "character": 13
          }
        ]
      }
    }
  },
  {
    "id": 1552,
    "name": "onFocus",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isExported": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/ui/src/FieldWidgetInterface.ts",
        "line": 8,
        "character": 11
      }
    ],
    "type": {
      "type": "reflection",
      "declaration": {
        "id": 1553,
        "name": "__type",
        "kind": 65536,
        "kindString": "Type literal",
        "flags": {},
        "signatures": [
          {
            "id": 1554,
            "name": "__call",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "parameters": [
              {
                "id": 1555,
                "name": "event",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {
                  "isOptional": true
                },
                "type": {
                  "type": "reference",
                  "name": "React.FocusEvent",
                  "typeArguments": [
                    {
                      "type": "typeParameter",
                      "name": "T",
                      "constraint": {
                        "type": "reference",
                        "name": "HTMLElement"
                      }
                    }
                  ]
                }
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "void"
            }
          }
        ],
        "sources": [
          {
            "fileName": "js-packages/@prestojs/ui/src/FieldWidgetInterface.ts",
            "line": 8,
            "character": 12
          }
        ]
      }
    }
  },
  {
    "id": 1556,
    "name": "type",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isExported": true,
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/ui/src/FieldWidgetInterface.ts",
        "line": 9,
        "character": 8
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "undefined"
        },
        {
          "type": "intrinsic",
          "name": "string"
        }
      ]
    }
  },
  {
    "id": 1557,
    "name": "value",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isExported": true,
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/ui/src/FieldWidgetInterface.ts",
        "line": 10,
        "character": 9
      }
    ],
    "type": {
      "type": "reference",
      "name": "FieldValue",
      "id": 1541
    }
  },
  {
    "id": 1566,
    "name": "RangedWidgetProps",
    "kind": 256,
    "kindString": "Interface",
    "flags": {
      "isExported": true
    },
    "typeParameter": [
      {
        "id": 1567,
        "name": "FieldValue",
        "kind": 131072,
        "kindString": "Type parameter",
        "flags": {}
      },
      {
        "id": 1568,
        "name": "T",
        "kind": 131072,
        "kindString": "Type parameter",
        "flags": {},
        "type": {
          "type": "reference",
          "name": "HTMLElement"
        }
      },
      {
        "id": 1569,
        "name": "P",
        "kind": 131072,
        "kindString": "Type parameter",
        "flags": {}
      }
    ],
    "groups": [
      {
        "title": "Properties",
        "kind": 1024,
        "children": [1570, 1573, 1572, 1571]
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/ui/src/FieldWidgetInterface.ts",
        "line": 21,
        "character": 34
      }
    ],
    "childIds": [1570, 1573, 1572, 1571]
  },
  {
    "id": 1570,
    "name": "lowerInput",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isExported": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/ui/src/FieldWidgetInterface.ts",
        "line": 22,
        "character": 14
      }
    ],
    "type": {
      "type": "typeParameter",
      "name": "P"
    }
  },
  {
    "id": 1573,
    "name": "meta",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isExported": true,
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/ui/src/FieldWidgetInterface.ts",
        "line": 25,
        "character": 8
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "undefined"
        },
        {
          "type": "reference",
          "name": "__type"
        }
      ]
    }
  },
  {
    "id": 1572,
    "name": "separator",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isExported": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/ui/src/FieldWidgetInterface.ts",
        "line": 24,
        "character": 13
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "string"
    }
  },
  {
    "id": 1571,
    "name": "upperInput",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isExported": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/ui/src/FieldWidgetInterface.ts",
        "line": 23,
        "character": 14
      }
    ],
    "type": {
      "type": "typeParameter",
      "name": "P"
    }
  },
  {
    "id": 1586,
    "name": "TopLevelUiContextValue",
    "kind": 256,
    "kindString": "Interface",
    "flags": {
      "isExported": true
    },
    "groups": [
      {
        "title": "Properties",
        "kind": 1024,
        "children": [1589, 1588, 1587]
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/ui/src/UiProvider.tsx",
        "line": 37,
        "character": 39
      }
    ],
    "childIds": [1589, 1588, 1587]
  },
  {
    "id": 1589,
    "name": "formItemComponent",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isExported": true,
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/ui/src/UiProvider.tsx",
        "line": 41,
        "character": 21
      }
    ],
    "type": {
      "type": "reference",
      "name": "React.ComponentType",
      "typeArguments": [
        {
          "type": "reference",
          "name": "FormItemProps",
          "id": 1578
        }
      ]
    }
  },
  {
    "id": 1588,
    "name": "getFormatterForField",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isExported": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/ui/src/UiProvider.tsx",
        "line": 40,
        "character": 24
      }
    ],
    "type": {
      "type": "reference",
      "name": "GetFormatterForField",
      "id": 1602
    }
  },
  {
    "id": 1587,
    "name": "getWidgetForField",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isExported": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/ui/src/UiProvider.tsx",
        "line": 39,
        "character": 21
      }
    ],
    "type": {
      "type": "reference",
      "name": "GetWidgetForField",
      "id": 1590
    }
  },
  {
    "id": 1582,
    "name": "UiContextValue",
    "kind": 256,
    "kindString": "Interface",
    "flags": {
      "isExported": true
    },
    "groups": [
      {
        "title": "Properties",
        "kind": 1024,
        "children": [1585, 1584, 1583]
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/ui/src/UiProvider.tsx",
        "line": 27,
        "character": 31
      }
    ],
    "childIds": [1585, 1584, 1583]
  },
  {
    "id": 1585,
    "name": "formItemComponent",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isExported": true,
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/ui/src/UiProvider.tsx",
        "line": 34,
        "character": 21
      }
    ],
    "type": {
      "type": "reference",
      "name": "React.ComponentType",
      "typeArguments": [
        {
          "type": "reference",
          "name": "FormItemProps",
          "id": 1578
        }
      ]
    }
  },
  {
    "id": 1584,
    "name": "getFormatterForField",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isExported": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/ui/src/UiProvider.tsx",
        "line": 33,
        "character": 24
      }
    ],
    "type": {
      "type": "reference",
      "name": "GetFormatterForFieldWithNull",
      "id": 1608
    }
  },
  {
    "id": 1583,
    "name": "getWidgetForField",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isExported": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/ui/src/UiProvider.tsx",
        "line": 32,
        "character": 21
      }
    ],
    "type": {
      "type": "reference",
      "name": "GetWidgetForFieldWithNull",
      "id": 1596
    }
  },
  {
    "id": 1560,
    "name": "WidgetProps",
    "kind": 256,
    "kindString": "Interface",
    "flags": {
      "isExported": true
    },
    "typeParameter": [
      {
        "id": 1561,
        "name": "FieldValue",
        "kind": 131072,
        "kindString": "Type parameter",
        "flags": {}
      },
      {
        "id": 1562,
        "name": "T",
        "kind": 131072,
        "kindString": "Type parameter",
        "flags": {},
        "type": {
          "type": "reference",
          "name": "HTMLElement"
        }
      }
    ],
    "groups": [
      {
        "title": "Properties",
        "kind": 1024,
        "children": [1565, 1563, 1564]
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/ui/src/FieldWidgetInterface.ts",
        "line": 15,
        "character": 28
      }
    ],
    "childIds": [1565, 1563, 1564]
  },
  {
    "id": 1565,
    "name": "choices",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isExported": true,
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/ui/src/FieldWidgetInterface.ts",
        "line": 18,
        "character": 11
      }
    ],
    "type": {
      "type": "reference",
      "name": "Map",
      "typeArguments": [
        {
          "type": "typeParameter",
          "name": "FieldValue"
        },
        {
          "type": "intrinsic",
          "name": "string"
        }
      ]
    }
  },
  {
    "id": 1563,
    "name": "input",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isExported": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/ui/src/FieldWidgetInterface.ts",
        "line": 16,
        "character": 9
      }
    ],
    "type": {
      "type": "reference",
      "name": "InputProps",
      "id": 1540,
      "typeArguments": [
        {
          "type": "typeParameter",
          "name": "FieldValue"
        },
        {
          "type": "typeParameter",
          "name": "T",
          "constraint": {
            "type": "reference",
            "name": "HTMLElement"
          }
        }
      ]
    }
  },
  {
    "id": 1564,
    "name": "meta",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isExported": true,
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/ui/src/FieldWidgetInterface.ts",
        "line": 17,
        "character": 8
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "undefined"
        },
        {
          "type": "reference",
          "name": "__type"
        }
      ]
    }
  },
  {
    "id": 1574,
    "name": "FieldWidgetType",
    "kind": 4194304,
    "kindString": "Type alias",
    "flags": {
      "isExported": true
    },
    "typeParameter": [
      {
        "id": 1575,
        "name": "FieldValue",
        "kind": 131072,
        "kindString": "Type parameter",
        "flags": {}
      },
      {
        "id": 1576,
        "name": "T",
        "kind": 131072,
        "kindString": "Type parameter",
        "flags": {},
        "type": {
          "type": "reference",
          "name": "HTMLElement"
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/ui/src/FieldWidgetInterface.ts",
        "line": 28,
        "character": 27
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "reference",
          "name": "React.ComponentType",
          "typeArguments": [
            {
              "type": "union",
              "types": [
                {
                  "type": "reference",
                  "name": "WidgetProps",
                  "id": 1560,
                  "typeArguments": [
                    {
                      "type": "typeParameter",
                      "name": "FieldValue"
                    },
                    {
                      "type": "typeParameter",
                      "name": "T",
                      "constraint": {
                        "type": "reference",
                        "name": "HTMLElement"
                      }
                    }
                  ]
                },
                {
                  "type": "reference",
                  "name": "RangedWidgetProps",
                  "id": 1566,
                  "typeArguments": [
                    {
                      "type": "typeParameter",
                      "name": "FieldValue"
                    },
                    {
                      "type": "typeParameter",
                      "name": "T",
                      "constraint": {
                        "type": "reference",
                        "name": "HTMLElement"
                      }
                    },
                    {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "stringLiteral",
          "value": "input"
        },
        {
          "type": "stringLiteral",
          "value": "select"
        },
        {
          "type": "stringLiteral",
          "value": "textarea"
        }
      ]
    }
  },
  {
    "id": 1602,
    "name": "GetFormatterForField",
    "kind": 4194304,
    "kindString": "Type alias",
    "flags": {},
    "sources": [
      {
        "fileName": "js-packages/@prestojs/ui/src/UiProvider.tsx",
        "line": 13,
        "character": 25
      }
    ],
    "type": {
      "type": "reflection",
      "declaration": {
        "id": 1603,
        "name": "__type",
        "kind": 65536,
        "kindString": "Type literal",
        "flags": {},
        "signatures": [
          {
            "id": 1604,
            "name": "__call",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "typeParameter": [
              {
                "id": 1605,
                "name": "FieldValue",
                "kind": 131072,
                "kindString": "Type parameter",
                "flags": {}
              },
              {
                "id": 1606,
                "name": "T",
                "kind": 131072,
                "kindString": "Type parameter",
                "flags": {},
                "type": {
                  "type": "reference",
                  "name": "HTMLElement"
                }
              }
            ],
            "parameters": [
              {
                "id": 1607,
                "name": "field",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "reference",
                  "name": "Field",
                  "id": 24,
                  "typeArguments": [
                    {
                      "type": "typeParameter",
                      "name": "FieldValue"
                    }
                  ]
                }
              }
            ],
            "type": {
              "type": "reference",
              "name": "React.ComponentType",
              "typeArguments": [
                {
                  "type": "typeParameter",
                  "name": "T",
                  "constraint": {
                    "type": "reference",
                    "name": "HTMLElement"
                  }
                }
              ]
            }
          }
        ],
        "sources": [
          {
            "fileName": "js-packages/@prestojs/ui/src/UiProvider.tsx",
            "line": 13,
            "character": 27
          }
        ]
      }
    }
  },
  {
    "id": 1608,
    "name": "GetFormatterForFieldWithNull",
    "kind": 4194304,
    "kindString": "Type alias",
    "flags": {},
    "sources": [
      {
        "fileName": "js-packages/@prestojs/ui/src/UiProvider.tsx",
        "line": 17,
        "character": 33
      }
    ],
    "type": {
      "type": "reflection",
      "declaration": {
        "id": 1609,
        "name": "__type",
        "kind": 65536,
        "kindString": "Type literal",
        "flags": {},
        "signatures": [
          {
            "id": 1610,
            "name": "__call",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "typeParameter": [
              {
                "id": 1611,
                "name": "FieldValue",
                "kind": 131072,
                "kindString": "Type parameter",
                "flags": {}
              },
              {
                "id": 1612,
                "name": "T",
                "kind": 131072,
                "kindString": "Type parameter",
                "flags": {},
                "type": {
                  "type": "reference",
                  "name": "HTMLElement"
                }
              }
            ],
            "parameters": [
              {
                "id": 1613,
                "name": "field",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "reference",
                  "name": "Field",
                  "id": 24,
                  "typeArguments": [
                    {
                      "type": "typeParameter",
                      "name": "FieldValue"
                    }
                  ]
                }
              }
            ],
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "reference",
                  "name": "React.ComponentType",
                  "typeArguments": [
                    {
                      "type": "typeParameter",
                      "name": "T",
                      "constraint": {
                        "type": "reference",
                        "name": "HTMLElement"
                      }
                    }
                  ]
                },
                {
                  "type": "intrinsic",
                  "name": "null"
                }
              ]
            }
          }
        ],
        "sources": [
          {
            "fileName": "js-packages/@prestojs/ui/src/UiProvider.tsx",
            "line": 17,
            "character": 35
          }
        ]
      }
    }
  },
  {
    "id": 1590,
    "name": "GetWidgetForField",
    "kind": 4194304,
    "kindString": "Type alias",
    "flags": {},
    "sources": [
      {
        "fileName": "js-packages/@prestojs/ui/src/UiProvider.tsx",
        "line": 5,
        "character": 22
      }
    ],
    "type": {
      "type": "reflection",
      "declaration": {
        "id": 1591,
        "name": "__type",
        "kind": 65536,
        "kindString": "Type literal",
        "flags": {},
        "signatures": [
          {
            "id": 1592,
            "name": "__call",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "typeParameter": [
              {
                "id": 1593,
                "name": "FieldValue",
                "kind": 131072,
                "kindString": "Type parameter",
                "flags": {}
              },
              {
                "id": 1594,
                "name": "T",
                "kind": 131072,
                "kindString": "Type parameter",
                "flags": {},
                "type": {
                  "type": "reference",
                  "name": "HTMLElement"
                }
              }
            ],
            "parameters": [
              {
                "id": 1595,
                "name": "field",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "reference",
                  "name": "Field",
                  "id": 24,
                  "typeArguments": [
                    {
                      "type": "typeParameter",
                      "name": "FieldValue"
                    }
                  ]
                }
              }
            ],
            "type": {
              "type": "reference",
              "name": "FieldWidgetType",
              "id": 1574,
              "typeArguments": [
                {
                  "type": "typeParameter",
                  "name": "FieldValue"
                },
                {
                  "type": "typeParameter",
                  "name": "T",
                  "constraint": {
                    "type": "reference",
                    "name": "HTMLElement"
                  }
                }
              ]
            }
          }
        ],
        "sources": [
          {
            "fileName": "js-packages/@prestojs/ui/src/UiProvider.tsx",
            "line": 5,
            "character": 24
          }
        ]
      }
    }
  },
  {
    "id": 1596,
    "name": "GetWidgetForFieldWithNull",
    "kind": 4194304,
    "kindString": "Type alias",
    "flags": {},
    "sources": [
      {
        "fileName": "js-packages/@prestojs/ui/src/UiProvider.tsx",
        "line": 9,
        "character": 30
      }
    ],
    "type": {
      "type": "reflection",
      "declaration": {
        "id": 1597,
        "name": "__type",
        "kind": 65536,
        "kindString": "Type literal",
        "flags": {},
        "signatures": [
          {
            "id": 1598,
            "name": "__call",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "typeParameter": [
              {
                "id": 1599,
                "name": "FieldValue",
                "kind": 131072,
                "kindString": "Type parameter",
                "flags": {}
              },
              {
                "id": 1600,
                "name": "T",
                "kind": 131072,
                "kindString": "Type parameter",
                "flags": {},
                "type": {
                  "type": "reference",
                  "name": "HTMLElement"
                }
              }
            ],
            "parameters": [
              {
                "id": 1601,
                "name": "field",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "reference",
                  "name": "Field",
                  "id": 24,
                  "typeArguments": [
                    {
                      "type": "typeParameter",
                      "name": "FieldValue"
                    }
                  ]
                }
              }
            ],
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "reference",
                  "name": "FieldWidgetType",
                  "id": 1574,
                  "typeArguments": [
                    {
                      "type": "typeParameter",
                      "name": "FieldValue"
                    },
                    {
                      "type": "typeParameter",
                      "name": "T",
                      "constraint": {
                        "type": "reference",
                        "name": "HTMLElement"
                      }
                    }
                  ]
                },
                {
                  "type": "intrinsic",
                  "name": "null"
                }
              ]
            }
          }
        ],
        "sources": [
          {
            "fileName": "js-packages/@prestojs/ui/src/UiProvider.tsx",
            "line": 9,
            "character": 32
          }
        ]
      }
    }
  },
  {
    "id": 1615,
    "name": "Props",
    "kind": 4194304,
    "kindString": "Type alias",
    "flags": {},
    "sources": [
      {
        "fileName": "js-packages/@prestojs/ui/src/UiProvider.tsx",
        "line": 46,
        "character": 10
      }
    ],
    "type": {
      "type": "reflection",
      "declaration": {
        "id": 1616,
        "name": "__type",
        "kind": 65536,
        "kindString": "Type literal",
        "flags": {},
        "children": [
          {
            "id": 1617,
            "name": "children",
            "kind": 32,
            "kindString": "Variable",
            "flags": {},
            "comment": {
              "shortText": "Children to render"
            },
            "sources": [
              {
                "fileName": "js-packages/@prestojs/ui/src/UiProvider.tsx",
                "line": 50,
                "character": 12
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "any"
            }
          },
          {
            "id": 1620,
            "name": "formItemComponent",
            "kind": 32,
            "kindString": "Variable",
            "flags": {
              "isOptional": true
            },
            "comment": {
              "shortText": "A component to use to render items in a form. This is the component that will be rendered by\nForm.Item."
            },
            "sources": [
              {
                "fileName": "js-packages/@prestojs/ui/src/UiProvider.tsx",
                "line": 71,
                "character": 21
              }
            ],
            "type": {
              "type": "reference",
              "name": "React.ComponentType",
              "typeArguments": [
                {
                  "type": "reference",
                  "name": "FormItemProps",
                  "id": 1578
                }
              ]
            }
          },
          {
            "id": 1619,
            "name": "getFormatterForField",
            "kind": 32,
            "kindString": "Variable",
            "flags": {
              "isOptional": true
            },
            "comment": {
              "shortText": "A function that is passed an instance of `Field` and should return the formatter to use\nfor this field. If falsey is returned then it will fall back to a parent UiProvider (if any) or if\nno parent UiProvider an error will be thrown.",
              "tags": [
                {
                  "tag": "param",
                  "text": "The specific field instance for a model\n",
                  "param": "field"
                }
              ]
            },
            "sources": [
              {
                "fileName": "js-packages/@prestojs/ui/src/UiProvider.tsx",
                "line": 66,
                "character": 24
              }
            ],
            "type": {
              "type": "reference",
              "name": "GetFormatterForFieldWithNull",
              "id": 1608
            }
          },
          {
            "id": 1618,
            "name": "getWidgetForField",
            "kind": 32,
            "kindString": "Variable",
            "flags": {
              "isOptional": true
            },
            "comment": {
              "shortText": "A function that is passed an instance of `Field` and should return the widget component to use\nfor this field. If falsey is returned then it will fall back to a parent UiProvider (if any) or if\nno parent UiProvider an error will be thrown.",
              "tags": [
                {
                  "tag": "param",
                  "text": "The specific field instance for a model\n",
                  "param": "field"
                }
              ]
            },
            "sources": [
              {
                "fileName": "js-packages/@prestojs/ui/src/UiProvider.tsx",
                "line": 58,
                "character": 21
              }
            ],
            "type": {
              "type": "reference",
              "name": "GetWidgetForFieldWithNull",
              "id": 1596
            }
          }
        ],
        "groups": [
          {
            "title": "Variables",
            "kind": 32,
            "children": [1617, 1620, 1619, 1618]
          }
        ],
        "sources": [
          {
            "fileName": "js-packages/@prestojs/ui/src/UiProvider.tsx",
            "line": 46,
            "character": 12
          }
        ]
      }
    }
  },
  {
    "id": 1614,
    "name": "UiContext",
    "kind": 32,
    "kindString": "Variable",
    "flags": {
      "isExported": true,
      "isConst": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/ui/src/UiProvider.tsx",
        "line": 44,
        "character": 22
      }
    ],
    "type": {
      "type": "reference",
      "name": "Context",
      "typeArguments": [
        {
          "type": "union",
          "types": [
            {
              "type": "intrinsic",
              "name": "null"
            },
            {
              "type": "reference",
              "name": "UiContextValue",
              "id": 1582
            }
          ]
        }
      ]
    },
    "defaultValue": " React.createContext<UiContextValue | null>(null)"
  },
  {
    "id": 1715,
    "name": "choicesMapping",
    "kind": 32,
    "kindString": "Variable",
    "flags": {
      "isConst": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/ui/src/getFormatterForField.ts",
        "line": 71,
        "character": 20
      }
    ],
    "type": {
      "type": "reference",
      "name": "Map",
      "typeArguments": [
        {
          "type": "reference",
          "name": "Class",
          "id": 152,
          "typeArguments": [
            {
              "type": "reference",
              "name": "Field",
              "id": 24,
              "typeArguments": [
                {
                  "type": "intrinsic",
                  "name": "any"
                }
              ]
            }
          ]
        },
        {
          "type": "intrinsic",
          "name": "any"
        }
      ]
    },
    "defaultValue": " new Map<Class<Field<any>>, any>([\n    [CharField, ChoiceFormatter],\n    [IntegerField, ChoiceFormatter],\n])"
  },
  {
    "id": 1714,
    "name": "mapping",
    "kind": 32,
    "kindString": "Variable",
    "flags": {
      "isConst": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/ui/src/getFormatterForField.ts",
        "line": 42,
        "character": 13
      }
    ],
    "type": {
      "type": "reference",
      "name": "Map",
      "typeArguments": [
        {
          "type": "reference",
          "name": "Class",
          "id": 152,
          "typeArguments": [
            {
              "type": "reference",
              "name": "Field",
              "id": 24,
              "typeArguments": [
                {
                  "type": "intrinsic",
                  "name": "any"
                }
              ]
            }
          ]
        },
        {
          "type": "intrinsic",
          "name": "any"
        }
      ]
    },
    "defaultValue": " new Map<Class<Field<any>>, any>([\n    [BooleanField, BooleanFormatter],\n    [CharField, CharFormatter],\n    [CurrencyField, NumberFormatter],\n    [DateField, DateFormatter],\n    [DateRangeField, [RangeFormatter, { baseFormatter: DateFormatter }]],\n    [DateTimeField, DateTimeFormatter],\n    [DateTimeRangeField, [RangeFormatter, { baseFormatter: DateTimeFormatter }]],\n    [DecimalField, NumberFormatter],\n    [DurationField, TimeFormatter],\n    [EmailField, CharFormatter],\n    [FileField, LinkFormatter],\n    [FloatField, NumberFormatter],\n    [FloatRangeField, [RangeFormatter, { baseFormatter: NumberFormatter }]],\n    [ImageField, ImageFormatter],\n    [IntegerField, NumberFormatter],\n    [IntegerRangeField, [RangeFormatter, { baseFormatter: NumberFormatter }]],\n    [IPAddressField, CharFormatter],\n    [JsonField, CharFormatter],\n    [NullableBooleanField, BooleanFormatter],\n    [NumberField, NumberFormatter],\n    [SlugField, CharFormatter],\n    [TextField, CharFormatter],\n    [TimeField, TimeFormatter],\n    [URLField, LinkFormatter],\n    [UUIDField, CharFormatter],\n])"
  },
  {
    "id": 1628,
    "name": "BooleanFormatter",
    "kind": 64,
    "kindString": "Function",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 1629,
        "name": "BooleanFormatter",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "parameters": [
          {
            "id": 1630,
            "name": "__namedParameters",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "originalName": "__0",
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 1631,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "children": [
                  {
                    "id": 1633,
                    "name": "blankLabel",
                    "kind": 32,
                    "kindString": "Variable",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "js-packages/@prestojs/ui/src/formatters/BooleanFormatter.tsx",
                        "line": 3,
                        "character": 14
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    },
                    "defaultValue": "\"\""
                  },
                  {
                    "id": 1632,
                    "name": "value",
                    "kind": 32,
                    "kindString": "Variable",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "js-packages/@prestojs/ui/src/formatters/BooleanFormatter.tsx",
                        "line": 2,
                        "character": 9
                      }
                    ],
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "undefined"
                        },
                        {
                          "type": "intrinsic",
                          "name": "false"
                        },
                        {
                          "type": "intrinsic",
                          "name": "true"
                        }
                      ]
                    }
                  }
                ],
                "groups": [
                  {
                    "title": "Variables",
                    "kind": 32,
                    "children": [1633, 1632]
                  }
                ],
                "sources": [
                  {
                    "fileName": "js-packages/@prestojs/ui/src/formatters/BooleanFormatter.tsx",
                    "line": 1,
                    "character": 41
                  }
                ]
              }
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "string"
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/ui/src/formatters/BooleanFormatter.tsx",
        "line": 1,
        "character": 40
      }
    ]
  },
  {
    "id": 1635,
    "name": "CharFormatter",
    "kind": 64,
    "kindString": "Function",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 1636,
        "name": "CharFormatter",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "parameters": [
          {
            "id": 1637,
            "name": "__namedParameters",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "originalName": "__0",
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 1638,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "children": [
                  {
                    "id": 1639,
                    "name": "value",
                    "kind": 32,
                    "kindString": "Variable",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "js-packages/@prestojs/ui/src/formatters/CharFormatter.tsx",
                        "line": 1,
                        "character": 45
                      }
                    ],
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "undefined"
                        },
                        {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      ]
                    }
                  }
                ],
                "groups": [
                  {
                    "title": "Variables",
                    "kind": 32,
                    "children": [1639]
                  }
                ],
                "sources": [
                  {
                    "fileName": "js-packages/@prestojs/ui/src/formatters/CharFormatter.tsx",
                    "line": 1,
                    "character": 38
                  }
                ]
              }
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "string"
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/ui/src/formatters/CharFormatter.tsx",
        "line": 1,
        "character": 37
      }
    ]
  },
  {
    "id": 1641,
    "name": "ChoiceFormatter",
    "kind": 64,
    "kindString": "Function",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 1642,
        "name": "ChoiceFormatter",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "typeParameter": [
          {
            "id": 1643,
            "name": "T",
            "kind": 131072,
            "kindString": "Type parameter",
            "flags": {}
          }
        ],
        "parameters": [
          {
            "id": 1644,
            "name": "__namedParameters",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "originalName": "__0",
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 1645,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "children": [
                  {
                    "id": 1647,
                    "name": "choices",
                    "kind": 32,
                    "kindString": "Variable",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "js-packages/@prestojs/ui/src/formatters/ChoiceFormatter.tsx",
                        "line": 3,
                        "character": 11
                      }
                    ],
                    "type": {
                      "type": "array",
                      "elementType": {
                        "type": "tuple",
                        "elements": [
                          {
                            "type": "unknown",
                            "name": "T"
                          },
                          {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "id": 1646,
                    "name": "value",
                    "kind": 32,
                    "kindString": "Variable",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "js-packages/@prestojs/ui/src/formatters/ChoiceFormatter.tsx",
                        "line": 2,
                        "character": 9
                      }
                    ],
                    "type": {
                      "type": "unknown",
                      "name": "T"
                    }
                  }
                ],
                "groups": [
                  {
                    "title": "Variables",
                    "kind": 32,
                    "children": [1647, 1646]
                  }
                ],
                "sources": [
                  {
                    "fileName": "js-packages/@prestojs/ui/src/formatters/ChoiceFormatter.tsx",
                    "line": 1,
                    "character": 43
                  }
                ]
              }
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "string"
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/ui/src/formatters/ChoiceFormatter.tsx",
        "line": 1,
        "character": 39
      }
    ]
  },
  {
    "id": 1649,
    "name": "DateFormatter",
    "kind": 64,
    "kindString": "Function",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 1650,
        "name": "DateFormatter",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "parameters": [
          {
            "id": 1651,
            "name": "__namedParameters",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "originalName": "__0",
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 1652,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "children": [
                  {
                    "id": 1655,
                    "name": "localeOptions",
                    "kind": 32,
                    "kindString": "Variable",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "js-packages/@prestojs/ui/src/formatters/DateFormatter.tsx",
                        "line": 9,
                        "character": 17
                      }
                    ],
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "undefined"
                        },
                        {
                          "type": "reference",
                          "name": "DateTimeFormatOptions"
                        }
                      ]
                    }
                  },
                  {
                    "id": 1654,
                    "name": "locales",
                    "kind": 32,
                    "kindString": "Variable",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "js-packages/@prestojs/ui/src/formatters/DateFormatter.tsx",
                        "line": 8,
                        "character": 11
                      }
                    ],
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "string"
                        },
                        {
                          "type": "array",
                          "elementType": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ]
                    },
                    "defaultValue": " []"
                  },
                  {
                    "id": 1653,
                    "name": "value",
                    "kind": 32,
                    "kindString": "Variable",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "js-packages/@prestojs/ui/src/formatters/DateFormatter.tsx",
                        "line": 7,
                        "character": 9
                      }
                    ],
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "null"
                        },
                        {
                          "type": "intrinsic",
                          "name": "string"
                        },
                        {
                          "type": "reference",
                          "name": "Date"
                        }
                      ]
                    }
                  }
                ],
                "groups": [
                  {
                    "title": "Variables",
                    "kind": 32,
                    "children": [1655, 1654, 1653]
                  }
                ],
                "sources": [
                  {
                    "fileName": "js-packages/@prestojs/ui/src/formatters/DateFormatter.tsx",
                    "line": 6,
                    "character": 38
                  }
                ]
              }
            }
          }
        ],
        "type": {
          "type": "union",
          "types": [
            {
              "type": "intrinsic",
              "name": "string"
            },
            {
              "type": "intrinsic",
              "name": "null"
            }
          ]
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/ui/src/formatters/DateFormatter.tsx",
        "line": 6,
        "character": 37
      }
    ]
  },
  {
    "id": 1657,
    "name": "DateTimeFormatter",
    "kind": 64,
    "kindString": "Function",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 1658,
        "name": "DateTimeFormatter",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "parameters": [
          {
            "id": 1659,
            "name": "__namedParameters",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "originalName": "__0",
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 1660,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "children": [
                  {
                    "id": 1663,
                    "name": "localeOptions",
                    "kind": 32,
                    "kindString": "Variable",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "js-packages/@prestojs/ui/src/formatters/DateTimeFormatter.tsx",
                        "line": 9,
                        "character": 17
                      }
                    ],
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "undefined"
                        },
                        {
                          "type": "reference",
                          "name": "DateTimeFormatOptions"
                        }
                      ]
                    }
                  },
                  {
                    "id": 1662,
                    "name": "locales",
                    "kind": 32,
                    "kindString": "Variable",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "js-packages/@prestojs/ui/src/formatters/DateTimeFormatter.tsx",
                        "line": 8,
                        "character": 11
                      }
                    ],
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "string"
                        },
                        {
                          "type": "array",
                          "elementType": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ]
                    },
                    "defaultValue": " []"
                  },
                  {
                    "id": 1661,
                    "name": "value",
                    "kind": 32,
                    "kindString": "Variable",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "js-packages/@prestojs/ui/src/formatters/DateTimeFormatter.tsx",
                        "line": 7,
                        "character": 9
                      }
                    ],
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "null"
                        },
                        {
                          "type": "intrinsic",
                          "name": "string"
                        },
                        {
                          "type": "reference",
                          "name": "Date"
                        }
                      ]
                    }
                  }
                ],
                "groups": [
                  {
                    "title": "Variables",
                    "kind": 32,
                    "children": [1663, 1662, 1661]
                  }
                ],
                "sources": [
                  {
                    "fileName": "js-packages/@prestojs/ui/src/formatters/DateTimeFormatter.tsx",
                    "line": 6,
                    "character": 42
                  }
                ]
              }
            }
          }
        ],
        "type": {
          "type": "union",
          "types": [
            {
              "type": "intrinsic",
              "name": "string"
            },
            {
              "type": "intrinsic",
              "name": "null"
            }
          ]
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/ui/src/formatters/DateTimeFormatter.tsx",
        "line": 6,
        "character": 41
      }
    ]
  },
  {
    "id": 1731,
    "name": "FieldFormatter",
    "kind": 64,
    "kindString": "Function",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 1732,
        "name": "FieldFormatter",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "typeParameter": [
          {
            "id": 1733,
            "name": "FieldValue",
            "kind": 131072,
            "kindString": "Type parameter",
            "flags": {}
          }
        ],
        "parameters": [
          {
            "id": 1734,
            "name": "__namedParameters",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "originalName": "__0",
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 1735,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "children": [
                  {
                    "id": 1736,
                    "name": "field",
                    "kind": 32,
                    "kindString": "Variable",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "js-packages/@prestojs/ui/src/FieldFormatter.tsx",
                        "line": 10,
                        "character": 9
                      }
                    ],
                    "type": {
                      "type": "reference",
                      "name": "Field",
                      "id": 24,
                      "typeArguments": [
                        {
                          "type": "unknown",
                          "name": "FieldValue"
                        }
                      ]
                    }
                  },
                  {
                    "id": 1737,
                    "name": "rest",
                    "kind": 32,
                    "kindString": "Variable",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "js-packages/@prestojs/ui/src/FieldFormatter.tsx",
                        "line": 11,
                        "character": 11
                      }
                    ],
                    "type": {
                      "type": "reference",
                      "name": "rest",
                      "id": 1737
                    }
                  }
                ],
                "groups": [
                  {
                    "title": "Variables",
                    "kind": 32,
                    "children": [1736, 1737]
                  }
                ],
                "sources": [
                  {
                    "fileName": "js-packages/@prestojs/ui/src/FieldFormatter.tsx",
                    "line": 9,
                    "character": 51
                  }
                ]
              }
            }
          }
        ],
        "type": {
          "type": "reference",
          "name": "ReactElement"
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/ui/src/FieldFormatter.tsx",
        "line": 9,
        "character": 38
      }
    ]
  },
  {
    "id": 1722,
    "name": "FieldWidget",
    "kind": 64,
    "kindString": "Function",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 1723,
        "name": "FieldWidget",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "typeParameter": [
          {
            "id": 1724,
            "name": "FieldValue",
            "kind": 131072,
            "kindString": "Type parameter",
            "flags": {}
          },
          {
            "id": 1725,
            "name": "T",
            "kind": 131072,
            "kindString": "Type parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "name": "HTMLElement"
            }
          }
        ],
        "parameters": [
          {
            "id": 1726,
            "name": "__namedParameters",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "originalName": "__0",
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 1727,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "children": [
                  {
                    "id": 1728,
                    "name": "field",
                    "kind": 32,
                    "kindString": "Variable",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "js-packages/@prestojs/ui/src/FieldWidget.tsx",
                        "line": 10,
                        "character": 9
                      }
                    ],
                    "type": {
                      "type": "reference",
                      "name": "Field",
                      "id": 24,
                      "typeArguments": [
                        {
                          "type": "unknown",
                          "name": "FieldValue"
                        }
                      ]
                    }
                  },
                  {
                    "id": 1729,
                    "name": "rest",
                    "kind": 32,
                    "kindString": "Variable",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "js-packages/@prestojs/ui/src/FieldWidget.tsx",
                        "line": 11,
                        "character": 11
                      }
                    ],
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "reference",
                          "name": "rest",
                          "id": 1729
                        },
                        {
                          "type": "reference",
                          "name": "rest",
                          "id": 1729
                        }
                      ]
                    }
                  }
                ],
                "groups": [
                  {
                    "title": "Variables",
                    "kind": 32,
                    "children": [1728, 1729]
                  }
                ],
                "sources": [
                  {
                    "fileName": "js-packages/@prestojs/ui/src/FieldWidget.tsx",
                    "line": 9,
                    "character": 71
                  }
                ]
              }
            }
          }
        ],
        "type": {
          "type": "union",
          "types": [
            {
              "type": "reference",
              "name": "ReactElement"
            },
            {
              "type": "intrinsic",
              "name": "null"
            }
          ]
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/ui/src/FieldWidget.tsx",
        "line": 9,
        "character": 35
      }
    ]
  },
  {
    "id": 1665,
    "name": "ImageFormatter",
    "kind": 64,
    "kindString": "Function",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 1666,
        "name": "ImageFormatter",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "parameters": [
          {
            "id": 1667,
            "name": "__namedParameters",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "originalName": "__0",
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 1668,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "children": [
                  {
                    "id": 1670,
                    "name": "rest",
                    "kind": 32,
                    "kindString": "Variable",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "js-packages/@prestojs/ui/src/formatters/ImageFormatter.tsx",
                        "line": 5,
                        "character": 11
                      }
                    ],
                    "type": {
                      "type": "reference",
                      "name": "rest",
                      "id": 1670
                    }
                  },
                  {
                    "id": 1669,
                    "name": "value",
                    "kind": 32,
                    "kindString": "Variable",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "js-packages/@prestojs/ui/src/formatters/ImageFormatter.tsx",
                        "line": 4,
                        "character": 9
                      }
                    ],
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "undefined"
                        },
                        {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      ]
                    }
                  }
                ],
                "groups": [
                  {
                    "title": "Variables",
                    "kind": 32,
                    "children": [1670, 1669]
                  }
                ],
                "sources": [
                  {
                    "fileName": "js-packages/@prestojs/ui/src/formatters/ImageFormatter.tsx",
                    "line": 3,
                    "character": 39
                  }
                ]
              }
            }
          }
        ],
        "type": {
          "type": "union",
          "types": [
            {
              "type": "reference",
              "name": "ReactElement"
            },
            {
              "type": "intrinsic",
              "name": "null"
            }
          ]
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/ui/src/formatters/ImageFormatter.tsx",
        "line": 3,
        "character": 38
      }
    ]
  },
  {
    "id": 1680,
    "name": "LinkFormatter",
    "kind": 64,
    "kindString": "Function",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 1681,
        "name": "LinkFormatter",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "parameters": [
          {
            "id": 1682,
            "name": "__namedParameters",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "originalName": "__0",
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 1683,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "children": [
                  {
                    "id": 1685,
                    "name": "children",
                    "kind": 32,
                    "kindString": "Variable",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "js-packages/@prestojs/ui/src/formatters/LinkFormatter.tsx",
                        "line": 5,
                        "character": 12
                      }
                    ],
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "undefined"
                        },
                        {
                          "type": "intrinsic",
                          "name": "null"
                        },
                        {
                          "type": "intrinsic",
                          "name": "string"
                        },
                        {
                          "type": "intrinsic",
                          "name": "number"
                        },
                        {
                          "type": "intrinsic",
                          "name": "false"
                        },
                        {
                          "type": "intrinsic",
                          "name": "true"
                        },
                        {
                          "type": "reference",
                          "name": "__type"
                        },
                        {
                          "type": "reference",
                          "name": "ReactElement",
                          "typeArguments": [
                            {
                              "type": "intrinsic",
                              "name": "any"
                            },
                            {
                              "type": "union",
                              "types": [
                                {
                                  "type": "intrinsic",
                                  "name": "string"
                                },
                                {
                                  "type": "reflection",
                                  "declaration": {
                                    "id": 1686,
                                    "name": "__type",
                                    "kind": 65536,
                                    "kindString": "Type literal",
                                    "flags": {},
                                    "signatures": [
                                      {
                                        "id": 1687,
                                        "name": "__call",
                                        "kind": 4096,
                                        "kindString": "Call signature",
                                        "flags": {},
                                        "parameters": [
                                          {
                                            "id": 1688,
                                            "name": "props",
                                            "kind": 32768,
                                            "kindString": "Parameter",
                                            "flags": {},
                                            "type": {
                                              "type": "typeParameter",
                                              "name": "P"
                                            }
                                          }
                                        ],
                                        "type": {
                                          "type": "union",
                                          "types": [
                                            {
                                              "type": "reference",
                                              "name": "ReactElement"
                                            },
                                            {
                                              "type": "intrinsic",
                                              "name": "null"
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "reflection",
                                  "declaration": {
                                    "id": 1689,
                                    "name": "__type",
                                    "kind": 65536,
                                    "kindString": "Type literal",
                                    "flags": {}
                                  }
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "reference",
                          "name": "ReactNodeArray"
                        },
                        {
                          "type": "reference",
                          "name": "ReactPortal"
                        }
                      ]
                    }
                  },
                  {
                    "id": 1690,
                    "name": "rest",
                    "kind": 32,
                    "kindString": "Variable",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "js-packages/@prestojs/ui/src/formatters/LinkFormatter.tsx",
                        "line": 6,
                        "character": 11
                      }
                    ],
                    "type": {
                      "type": "reference",
                      "name": "rest",
                      "id": 1690
                    }
                  },
                  {
                    "id": 1684,
                    "name": "value",
                    "kind": 32,
                    "kindString": "Variable",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "js-packages/@prestojs/ui/src/formatters/LinkFormatter.tsx",
                        "line": 4,
                        "character": 9
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  }
                ],
                "groups": [
                  {
                    "title": "Variables",
                    "kind": 32,
                    "children": [1685, 1690, 1684]
                  }
                ],
                "sources": [
                  {
                    "fileName": "js-packages/@prestojs/ui/src/formatters/LinkFormatter.tsx",
                    "line": 3,
                    "character": 38
                  }
                ]
              }
            }
          }
        ],
        "type": {
          "type": "reference",
          "name": "ReactElement"
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/ui/src/formatters/LinkFormatter.tsx",
        "line": 3,
        "character": 37
      }
    ]
  },
  {
    "id": 1672,
    "name": "NumberFormatter",
    "kind": 64,
    "kindString": "Function",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 1673,
        "name": "NumberFormatter",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "parameters": [
          {
            "id": 1674,
            "name": "__namedParameters",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "originalName": "__0",
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 1675,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "children": [
                  {
                    "id": 1678,
                    "name": "localeOptions",
                    "kind": 32,
                    "kindString": "Variable",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "js-packages/@prestojs/ui/src/formatters/NumberFormatter.tsx",
                        "line": 9,
                        "character": 17
                      }
                    ],
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "undefined"
                        },
                        {
                          "type": "reference",
                          "name": "NumberFormatOptions"
                        }
                      ]
                    }
                  },
                  {
                    "id": 1677,
                    "name": "locales",
                    "kind": 32,
                    "kindString": "Variable",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "js-packages/@prestojs/ui/src/formatters/NumberFormatter.tsx",
                        "line": 8,
                        "character": 11
                      }
                    ],
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "string"
                        },
                        {
                          "type": "array",
                          "elementType": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ]
                    },
                    "defaultValue": " []"
                  },
                  {
                    "id": 1676,
                    "name": "value",
                    "kind": 32,
                    "kindString": "Variable",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "js-packages/@prestojs/ui/src/formatters/NumberFormatter.tsx",
                        "line": 7,
                        "character": 9
                      }
                    ],
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "null"
                        },
                        {
                          "type": "intrinsic",
                          "name": "number"
                        }
                      ]
                    }
                  }
                ],
                "groups": [
                  {
                    "title": "Variables",
                    "kind": 32,
                    "children": [1678, 1677, 1676]
                  }
                ],
                "sources": [
                  {
                    "fileName": "js-packages/@prestojs/ui/src/formatters/NumberFormatter.tsx",
                    "line": 6,
                    "character": 40
                  }
                ]
              }
            }
          }
        ],
        "type": {
          "type": "union",
          "types": [
            {
              "type": "intrinsic",
              "name": "string"
            },
            {
              "type": "intrinsic",
              "name": "null"
            }
          ]
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/ui/src/formatters/NumberFormatter.tsx",
        "line": 6,
        "character": 39
      }
    ]
  },
  {
    "id": 1692,
    "name": "RangeFormatter",
    "kind": 64,
    "kindString": "Function",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 1693,
        "name": "RangeFormatter",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "typeParameter": [
          {
            "id": 1694,
            "name": "T",
            "kind": 131072,
            "kindString": "Type parameter",
            "flags": {}
          }
        ],
        "parameters": [
          {
            "id": 1695,
            "name": "__namedParameters",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "originalName": "__0",
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 1696,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "children": [
                  {
                    "id": 1699,
                    "name": "BaseFormatter",
                    "kind": 32,
                    "kindString": "Variable",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "js-packages/@prestojs/ui/src/formatters/RangeFormatter.tsx",
                        "line": 6,
                        "character": 32
                      }
                    ],
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "string"
                        },
                        {
                          "type": "reference",
                          "name": "ComponentClass",
                          "typeArguments": [
                            {
                              "type": "reflection",
                              "declaration": {
                                "id": 1700,
                                "name": "__type",
                                "kind": 65536,
                                "kindString": "Type literal",
                                "flags": {},
                                "children": [
                                  {
                                    "id": 1701,
                                    "name": "value",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {},
                                    "sources": [
                                      {
                                        "fileName": "js-packages/@prestojs/ui/src/formatters/RangeFormatter.tsx",
                                        "line": 11,
                                        "character": 46
                                      }
                                    ],
                                    "type": {
                                      "type": "typeParameter",
                                      "name": "T"
                                    }
                                  }
                                ],
                                "groups": [
                                  {
                                    "title": "Variables",
                                    "kind": 32,
                                    "children": [1701]
                                  }
                                ]
                              }
                            },
                            {
                              "type": "intrinsic",
                              "name": "any"
                            }
                          ]
                        },
                        {
                          "type": "reference",
                          "name": "FunctionComponent",
                          "typeArguments": [
                            {
                              "type": "reflection",
                              "declaration": {
                                "id": 1702,
                                "name": "__type",
                                "kind": 65536,
                                "kindString": "Type literal",
                                "flags": {},
                                "children": [
                                  {
                                    "id": 1703,
                                    "name": "value",
                                    "kind": 32,
                                    "kindString": "Variable",
                                    "flags": {},
                                    "sources": [
                                      {
                                        "fileName": "js-packages/@prestojs/ui/src/formatters/RangeFormatter.tsx",
                                        "line": 11,
                                        "character": 46
                                      }
                                    ],
                                    "type": {
                                      "type": "typeParameter",
                                      "name": "T"
                                    }
                                  }
                                ],
                                "groups": [
                                  {
                                    "title": "Variables",
                                    "kind": 32,
                                    "children": [1703]
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      ]
                    }
                  },
                  {
                    "id": 1697,
                    "name": "lowerBound",
                    "kind": 32,
                    "kindString": "Variable",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "js-packages/@prestojs/ui/src/formatters/RangeFormatter.tsx",
                        "line": 4,
                        "character": 14
                      }
                    ],
                    "type": {
                      "type": "unknown",
                      "name": "T"
                    }
                  },
                  {
                    "id": 1704,
                    "name": "separator",
                    "kind": 32,
                    "kindString": "Variable",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "js-packages/@prestojs/ui/src/formatters/RangeFormatter.tsx",
                        "line": 7,
                        "character": 13
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    },
                    "defaultValue": "\"~\""
                  },
                  {
                    "id": 1698,
                    "name": "upperBound",
                    "kind": 32,
                    "kindString": "Variable",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "js-packages/@prestojs/ui/src/formatters/RangeFormatter.tsx",
                        "line": 5,
                        "character": 14
                      }
                    ],
                    "type": {
                      "type": "unknown",
                      "name": "T"
                    }
                  }
                ],
                "groups": [
                  {
                    "title": "Variables",
                    "kind": 32,
                    "children": [1699, 1697, 1704, 1698]
                  }
                ],
                "sources": [
                  {
                    "fileName": "js-packages/@prestojs/ui/src/formatters/RangeFormatter.tsx",
                    "line": 3,
                    "character": 42
                  }
                ]
              }
            }
          }
        ],
        "type": {
          "type": "reference",
          "name": "ReactElement"
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/ui/src/formatters/RangeFormatter.tsx",
        "line": 3,
        "character": 38
      }
    ]
  },
  {
    "id": 1706,
    "name": "TimeFormatter",
    "kind": 64,
    "kindString": "Function",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 1707,
        "name": "TimeFormatter",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "parameters": [
          {
            "id": 1708,
            "name": "__namedParameters",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "originalName": "__0",
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 1709,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "children": [
                  {
                    "id": 1712,
                    "name": "localeOptions",
                    "kind": 32,
                    "kindString": "Variable",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "js-packages/@prestojs/ui/src/formatters/TimeFormatter.tsx",
                        "line": 10,
                        "character": 17
                      }
                    ],
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "undefined"
                        },
                        {
                          "type": "reference",
                          "name": "DateTimeFormatOptions"
                        }
                      ]
                    }
                  },
                  {
                    "id": 1711,
                    "name": "locales",
                    "kind": 32,
                    "kindString": "Variable",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "js-packages/@prestojs/ui/src/formatters/TimeFormatter.tsx",
                        "line": 9,
                        "character": 11
                      }
                    ],
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "string"
                        },
                        {
                          "type": "array",
                          "elementType": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ]
                    },
                    "defaultValue": " []"
                  },
                  {
                    "id": 1710,
                    "name": "value",
                    "kind": 32,
                    "kindString": "Variable",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "js-packages/@prestojs/ui/src/formatters/TimeFormatter.tsx",
                        "line": 8,
                        "character": 9
                      }
                    ],
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "null"
                        },
                        {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      ]
                    }
                  }
                ],
                "groups": [
                  {
                    "title": "Variables",
                    "kind": 32,
                    "children": [1712, 1711, 1710]
                  }
                ],
                "sources": [
                  {
                    "fileName": "js-packages/@prestojs/ui/src/formatters/TimeFormatter.tsx",
                    "line": 7,
                    "character": 38
                  }
                ]
              }
            }
          }
        ],
        "type": {
          "type": "union",
          "types": [
            {
              "type": "intrinsic",
              "name": "string"
            },
            {
              "type": "intrinsic",
              "name": "null"
            }
          ]
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/ui/src/formatters/TimeFormatter.tsx",
        "line": 7,
        "character": 37
      }
    ]
  },
  {
    "id": 1621,
    "name": "UiProvider",
    "kind": 64,
    "kindString": "Function",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 1622,
        "name": "UiProvider",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Provider that allows you to define a function to return the form widget and\nvalue formatter to use for a particular field.",
          "text": "TODO: Add formatters, eg. getFormatterForField\n"
        },
        "parameters": [
          {
            "id": 1623,
            "name": "props",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "name": "Props",
              "id": 1615
            }
          }
        ],
        "type": {
          "type": "reference",
          "name": "ReactElement"
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/ui/src/UiProvider.tsx",
        "line": 80,
        "character": 34
      }
    ]
  },
  {
    "id": 1716,
    "name": "getFormatterForField",
    "kind": 64,
    "kindString": "Function",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 1717,
        "name": "getFormatterForField",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "typeParameter": [
          {
            "id": 1718,
            "name": "FieldValue",
            "kind": 131072,
            "kindString": "Type parameter",
            "flags": {}
          },
          {
            "id": 1719,
            "name": "T",
            "kind": 131072,
            "kindString": "Type parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "name": "HTMLElement"
            }
          }
        ],
        "parameters": [
          {
            "id": 1720,
            "name": "field",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "name": "Field",
              "id": 24,
              "typeArguments": [
                {
                  "type": "typeParameter",
                  "name": "FieldValue"
                }
              ]
            }
          }
        ],
        "type": {
          "type": "union",
          "types": [
            {
              "type": "reference",
              "name": "React.ComponentType",
              "typeArguments": [
                {
                  "type": "typeParameter",
                  "name": "T",
                  "constraint": {
                    "type": "reference",
                    "name": "HTMLElement"
                  }
                }
              ]
            },
            {
              "type": "tuple",
              "elements": [
                {
                  "type": "reference",
                  "name": "React.ComponentType",
                  "typeArguments": [
                    {
                      "type": "typeParameter",
                      "name": "T",
                      "constraint": {
                        "type": "reference",
                        "name": "HTMLElement"
                      }
                    }
                  ]
                },
                {
                  "type": "intrinsic",
                  "name": "object"
                }
              ]
            },
            {
              "type": "intrinsic",
              "name": "null"
            }
          ]
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/ui/src/getFormatterForField.ts",
        "line": 81,
        "character": 44
      }
    ]
  },
  {
    "id": 1625,
    "name": "useUi",
    "kind": 64,
    "kindString": "Function",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 1626,
        "name": "useUi",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Returns getWidgetForField and getFormatterForField methods provided\nby UiProvider"
        },
        "type": {
          "type": "reference",
          "name": "TopLevelUiContextValue",
          "id": 1586
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/ui/src/useUi.ts",
        "line": 8,
        "character": 29
      }
    ]
  },
  {
    "id": 1949,
    "name": "@prestojs/ui-antd",
    "kind": 1,
    "kindString": "Package",
    "flags": {
      "isExported": true
    },
    "originalName": "/Users/dave/Development/internal/xenopus/js-packages/@prestojs/ui-antd/src/FormItemWrapper.tsx",
    "comment": {
      "text": "<h1 id=\"generator\">Generator</h1>\n<p>Code generator for frontend. Accepts JSON definitions generated from other sources (eg. django).</p>\n"
    },
    "groups": [
      {
        "title": "Interfaces",
        "kind": 256,
        "children": [2015]
      },
      {
        "title": "Type aliases",
        "kind": 4194304,
        "children": [1960, 2025]
      },
      {
        "title": "Variables",
        "kind": 32,
        "children": [
          1954,
          1985,
          1956,
          1989,
          1999,
          2005,
          2001,
          1991,
          2007,
          2009,
          2013,
          2028,
          2032,
          2030,
          2044,
          2034,
          2038,
          2042,
          2036,
          2046,
          2048,
          2063,
          1958,
          1995,
          1972,
          2065,
          2067,
          2069,
          2073,
          2075,
          2078,
          2077
        ]
      },
      {
        "title": "Functions",
        "kind": 64,
        "children": [1950, 2079]
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/ui-antd/src/FormItemWrapper.tsx",
        "line": 1,
        "character": 0
      }
    ],
    "childIds": [
      2015,
      1960,
      2025,
      1954,
      1985,
      1956,
      1989,
      1999,
      2005,
      2001,
      1991,
      2007,
      2009,
      2013,
      2028,
      2032,
      2030,
      2044,
      2034,
      2038,
      2042,
      2036,
      2046,
      2048,
      2063,
      1958,
      1995,
      1972,
      2065,
      2067,
      2069,
      2073,
      2075,
      2078,
      2077,
      1950,
      2079
    ]
  },
  {
    "id": 2015,
    "name": "UploadWidgetProps",
    "kind": 256,
    "kindString": "Interface",
    "flags": {
      "isExported": true
    },
    "typeParameter": [
      {
        "id": 2016,
        "name": "FieldValue",
        "kind": 131072,
        "kindString": "Type parameter",
        "flags": {}
      },
      {
        "id": 2017,
        "name": "T",
        "kind": 131072,
        "kindString": "Type parameter",
        "flags": {},
        "type": {
          "type": "reference",
          "name": "HTMLElement"
        }
      }
    ],
    "groups": [
      {
        "title": "Properties",
        "kind": 1024,
        "children": [2018, 2023]
      },
      {
        "title": "Methods",
        "kind": 2048,
        "children": [2019]
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/ui-antd/src/widgets/FileWidget.tsx",
        "line": 12,
        "character": 34
      }
    ],
    "extendedTypes": [
      {
        "type": "reflection",
        "declaration": {
          "id": 2024,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "sources": [
            {
              "fileName": "js-packages/@prestojs/ui-antd/src/widgets/FileWidget.tsx",
              "line": 13,
              "character": 11
            }
          ]
        }
      }
    ],
    "childIds": [2018, 2023, 2019]
  },
  {
    "id": 2018,
    "name": "input",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isExported": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/ui-antd/src/widgets/FileWidget.tsx",
        "line": 14,
        "character": 9
      }
    ],
    "type": {
      "type": "reference",
      "name": "UploadWidgetInputType",
      "id": 2025
    }
  },
  {
    "id": 2023,
    "name": "listType",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isExported": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/ui-antd/src/widgets/FileWidget.tsx",
        "line": 16,
        "character": 12
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "stringLiteral",
          "value": "picture-card"
        },
        {
          "type": "stringLiteral",
          "value": "picture"
        },
        {
          "type": "stringLiteral",
          "value": "text"
        },
        {
          "type": "intrinsic",
          "name": "undefined"
        }
      ]
    }
  },
  {
    "id": 2019,
    "name": "beforeUpload",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isExported": true,
      "isOptional": true
    },
    "signatures": [
      {
        "id": 2020,
        "name": "beforeUpload",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "parameters": [
          {
            "id": 2021,
            "name": "file",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "name": "File"
            }
          },
          {
            "id": 2022,
            "name": "fileList",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "name": "Array",
              "typeArguments": [
                {
                  "type": "intrinsic",
                  "name": "object"
                }
              ]
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "void"
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/ui-antd/src/widgets/FileWidget.tsx",
        "line": 15,
        "character": 16
      }
    ]
  },
  {
    "id": 1960,
    "name": "SelectChoiceProps",
    "kind": 4194304,
    "kindString": "Type alias",
    "flags": {
      "isExported": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/ui-antd/src/widgets/SelectChoiceWidget.tsx",
        "line": 6,
        "character": 29
      }
    ],
    "type": {
      "type": "intersection",
      "types": [
        {
          "type": "reference",
          "name": "SelectProps",
          "typeArguments": [
            {
              "type": "intrinsic",
              "name": "any"
            }
          ]
        },
        {
          "type": "reference",
          "name": "WidgetProps",
          "id": 1560,
          "typeArguments": [
            {
              "type": "union",
              "types": [
                {
                  "type": "intrinsic",
                  "name": "number"
                },
                {
                  "type": "intrinsic",
                  "name": "string"
                },
                {
                  "type": "intrinsic",
                  "name": "boolean"
                }
              ]
            },
            {
              "type": "reference",
              "name": "HTMLSelectElement"
            }
          ]
        },
        {
          "type": "reflection",
          "declaration": {
            "id": 1961,
            "name": "__type",
            "kind": 65536,
            "kindString": "Type literal",
            "flags": {},
            "children": [
              {
                "id": 1962,
                "name": "input",
                "kind": 32,
                "kindString": "Variable",
                "flags": {},
                "sources": [
                  {
                    "fileName": "js-packages/@prestojs/ui-antd/src/widgets/SelectChoiceWidget.tsx",
                    "line": 8,
                    "character": 13
                  }
                ],
                "type": {
                  "type": "intersection",
                  "types": [
                    {
                      "type": "reference",
                      "name": "InputProps",
                      "id": 1540,
                      "typeArguments": [
                        {
                          "type": "union",
                          "types": [
                            {
                              "type": "intrinsic",
                              "name": "number"
                            },
                            {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            {
                              "type": "intrinsic",
                              "name": "boolean"
                            }
                          ]
                        },
                        {
                          "type": "reference",
                          "name": "HTMLSelectElement"
                        }
                      ]
                    },
                    {
                      "type": "reflection",
                      "declaration": {
                        "id": 1963,
                        "name": "__type",
                        "kind": 65536,
                        "kindString": "Type literal",
                        "flags": {},
                        "children": [
                          {
                            "id": 1964,
                            "name": "onBlur",
                            "kind": 32,
                            "kindString": "Variable",
                            "flags": {},
                            "sources": [
                              {
                                "fileName": "js-packages/@prestojs/ui-antd/src/widgets/SelectChoiceWidget.tsx",
                                "line": 10,
                                "character": 18
                              }
                            ],
                            "type": {
                              "type": "reflection",
                              "declaration": {
                                "id": 1965,
                                "name": "__type",
                                "kind": 65536,
                                "kindString": "Type literal",
                                "flags": {},
                                "signatures": [
                                  {
                                    "id": 1966,
                                    "name": "__call",
                                    "kind": 4096,
                                    "kindString": "Call signature",
                                    "flags": {},
                                    "parameters": [
                                      {
                                        "id": 1967,
                                        "name": "event",
                                        "kind": 32768,
                                        "kindString": "Parameter",
                                        "flags": {},
                                        "type": {
                                          "type": "reference",
                                          "name": "FocusEvent",
                                          "typeArguments": [
                                            {
                                              "type": "reference",
                                              "name": "HTMLSelectElement"
                                            }
                                          ]
                                        }
                                      }
                                    ],
                                    "type": {
                                      "type": "intrinsic",
                                      "name": "void"
                                    }
                                  }
                                ],
                                "sources": [
                                  {
                                    "fileName": "js-packages/@prestojs/ui-antd/src/widgets/SelectChoiceWidget.tsx",
                                    "line": 10,
                                    "character": 19
                                  }
                                ]
                              }
                            }
                          },
                          {
                            "id": 1968,
                            "name": "onFocus",
                            "kind": 32,
                            "kindString": "Variable",
                            "flags": {},
                            "sources": [
                              {
                                "fileName": "js-packages/@prestojs/ui-antd/src/widgets/SelectChoiceWidget.tsx",
                                "line": 11,
                                "character": 19
                              }
                            ],
                            "type": {
                              "type": "reflection",
                              "declaration": {
                                "id": 1969,
                                "name": "__type",
                                "kind": 65536,
                                "kindString": "Type literal",
                                "flags": {},
                                "signatures": [
                                  {
                                    "id": 1970,
                                    "name": "__call",
                                    "kind": 4096,
                                    "kindString": "Call signature",
                                    "flags": {},
                                    "parameters": [
                                      {
                                        "id": 1971,
                                        "name": "event",
                                        "kind": 32768,
                                        "kindString": "Parameter",
                                        "flags": {},
                                        "type": {
                                          "type": "reference",
                                          "name": "FocusEvent",
                                          "typeArguments": [
                                            {
                                              "type": "reference",
                                              "name": "HTMLSelectElement"
                                            }
                                          ]
                                        }
                                      }
                                    ],
                                    "type": {
                                      "type": "intrinsic",
                                      "name": "void"
                                    }
                                  }
                                ],
                                "sources": [
                                  {
                                    "fileName": "js-packages/@prestojs/ui-antd/src/widgets/SelectChoiceWidget.tsx",
                                    "line": 11,
                                    "character": 20
                                  }
                                ]
                              }
                            }
                          }
                        ],
                        "groups": [
                          {
                            "title": "Variables",
                            "kind": 32,
                            "children": [1964, 1968]
                          }
                        ],
                        "sources": [
                          {
                            "fileName": "js-packages/@prestojs/ui-antd/src/widgets/SelectChoiceWidget.tsx",
                            "line": 8,
                            "character": 73
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ],
            "groups": [
              {
                "title": "Variables",
                "kind": 32,
                "children": [1962]
              }
            ],
            "sources": [
              {
                "fileName": "js-packages/@prestojs/ui-antd/src/widgets/SelectChoiceWidget.tsx",
                "line": 7,
                "character": 63
              }
            ]
          }
        }
      ]
    }
  },
  {
    "id": 2025,
    "name": "UploadWidgetInputType",
    "kind": 4194304,
    "kindString": "Type alias",
    "flags": {},
    "sources": [
      {
        "fileName": "js-packages/@prestojs/ui-antd/src/widgets/FileWidget.tsx",
        "line": 8,
        "character": 26
      }
    ],
    "type": {
      "type": "intersection",
      "types": [
        {
          "type": "reference",
          "name": "Omit",
          "typeArguments": [
            {
              "type": "reference",
              "name": "InputProps",
              "id": 1540,
              "typeArguments": [
                {
                  "type": "reference",
                  "name": "File"
                },
                {
                  "type": "reference",
                  "name": "HTMLElement"
                }
              ]
            },
            {
              "type": "stringLiteral",
              "value": "type"
            }
          ]
        },
        {
          "type": "reflection",
          "declaration": {
            "id": 2026,
            "name": "__type",
            "kind": 65536,
            "kindString": "Type literal",
            "flags": {},
            "children": [
              {
                "id": 2027,
                "name": "type",
                "kind": 32,
                "kindString": "Variable",
                "flags": {},
                "sources": [
                  {
                    "fileName": "js-packages/@prestojs/ui-antd/src/widgets/FileWidget.tsx",
                    "line": 9,
                    "character": 8
                  }
                ],
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "stringLiteral",
                      "value": "select"
                    },
                    {
                      "type": "stringLiteral",
                      "value": "drag"
                    },
                    {
                      "type": "intrinsic",
                      "name": "undefined"
                    }
                  ]
                }
              }
            ],
            "groups": [
              {
                "title": "Variables",
                "kind": 32,
                "children": [2027]
              }
            ],
            "sources": [
              {
                "fileName": "js-packages/@prestojs/ui-antd/src/widgets/FileWidget.tsx",
                "line": 8,
                "character": 74
              }
            ]
          }
        }
      ]
    }
  },
  {
    "id": 1954,
    "name": "BooleanWidget",
    "kind": 32,
    "kindString": "Variable",
    "flags": {
      "isExported": true,
      "isConst": true
    },
    "comment": {
      "shortText": "See [Checkbox](https://next.ant.design/components/checkbox/) for props available"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/ui-antd/src/widgets/BooleanWidget.tsx",
        "line": 8,
        "character": 19
      }
    ],
    "type": {
      "type": "reference",
      "name": "ForwardRefExoticComponent",
      "typeArguments": [
        {
          "type": "intersection",
          "types": [
            {
              "type": "reference",
              "name": "WidgetProps",
              "id": 1560,
              "typeArguments": [
                {
                  "type": "intrinsic",
                  "name": "boolean"
                },
                {
                  "type": "reference",
                  "name": "HTMLInputElement"
                }
              ]
            },
            {
              "type": "reference",
              "name": "RefAttributes",
              "typeArguments": [
                {
                  "type": "reference",
                  "name": "Checkbox"
                }
              ]
            }
          ]
        }
      ]
    },
    "defaultValue": " React.forwardRef(\n    (\n        { input, ...rest }: WidgetProps<boolean, HTMLInputElement>,\n        ref: React.RefObject<Checkbox>\n    ): React.ReactElement => {\n        const { value, ...restInput } = input;\n        return <Checkbox ref={ref} checked={!!value} {...restInput} {...rest} />;\n    }\n)"
  },
  {
    "id": 1985,
    "name": "CharChoicesWidget",
    "kind": 32,
    "kindString": "Variable",
    "flags": {
      "isExported": true,
      "isConst": true
    },
    "comment": {
      "shortText": "pass widgetType: 'select' | 'radio' to specify widget type\nby default, select is used when there are 4 or more choices available, otherwise radio",
      "text": "See [Select](https://next.ant.design/components/select/) for Select props available\nSee [Radio](https://next.ant.design/components/radio/)   for Radio props available\n"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/ui-antd/src/widgets/CharChoicesWidget.tsx",
        "line": 13,
        "character": 23
      }
    ],
    "type": {
      "type": "reference",
      "name": "ForwardRefExoticComponent",
      "typeArguments": [
        {
          "type": "intersection",
          "types": [
            {
              "type": "reference",
              "name": "WidgetProps",
              "id": 1560,
              "typeArguments": [
                {
                  "type": "intrinsic",
                  "name": "string"
                },
                {
                  "type": "reference",
                  "name": "HTMLElement"
                }
              ]
            },
            {
              "type": "reflection",
              "declaration": {
                "id": 1986,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "children": [
                  {
                    "id": 1987,
                    "name": "widgetType",
                    "kind": 32,
                    "kindString": "Variable",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "js-packages/@prestojs/ui-antd/src/widgets/CharChoicesWidget.tsx",
                        "line": 18,
                        "character": 58
                      }
                    ],
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "stringLiteral",
                          "value": "select"
                        },
                        {
                          "type": "stringLiteral",
                          "value": "radio"
                        },
                        {
                          "type": "intrinsic",
                          "name": "undefined"
                        }
                      ]
                    }
                  }
                ],
                "groups": [
                  {
                    "title": "Variables",
                    "kind": 32,
                    "children": [1987]
                  }
                ]
              }
            },
            {
              "type": "reference",
              "name": "RefAttributes",
              "typeArguments": [
                {
                  "type": "intrinsic",
                  "name": "unknown"
                }
              ]
            }
          ]
        }
      ]
    },
    "defaultValue": " React.forwardRef(\n    (\n        {\n            widgetType,\n            ...rest\n        }: WidgetProps<string, HTMLElement> & { widgetType: 'select' | 'radio' | undefined },\n        ref: any\n    ): React.ReactElement => {\n        if (widgetType === 'select') {\n            return <SelectChoiceWidget ref={ref} {...rest} />;\n        } else if (widgetType === 'radio') {\n            return <RadioChoiceWidget ref={ref} {...rest} />;\n        } else if (rest.choices && rest.choices.size > 3) {\n            return <SelectChoiceWidget ref={ref} {...rest} />;\n        }\n\n        return <RadioChoiceWidget ref={ref} {...rest} />;\n    }\n)"
  },
  {
    "id": 1956,
    "name": "CharWidget",
    "kind": 32,
    "kindString": "Variable",
    "flags": {
      "isExported": true,
      "isConst": true
    },
    "comment": {
      "shortText": "See [Input](https://next.ant.design/components/input/) for props available"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/ui-antd/src/widgets/CharWidget.tsx",
        "line": 8,
        "character": 16
      }
    ],
    "type": {
      "type": "reference",
      "name": "ForwardRefExoticComponent",
      "typeArguments": [
        {
          "type": "intersection",
          "types": [
            {
              "type": "reference",
              "name": "WidgetProps",
              "id": 1560,
              "typeArguments": [
                {
                  "type": "intrinsic",
                  "name": "string"
                },
                {
                  "type": "reference",
                  "name": "HTMLInputElement"
                }
              ]
            },
            {
              "type": "reference",
              "name": "RefAttributes",
              "typeArguments": [
                {
                  "type": "reference",
                  "name": "Input"
                }
              ]
            }
          ]
        }
      ]
    },
    "defaultValue": " React.forwardRef(\n    (\n        { input, ...rest }: WidgetProps<string, HTMLInputElement>,\n        ref: React.RefObject<Input>\n    ): React.ReactElement => {\n        return <Input ref={ref} {...input} {...rest} />;\n    }\n)"
  },
  {
    "id": 1989,
    "name": "CurrencyWidget",
    "kind": 32,
    "kindString": "Variable",
    "flags": {
      "isExported": true,
      "isConst": true
    },
    "comment": {
      "shortText": "See [InputNumber](https://ant.design/components/input-number/) for props available"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/ui-antd/src/widgets/CurrencyWidget.tsx",
        "line": 10,
        "character": 20
      }
    ],
    "type": {
      "type": "reference",
      "name": "ForwardRefExoticComponent",
      "typeArguments": [
        {
          "type": "intersection",
          "types": [
            {
              "type": "reference",
              "name": "WidgetProps",
              "id": 1560,
              "typeArguments": [
                {
                  "type": "intrinsic",
                  "name": "string"
                },
                {
                  "type": "reference",
                  "name": "HTMLInputElement"
                }
              ]
            },
            {
              "type": "reference",
              "name": "RefAttributes",
              "typeArguments": [
                {
                  "type": "reference",
                  "name": "InputNumber"
                }
              ]
            }
          ]
        }
      ]
    },
    "defaultValue": " React.forwardRef(\n    (\n        { input, ...rest }: WidgetProps<string, HTMLInputElement>,\n        ref: React.RefObject<InputNumber>\n    ): React.ReactElement => {\n        const { value, ...restInput } = input;\n        const valueNum: number | null | undefined =\n            value === undefined || value === null ? value : Number(value);\n        return <InputNumber ref={ref} value={valueNum} {...restInput} {...rest} />;\n    }\n)"
  },
  {
    "id": 1999,
    "name": "DateRangeWidget",
    "kind": 32,
    "kindString": "Variable",
    "flags": {
      "isExported": true,
      "isConst": true
    },
    "comment": {
      "shortText": "See [DatePicker](https://next.ant.design/components/date-picker/) for props available",
      "text": "As with all range widgets, ref should be shaped as { lowerRef: Ref(), upperRef: Ref() }\n"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/ui-antd/src/widgets/DateRangeWidget.tsx",
        "line": 12,
        "character": 21
      }
    ],
    "type": {
      "type": "reference",
      "name": "ForwardRefExoticComponent",
      "typeArguments": [
        {
          "type": "intersection",
          "types": [
            {
              "type": "reference",
              "name": "RangedWidgetProps",
              "id": 1566,
              "typeArguments": [
                {
                  "type": "reference",
                  "name": "Date"
                },
                {
                  "type": "reference",
                  "name": "HTMLInputElement"
                },
                {
                  "type": "reference",
                  "name": "DatePickerProps"
                }
              ]
            },
            {
              "type": "reference",
              "name": "RefAttributes",
              "typeArguments": [
                {
                  "type": "reference",
                  "name": "DatePickerProps"
                }
              ]
            }
          ]
        }
      ]
    },
    "defaultValue": " React.forwardRef(\n    (\n        {\n            lowerInput,\n            upperInput,\n            separator,\n            ...rest\n        }: RangedWidgetProps<Date, HTMLInputElement, DatePickerProps>,\n        ref: React.RefObject<DatePickerProps>\n    ): React.ReactElement => {\n        const { format: formatLower = 'MMMM Do YYYY', ...restLower } = lowerInput;\n        const { format: formatUpper = 'MMMM Do YYYY', ...restUpper } = upperInput;\n\n        const lower = { ...{ format: formatLower, ...restLower } };\n        const upper = { ...{ format: formatUpper, ...restUpper } };\n\n        return (\n            <RangeWidget\n                ref={ref}\n                lowerInput={lower}\n                upperInput={upper}\n                separator={separator}\n                inputWidget={DatePicker}\n                {...rest}\n            />\n        );\n    }\n)"
  },
  {
    "id": 2005,
    "name": "DateTimeRangeWidget",
    "kind": 32,
    "kindString": "Variable",
    "flags": {
      "isExported": true,
      "isConst": true
    },
    "comment": {
      "shortText": "See [DatePicker](https://next.ant.design/components/date-picker/) for props available",
      "text": "As with all range widgets, ref should be shaped as { lowerRef: Ref(), upperRef: Ref() }\n"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/ui-antd/src/widgets/DateTimeRangeWidget.tsx",
        "line": 12,
        "character": 25
      }
    ],
    "type": {
      "type": "reference",
      "name": "ForwardRefExoticComponent",
      "typeArguments": [
        {
          "type": "intersection",
          "types": [
            {
              "type": "reference",
              "name": "RangedWidgetProps",
              "id": 1566,
              "typeArguments": [
                {
                  "type": "reference",
                  "name": "Date"
                },
                {
                  "type": "reference",
                  "name": "HTMLInputElement"
                },
                {
                  "type": "reference",
                  "name": "DatePickerProps"
                }
              ]
            },
            {
              "type": "reference",
              "name": "RefAttributes",
              "typeArguments": [
                {
                  "type": "reference",
                  "name": "DatePickerProps"
                }
              ]
            }
          ]
        }
      ]
    },
    "defaultValue": " React.forwardRef(\n    (\n        {\n            lowerInput,\n            upperInput,\n            separator,\n            ...rest\n        }: RangedWidgetProps<Date, HTMLInputElement, DatePickerProps>,\n        ref: React.RefObject<DatePickerProps>\n    ): React.ReactElement => {\n        const { format: formatLower = 'MMMM Do YYYY, h:mm a', ...restLower } = lowerInput;\n        const { format: formatUpper = 'MMMM Do YYYY, h:mm a', ...restUpper } = upperInput;\n\n        const lower = { ...{ format: formatLower, ...restLower } };\n        const upper = { ...{ format: formatUpper, ...restUpper } };\n\n        return (\n            <RangeWidget\n                ref={ref}\n                lowerInput={lower}\n                upperInput={upper}\n                separator={separator}\n                inputWidget={DatePicker}\n                {...rest}\n            />\n        );\n    }\n)"
  },
  {
    "id": 2001,
    "name": "DateTimeWidget",
    "kind": 32,
    "kindString": "Variable",
    "flags": {
      "isExported": true,
      "isConst": true
    },
    "comment": {
      "shortText": "See [DatePicker](https://next.ant.design/components/date-picker/) for props available"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/ui-antd/src/widgets/DateTimeWidget.tsx",
        "line": 9,
        "character": 20
      }
    ],
    "type": {
      "type": "reference",
      "name": "ForwardRefExoticComponent",
      "typeArguments": [
        {
          "type": "intersection",
          "types": [
            {
              "type": "reference",
              "name": "WidgetProps",
              "id": 1560,
              "typeArguments": [
                {
                  "type": "reference",
                  "name": "Date"
                },
                {
                  "type": "reference",
                  "name": "HTMLInputElement"
                }
              ]
            },
            {
              "type": "reflection",
              "declaration": {
                "id": 2002,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "children": [
                  {
                    "id": 2003,
                    "name": "input",
                    "kind": 32,
                    "kindString": "Variable",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "js-packages/@prestojs/ui-antd/src/widgets/DateTimeWidget.tsx",
                        "line": 11,
                        "character": 73
                      }
                    ],
                    "type": {
                      "type": "reference",
                      "name": "DatePickerProps"
                    }
                  }
                ],
                "groups": [
                  {
                    "title": "Variables",
                    "kind": 32,
                    "children": [2003]
                  }
                ]
              }
            },
            {
              "type": "reference",
              "name": "RefAttributes",
              "typeArguments": [
                {
                  "type": "reference",
                  "name": "ClassicComponent",
                  "typeArguments": [
                    {
                      "type": "reference",
                      "name": "DatePickerProps"
                    },
                    {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    "defaultValue": " React.forwardRef(\n    (\n        { input, ...rest }: WidgetProps<Date, HTMLInputElement> & { input: DatePickerProps },\n        ref: React.RefObject<React.ClassicComponent<DatePickerProps, any>>\n    ): React.ReactElement => {\n        const { format = 'MMMM Do YYYY, h:mm a', ...restInput } = input;\n        return <DatePicker ref={ref} showTime format={format} {...restInput} {...rest} />;\n    }\n)"
  },
  {
    "id": 1991,
    "name": "DateWidget",
    "kind": 32,
    "kindString": "Variable",
    "flags": {
      "isExported": true,
      "isConst": true
    },
    "comment": {
      "shortText": "See [DatePicker](https://next.ant.design/components/date-picker/) for props available"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/ui-antd/src/widgets/DateWidget.tsx",
        "line": 10,
        "character": 16
      }
    ],
    "type": {
      "type": "reference",
      "name": "ForwardRefExoticComponent",
      "typeArguments": [
        {
          "type": "intersection",
          "types": [
            {
              "type": "reference",
              "name": "WidgetProps",
              "id": 1560,
              "typeArguments": [
                {
                  "type": "reference",
                  "name": "Date"
                },
                {
                  "type": "reference",
                  "name": "HTMLInputElement"
                }
              ]
            },
            {
              "type": "reflection",
              "declaration": {
                "id": 1992,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "children": [
                  {
                    "id": 1993,
                    "name": "input",
                    "kind": 32,
                    "kindString": "Variable",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "js-packages/@prestojs/ui-antd/src/widgets/DateWidget.tsx",
                        "line": 12,
                        "character": 73
                      }
                    ],
                    "type": {
                      "type": "reference",
                      "name": "DatePickerProps"
                    }
                  }
                ],
                "groups": [
                  {
                    "title": "Variables",
                    "kind": 32,
                    "children": [1993]
                  }
                ]
              }
            },
            {
              "type": "reference",
              "name": "RefAttributes",
              "typeArguments": [
                {
                  "type": "reference",
                  "name": "ClassicComponent",
                  "typeArguments": [
                    {
                      "type": "reference",
                      "name": "DatePickerProps"
                    },
                    {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    "defaultValue": " React.forwardRef(\n    (\n        { input, ...rest }: WidgetProps<Date, HTMLInputElement> & { input: DatePickerProps },\n        ref: React.RefObject<React.ClassicComponent<DatePickerProps, any>>\n    ): React.ReactElement => {\n        const { format = 'MMMM Do YYYY', ...restInput } = input;\n        return <DatePicker ref={ref} format={format} {...restInput} {...rest} />;\n    }\n)"
  },
  {
    "id": 2007,
    "name": "DecimalWidget",
    "kind": 32,
    "kindString": "Variable",
    "flags": {
      "isExported": true,
      "isConst": true
    },
    "comment": {
      "shortText": "See [InputNumber](https://ant.design/components/input-number/) for props available"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/ui-antd/src/widgets/DecimalWidget.tsx",
        "line": 8,
        "character": 19
      }
    ],
    "type": {
      "type": "reference",
      "name": "ForwardRefExoticComponent",
      "typeArguments": [
        {
          "type": "intersection",
          "types": [
            {
              "type": "reference",
              "name": "WidgetProps",
              "id": 1560,
              "typeArguments": [
                {
                  "type": "intrinsic",
                  "name": "string"
                },
                {
                  "type": "reference",
                  "name": "HTMLInputElement"
                }
              ]
            },
            {
              "type": "reference",
              "name": "RefAttributes",
              "typeArguments": [
                {
                  "type": "reference",
                  "name": "InputNumber"
                }
              ]
            }
          ]
        }
      ]
    },
    "defaultValue": " React.forwardRef(\n    (\n        { input, ...rest }: WidgetProps<string, HTMLInputElement>,\n        ref: React.RefObject<InputNumber>\n    ): React.ReactElement => {\n        const { value, ...restInput } = input;\n        const valueNum: number | null | undefined =\n            value === undefined || value === null ? value : Number(value);\n        return <InputNumber ref={ref} value={valueNum} {...restInput} {...rest} />;\n    }\n)"
  },
  {
    "id": 2009,
    "name": "DurationWidget",
    "kind": 32,
    "kindString": "Variable",
    "flags": {
      "isExported": true,
      "isConst": true
    },
    "comment": {
      "shortText": "See [TimePicker](https://next.ant.design/components/time-picker/) for props available"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/ui-antd/src/widgets/DurationWidget.tsx",
        "line": 10,
        "character": 20
      }
    ],
    "type": {
      "type": "reference",
      "name": "ForwardRefExoticComponent",
      "typeArguments": [
        {
          "type": "intersection",
          "types": [
            {
              "type": "reference",
              "name": "WidgetProps",
              "id": 1560,
              "typeArguments": [
                {
                  "type": "intrinsic",
                  "name": "string"
                },
                {
                  "type": "reference",
                  "name": "HTMLInputElement"
                }
              ]
            },
            {
              "type": "reflection",
              "declaration": {
                "id": 2010,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "children": [
                  {
                    "id": 2011,
                    "name": "input",
                    "kind": 32,
                    "kindString": "Variable",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "js-packages/@prestojs/ui-antd/src/widgets/DurationWidget.tsx",
                        "line": 12,
                        "character": 75
                      }
                    ],
                    "type": {
                      "type": "reference",
                      "name": "TimePickerProps"
                    }
                  }
                ],
                "groups": [
                  {
                    "title": "Variables",
                    "kind": 32,
                    "children": [2011]
                  }
                ]
              }
            },
            {
              "type": "reference",
              "name": "RefAttributes",
              "typeArguments": [
                {
                  "type": "reference",
                  "name": "TimePicker"
                }
              ]
            }
          ]
        }
      ]
    },
    "defaultValue": " React.forwardRef(\n    (\n        { input, ...rest }: WidgetProps<string, HTMLInputElement> & { input: TimePickerProps },\n        ref: React.RefObject<TimePicker>\n    ): React.ReactElement => {\n        return <TimePicker ref={ref} format=\"HH:mm\" {...input} {...rest} />;\n    }\n)"
  },
  {
    "id": 2013,
    "name": "EmailWidget",
    "kind": 32,
    "kindString": "Variable",
    "flags": {
      "isExported": true,
      "isConst": true
    },
    "comment": {
      "shortText": "See [Input](https://next.ant.design/components/input/) for props available"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/ui-antd/src/widgets/EmailWidget.tsx",
        "line": 8,
        "character": 17
      }
    ],
    "type": {
      "type": "reference",
      "name": "ForwardRefExoticComponent",
      "typeArguments": [
        {
          "type": "intersection",
          "types": [
            {
              "type": "reference",
              "name": "WidgetProps",
              "id": 1560,
              "typeArguments": [
                {
                  "type": "intrinsic",
                  "name": "string"
                },
                {
                  "type": "reference",
                  "name": "HTMLInputElement"
                }
              ]
            },
            {
              "type": "reference",
              "name": "RefAttributes",
              "typeArguments": [
                {
                  "type": "reference",
                  "name": "Input"
                }
              ]
            }
          ]
        }
      ]
    },
    "defaultValue": " React.forwardRef(\n    (\n        { input, ...rest }: WidgetProps<string, HTMLInputElement>,\n        ref: React.RefObject<Input>\n    ): React.ReactElement => {\n        return <Input ref={ref} {...input} {...rest} />;\n    }\n)"
  },
  {
    "id": 2028,
    "name": "FileWidget",
    "kind": 32,
    "kindString": "Variable",
    "flags": {
      "isExported": true,
      "isConst": true
    },
    "comment": {
      "shortText": "See [Upload](https://next.ant.design/components/upload/) for props available"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/ui-antd/src/widgets/FileWidget.tsx",
        "line": 23,
        "character": 16
      }
    ],
    "type": {
      "type": "reference",
      "name": "ForwardRefExoticComponent",
      "typeArguments": [
        {
          "type": "intersection",
          "types": [
            {
              "type": "reference",
              "name": "UploadWidgetProps",
              "id": 2015,
              "typeArguments": [
                {
                  "type": "reference",
                  "name": "File"
                },
                {
                  "type": "reference",
                  "name": "HTMLInputElement"
                }
              ]
            },
            {
              "type": "reference",
              "name": "RefAttributes",
              "typeArguments": [
                {
                  "type": "reference",
                  "name": "Upload"
                }
              ]
            }
          ]
        }
      ]
    },
    "defaultValue": " React.forwardRef(\n    (\n        {\n            input,\n            beforeUpload,\n            listType = 'text',\n            ...rest\n        }: UploadWidgetProps<File, HTMLInputElement>,\n        ref: React.RefObject<Upload>\n    ): React.ReactElement => {\n        const [fileList, setFileList] = useState([] as Array<UploadFile>);\n\n        const beforeUploadFile = (file: any): boolean => {\n            if (beforeUpload) {\n                beforeUpload(file, fileList);\n            }\n            input.onChange(file);\n            const newFiles = fileList;\n            newFiles.push(file);\n            setFileList(newFiles);\n            return false;\n        };\n\n        const handleRemove = (file: any): void => {\n            input.onChange(null);\n            setFileList(fileList.filter(v => v != file));\n        };\n\n        useEffect(() => {\n            const { value } = input;\n            if (value) {\n                if (typeof value == 'string') {\n                    const parts = (value as string).split('/');\n                    fileList.push({\n                        uid: '-1',\n                        name: parts.length > 0 ? parts[parts.length - 1] : value,\n                        status: 'done',\n                        url: value,\n                        thumbUrl: value,\n                        size: -1,\n                        type: 'select',\n                    });\n                } else if (Array.isArray(value)) {\n                    value.map(entry => {\n                        const parts = (entry as string).split('/');\n                        return fileList.push({\n                            uid: '-1',\n                            name: parts.length > 0 ? parts[parts.length - 1] : entry,\n                            status: 'done',\n                            url: entry,\n                            thumbUrl: entry,\n                            size: -1,\n                            type: 'select',\n                        });\n                    });\n                } else {\n                    fileList.push(value as any);\n                }\n            }\n        }, [fileList, input]);\n\n        return (\n            <Upload\n                ref={ref}\n                listType={listType}\n                beforeUpload={beforeUploadFile}\n                onRemove={handleRemove}\n                fileList={fileList}\n                {...input}\n                {...rest}\n            >\n                {listType !== 'picture-card' && (\n                    <Button>\n                        <UploadOutlined /> Click to Upload\n                    </Button>\n                )}\n                {listType === 'picture-card' && <PlusOutlined />}\n            </Upload>\n        );\n    }\n)"
  },
  {
    "id": 2032,
    "name": "FloatRangeWidget",
    "kind": 32,
    "kindString": "Variable",
    "flags": {
      "isExported": true,
      "isConst": true
    },
    "comment": {
      "shortText": "See [InputNumber](https://ant.design/components/input-number/) for props available",
      "text": "As with all range widgets, ref should be shaped as { lowerRef: Ref(), upperRef: Ref() }\n"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/ui-antd/src/widgets/FloatRangeWidget.tsx",
        "line": 12,
        "character": 22
      }
    ],
    "type": {
      "type": "reference",
      "name": "ForwardRefExoticComponent",
      "typeArguments": [
        {
          "type": "intersection",
          "types": [
            {
              "type": "reference",
              "name": "RangedWidgetProps",
              "id": 1566,
              "typeArguments": [
                {
                  "type": "intrinsic",
                  "name": "number"
                },
                {
                  "type": "reference",
                  "name": "HTMLElement"
                },
                {
                  "type": "reference",
                  "name": "InputNumberProps"
                }
              ]
            },
            {
              "type": "reference",
              "name": "RefAttributes",
              "typeArguments": [
                {
                  "type": "reference",
                  "name": "InputNumber"
                }
              ]
            }
          ]
        }
      ]
    },
    "defaultValue": " React.forwardRef(\n    (\n        {\n            lowerInput,\n            upperInput,\n            separator,\n            ...rest\n        }: RangedWidgetProps<number, HTMLElement, InputNumberProps>,\n        ref: React.RefObject<InputNumber>\n    ): React.ReactElement => {\n        return (\n            <RangeWidget\n                ref={ref}\n                lowerInput={lowerInput}\n                upperInput={upperInput}\n                separator={separator}\n                inputWidget={InputNumber}\n                {...rest}\n            />\n        );\n    }\n)"
  },
  {
    "id": 2030,
    "name": "FloatWidget",
    "kind": 32,
    "kindString": "Variable",
    "flags": {
      "isExported": true,
      "isConst": true
    },
    "comment": {
      "shortText": "See [InputNumber](https://ant.design/components/input-number/) for props available"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/ui-antd/src/widgets/FloatWidget.tsx",
        "line": 8,
        "character": 17
      }
    ],
    "type": {
      "type": "reference",
      "name": "ForwardRefExoticComponent",
      "typeArguments": [
        {
          "type": "intersection",
          "types": [
            {
              "type": "reference",
              "name": "WidgetProps",
              "id": 1560,
              "typeArguments": [
                {
                  "type": "intrinsic",
                  "name": "number"
                },
                {
                  "type": "reference",
                  "name": "HTMLInputElement"
                }
              ]
            },
            {
              "type": "reference",
              "name": "RefAttributes",
              "typeArguments": [
                {
                  "type": "reference",
                  "name": "InputNumber"
                }
              ]
            }
          ]
        }
      ]
    },
    "defaultValue": " React.forwardRef(\n    (\n        { input, ...rest }: WidgetProps<number, HTMLInputElement>,\n        ref: React.RefObject<InputNumber>\n    ): React.ReactElement => {\n        return <InputNumber ref={ref} {...input} {...rest} />;\n    }\n)"
  },
  {
    "id": 2044,
    "name": "IPAddressWidget",
    "kind": 32,
    "kindString": "Variable",
    "flags": {
      "isExported": true,
      "isConst": true
    },
    "comment": {
      "shortText": "See [Input](https://next.ant.design/components/input/) for props available"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/ui-antd/src/widgets/IPAddressWidget.tsx",
        "line": 8,
        "character": 21
      }
    ],
    "type": {
      "type": "reference",
      "name": "ForwardRefExoticComponent",
      "typeArguments": [
        {
          "type": "intersection",
          "types": [
            {
              "type": "reference",
              "name": "WidgetProps",
              "id": 1560,
              "typeArguments": [
                {
                  "type": "intrinsic",
                  "name": "string"
                },
                {
                  "type": "reference",
                  "name": "HTMLInputElement"
                }
              ]
            },
            {
              "type": "reference",
              "name": "RefAttributes",
              "typeArguments": [
                {
                  "type": "reference",
                  "name": "Input"
                }
              ]
            }
          ]
        }
      ]
    },
    "defaultValue": " React.forwardRef(\n    (\n        { input, ...rest }: WidgetProps<string, HTMLInputElement>,\n        ref: React.RefObject<Input>\n    ): React.ReactElement => {\n        return <Input ref={ref} {...input} {...rest} />;\n    }\n)"
  },
  {
    "id": 2034,
    "name": "ImageWidget",
    "kind": 32,
    "kindString": "Variable",
    "flags": {
      "isExported": true,
      "isConst": true
    },
    "comment": {
      "shortText": "See [Upload](https://next.ant.design/components/upload/) for props available"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/ui-antd/src/widgets/ImageWidget.tsx",
        "line": 9,
        "character": 17
      }
    ],
    "type": {
      "type": "reference",
      "name": "ForwardRefExoticComponent",
      "typeArguments": [
        {
          "type": "intersection",
          "types": [
            {
              "type": "reference",
              "name": "UploadWidgetProps",
              "id": 2015,
              "typeArguments": [
                {
                  "type": "reference",
                  "name": "File"
                },
                {
                  "type": "reference",
                  "name": "HTMLElement"
                }
              ]
            },
            {
              "type": "reference",
              "name": "RefAttributes",
              "typeArguments": [
                {
                  "type": "reference",
                  "name": "Upload"
                }
              ]
            }
          ]
        }
      ]
    },
    "defaultValue": " React.forwardRef(\n    (\n        props: UploadWidgetProps<File, HTMLElement>,\n        ref: React.RefObject<Upload>\n    ): React.ReactElement => {\n        return <FileWidget ref={ref} listType=\"picture-card\" {...props} />;\n    }\n)"
  },
  {
    "id": 2038,
    "name": "IntegerChoicesWidget",
    "kind": 32,
    "kindString": "Variable",
    "flags": {
      "isExported": true,
      "isConst": true
    },
    "comment": {
      "shortText": "pass widgetType: 'select' | 'radio' to specify widget type\nby default, select is used when there are 4 or more choices available, otherwise radio",
      "text": "See [Select](https://next.ant.design/components/select/) for Select props available\nSee [Radio](https://next.ant.design/components/radio/)   for Radio props available\n"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/ui-antd/src/widgets/IntegerChoicesWidget.tsx",
        "line": 13,
        "character": 26
      }
    ],
    "type": {
      "type": "reference",
      "name": "ForwardRefExoticComponent",
      "typeArguments": [
        {
          "type": "intersection",
          "types": [
            {
              "type": "reference",
              "name": "WidgetProps",
              "id": 1560,
              "typeArguments": [
                {
                  "type": "intrinsic",
                  "name": "number"
                },
                {
                  "type": "reference",
                  "name": "HTMLElement"
                }
              ]
            },
            {
              "type": "reflection",
              "declaration": {
                "id": 2039,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "children": [
                  {
                    "id": 2040,
                    "name": "widgetType",
                    "kind": 32,
                    "kindString": "Variable",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "js-packages/@prestojs/ui-antd/src/widgets/IntegerChoicesWidget.tsx",
                        "line": 18,
                        "character": 58
                      }
                    ],
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "stringLiteral",
                          "value": "select"
                        },
                        {
                          "type": "stringLiteral",
                          "value": "radio"
                        },
                        {
                          "type": "intrinsic",
                          "name": "undefined"
                        }
                      ]
                    }
                  }
                ],
                "groups": [
                  {
                    "title": "Variables",
                    "kind": 32,
                    "children": [2040]
                  }
                ]
              }
            },
            {
              "type": "reference",
              "name": "RefAttributes",
              "typeArguments": [
                {
                  "type": "intrinsic",
                  "name": "unknown"
                }
              ]
            }
          ]
        }
      ]
    },
    "defaultValue": " React.forwardRef(\n    (\n        {\n            widgetType,\n            ...rest\n        }: WidgetProps<number, HTMLElement> & { widgetType?: 'select' | 'radio' | undefined },\n        ref: any\n    ): React.ReactElement => {\n        if (widgetType === 'select') {\n            return <SelectChoiceWidget ref={ref} {...rest} />;\n        } else if (widgetType === 'radio') {\n            return <RadioChoiceWidget ref={ref} {...rest} />;\n        } else if (rest.choices && rest.choices.size > 3) {\n            return <SelectChoiceWidget ref={ref} {...rest} />;\n        }\n\n        return <RadioChoiceWidget ref={ref} {...rest} />;\n    }\n)"
  },
  {
    "id": 2042,
    "name": "IntegerRangeWidget",
    "kind": 32,
    "kindString": "Variable",
    "flags": {
      "isExported": true,
      "isConst": true
    },
    "comment": {
      "shortText": "See [InputNumber](https://ant.design/components/input-number/) for props available",
      "text": "As with all range widgets, ref should be shaped as { lowerRef: Ref(), upperRef: Ref() }\n"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/ui-antd/src/widgets/IntegerRangeWidget.tsx",
        "line": 12,
        "character": 24
      }
    ],
    "type": {
      "type": "reference",
      "name": "ForwardRefExoticComponent",
      "typeArguments": [
        {
          "type": "intersection",
          "types": [
            {
              "type": "reference",
              "name": "RangedWidgetProps",
              "id": 1566,
              "typeArguments": [
                {
                  "type": "intrinsic",
                  "name": "number"
                },
                {
                  "type": "reference",
                  "name": "HTMLElement"
                },
                {
                  "type": "reference",
                  "name": "InputNumberProps"
                }
              ]
            },
            {
              "type": "reference",
              "name": "RefAttributes",
              "typeArguments": [
                {
                  "type": "reference",
                  "name": "InputNumber"
                }
              ]
            }
          ]
        }
      ]
    },
    "defaultValue": " React.forwardRef(\n    (\n        {\n            lowerInput,\n            upperInput,\n            separator,\n            ...rest\n        }: RangedWidgetProps<number, HTMLElement, InputNumberProps>,\n        ref: React.RefObject<InputNumber>\n    ): React.ReactElement => {\n        return (\n            <RangeWidget\n                ref={ref}\n                lowerInput={lowerInput}\n                upperInput={upperInput}\n                separator={separator}\n                inputWidget={InputNumber}\n                {...rest}\n            />\n        );\n    }\n)"
  },
  {
    "id": 2036,
    "name": "IntegerWidget",
    "kind": 32,
    "kindString": "Variable",
    "flags": {
      "isExported": true,
      "isConst": true
    },
    "comment": {
      "shortText": "See [InputNumber](https://ant.design/components/input-number/) for props available"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/ui-antd/src/widgets/IntegerWidget.tsx",
        "line": 8,
        "character": 19
      }
    ],
    "type": {
      "type": "reference",
      "name": "ForwardRefExoticComponent",
      "typeArguments": [
        {
          "type": "intersection",
          "types": [
            {
              "type": "reference",
              "name": "WidgetProps",
              "id": 1560,
              "typeArguments": [
                {
                  "type": "intrinsic",
                  "name": "number"
                },
                {
                  "type": "reference",
                  "name": "HTMLInputElement"
                }
              ]
            },
            {
              "type": "reference",
              "name": "RefAttributes",
              "typeArguments": [
                {
                  "type": "reference",
                  "name": "InputNumber"
                }
              ]
            }
          ]
        }
      ]
    },
    "defaultValue": " React.forwardRef(\n    (\n        { input, ...rest }: WidgetProps<number, HTMLInputElement>,\n        ref: React.RefObject<InputNumber>\n    ): React.ReactElement => {\n        return <InputNumber ref={ref} {...rest} {...input} />;\n    }\n)"
  },
  {
    "id": 2046,
    "name": "JsonWidget",
    "kind": 32,
    "kindString": "Variable",
    "flags": {
      "isExported": true,
      "isConst": true
    },
    "comment": {
      "shortText": "See [Input](https://next.ant.design/components/input/) for props available"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/ui-antd/src/widgets/JsonWidget.tsx",
        "line": 10,
        "character": 16
      }
    ],
    "type": {
      "type": "reference",
      "name": "ForwardRefExoticComponent",
      "typeArguments": [
        {
          "type": "intersection",
          "types": [
            {
              "type": "reference",
              "name": "WidgetProps",
              "id": 1560,
              "typeArguments": [
                {
                  "type": "intrinsic",
                  "name": "string"
                },
                {
                  "type": "reference",
                  "name": "HTMLTextAreaElement"
                }
              ]
            },
            {
              "type": "reference",
              "name": "RefAttributes",
              "typeArguments": [
                {
                  "type": "reference",
                  "name": "TextArea"
                }
              ]
            }
          ]
        }
      ]
    },
    "defaultValue": " React.forwardRef(\n    (\n        { input, ...rest }: WidgetProps<string, HTMLTextAreaElement>,\n        ref: React.RefObject<TextArea>\n    ): React.ReactElement => {\n        return <Input.TextArea ref={ref} {...input} {...rest} />;\n    }\n)"
  },
  {
    "id": 2048,
    "name": "NullableBooleanWidget",
    "kind": 32,
    "kindString": "Variable",
    "flags": {
      "isExported": true,
      "isConst": true
    },
    "comment": {
      "shortText": "See [Select](https://next.ant.design/components/select/) for Select props available"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/ui-antd/src/widgets/NullableBooleanWidget.tsx",
        "line": 9,
        "character": 27
      }
    ],
    "type": {
      "type": "reference",
      "name": "ForwardRefExoticComponent",
      "typeArguments": [
        {
          "type": "intersection",
          "types": [
            {
              "type": "reference",
              "name": "WidgetProps",
              "id": 1560,
              "typeArguments": [
                {
                  "type": "union",
                  "types": [
                    {
                      "type": "intrinsic",
                      "name": "string"
                    },
                    {
                      "type": "intrinsic",
                      "name": "false"
                    },
                    {
                      "type": "intrinsic",
                      "name": "true"
                    }
                  ]
                },
                {
                  "type": "reference",
                  "name": "HTMLElement"
                }
              ]
            },
            {
              "type": "reflection",
              "declaration": {
                "id": 2049,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "children": [
                  {
                    "id": 2050,
                    "name": "blankLabel",
                    "kind": 32,
                    "kindString": "Variable",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "js-packages/@prestojs/ui-antd/src/widgets/NullableBooleanWidget.tsx",
                        "line": 16,
                        "character": 22
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  }
                ],
                "groups": [
                  {
                    "title": "Variables",
                    "kind": 32,
                    "children": [2050]
                  }
                ]
              }
            },
            {
              "type": "reference",
              "name": "SelectProps",
              "typeArguments": [
                {
                  "type": "intrinsic",
                  "name": "any"
                }
              ]
            },
            {
              "type": "reference",
              "name": "WidgetProps",
              "id": 1560,
              "typeArguments": [
                {
                  "type": "union",
                  "types": [
                    {
                      "type": "intrinsic",
                      "name": "string"
                    },
                    {
                      "type": "intrinsic",
                      "name": "number"
                    },
                    {
                      "type": "intrinsic",
                      "name": "false"
                    },
                    {
                      "type": "intrinsic",
                      "name": "true"
                    }
                  ]
                },
                {
                  "type": "reference",
                  "name": "HTMLSelectElement"
                }
              ]
            },
            {
              "type": "reflection",
              "declaration": {
                "id": 2051,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "children": [
                  {
                    "id": 2052,
                    "name": "input",
                    "kind": 32,
                    "kindString": "Variable",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "js-packages/@prestojs/ui-antd/src/widgets/SelectChoiceWidget.tsx",
                        "line": 8,
                        "character": 13
                      }
                    ],
                    "type": {
                      "type": "intersection",
                      "types": [
                        {
                          "type": "reference",
                          "name": "InputProps",
                          "id": 1540,
                          "typeArguments": [
                            {
                              "type": "union",
                              "types": [
                                {
                                  "type": "intrinsic",
                                  "name": "number"
                                },
                                {
                                  "type": "intrinsic",
                                  "name": "string"
                                },
                                {
                                  "type": "intrinsic",
                                  "name": "boolean"
                                }
                              ]
                            },
                            {
                              "type": "reference",
                              "name": "HTMLSelectElement"
                            }
                          ]
                        },
                        {
                          "type": "reflection",
                          "declaration": {
                            "id": 2053,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {},
                            "children": [
                              {
                                "id": 2054,
                                "name": "onBlur",
                                "kind": 32,
                                "kindString": "Variable",
                                "flags": {},
                                "sources": [
                                  {
                                    "fileName": "js-packages/@prestojs/ui-antd/src/widgets/SelectChoiceWidget.tsx",
                                    "line": 10,
                                    "character": 18
                                  }
                                ],
                                "type": {
                                  "type": "reflection",
                                  "declaration": {
                                    "id": 2055,
                                    "name": "__type",
                                    "kind": 65536,
                                    "kindString": "Type literal",
                                    "flags": {},
                                    "signatures": [
                                      {
                                        "id": 2056,
                                        "name": "__call",
                                        "kind": 4096,
                                        "kindString": "Call signature",
                                        "flags": {},
                                        "parameters": [
                                          {
                                            "id": 2057,
                                            "name": "event",
                                            "kind": 32768,
                                            "kindString": "Parameter",
                                            "flags": {},
                                            "type": {
                                              "type": "reference",
                                              "name": "FocusEvent",
                                              "typeArguments": [
                                                {
                                                  "type": "reference",
                                                  "name": "HTMLSelectElement"
                                                }
                                              ]
                                            }
                                          }
                                        ],
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "void"
                                        }
                                      }
                                    ],
                                    "sources": [
                                      {
                                        "fileName": "js-packages/@prestojs/ui-antd/src/widgets/SelectChoiceWidget.tsx",
                                        "line": 10,
                                        "character": 19
                                      }
                                    ]
                                  }
                                }
                              },
                              {
                                "id": 2058,
                                "name": "onFocus",
                                "kind": 32,
                                "kindString": "Variable",
                                "flags": {},
                                "sources": [
                                  {
                                    "fileName": "js-packages/@prestojs/ui-antd/src/widgets/SelectChoiceWidget.tsx",
                                    "line": 11,
                                    "character": 19
                                  }
                                ],
                                "type": {
                                  "type": "reflection",
                                  "declaration": {
                                    "id": 2059,
                                    "name": "__type",
                                    "kind": 65536,
                                    "kindString": "Type literal",
                                    "flags": {},
                                    "signatures": [
                                      {
                                        "id": 2060,
                                        "name": "__call",
                                        "kind": 4096,
                                        "kindString": "Call signature",
                                        "flags": {},
                                        "parameters": [
                                          {
                                            "id": 2061,
                                            "name": "event",
                                            "kind": 32768,
                                            "kindString": "Parameter",
                                            "flags": {},
                                            "type": {
                                              "type": "reference",
                                              "name": "FocusEvent",
                                              "typeArguments": [
                                                {
                                                  "type": "reference",
                                                  "name": "HTMLSelectElement"
                                                }
                                              ]
                                            }
                                          }
                                        ],
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "void"
                                        }
                                      }
                                    ],
                                    "sources": [
                                      {
                                        "fileName": "js-packages/@prestojs/ui-antd/src/widgets/SelectChoiceWidget.tsx",
                                        "line": 11,
                                        "character": 20
                                      }
                                    ]
                                  }
                                }
                              }
                            ],
                            "groups": [
                              {
                                "title": "Variables",
                                "kind": 32,
                                "children": [2054, 2058]
                              }
                            ],
                            "sources": [
                              {
                                "fileName": "js-packages/@prestojs/ui-antd/src/widgets/SelectChoiceWidget.tsx",
                                "line": 8,
                                "character": 73
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ],
                "groups": [
                  {
                    "title": "Variables",
                    "kind": 32,
                    "children": [2052]
                  }
                ]
              }
            },
            {
              "type": "reference",
              "name": "RefAttributes",
              "typeArguments": [
                {
                  "type": "reference",
                  "name": "Select",
                  "typeArguments": [
                    {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "string"
                        },
                        {
                          "type": "intrinsic",
                          "name": "number"
                        },
                        {
                          "type": "array",
                          "elementType": {
                            "type": "union",
                            "types": [
                              {
                                "type": "intrinsic",
                                "name": "string"
                              },
                              {
                                "type": "intrinsic",
                                "name": "number"
                              }
                            ]
                          }
                        },
                        {
                          "type": "reference",
                          "name": "LabeledValue"
                        },
                        {
                          "type": "array",
                          "elementType": {
                            "type": "reference",
                            "name": "LabeledValue"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    "defaultValue": " React.forwardRef(\n    (\n        {\n            choices,\n            blankLabel = 'Undecided',\n            ...rest\n        }: WidgetProps<boolean | string, HTMLElement> & {\n            blankLabel: string;\n        } & SelectChoiceProps,\n        ref: React.RefObject<Select>\n    ): React.ReactElement => {\n        const defaultChoices =\n            choices ||\n            new Map([\n                [true, 'Yes'],\n                [false, 'No'],\n                [null, blankLabel],\n            ]);\n\n        const newChoices = new Map(\n            Array.from(defaultChoices as any, ([key, label]) =>\n                key === null ? ['null', label] : [key, label]\n            )\n        ) as Map<boolean | string, string>;\n        // rest onChange override comes before input onChange.\n        const f = rest.onChange || (rest.input as any).onChange;\n        const onChange = (v: boolean | string): void => f(v === 'null' ? null : v);\n\n        return <SelectChoiceWidget ref={ref} choices={newChoices} {...{ onChange, ...rest }} />;\n    }\n)"
  },
  {
    "id": 2063,
    "name": "NumberWidget",
    "kind": 32,
    "kindString": "Variable",
    "flags": {
      "isExported": true,
      "isConst": true
    },
    "comment": {
      "shortText": "See [InputNumber](https://ant.design/components/input-number/) for props available"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/ui-antd/src/widgets/NumberWidget.tsx",
        "line": 8,
        "character": 18
      }
    ],
    "type": {
      "type": "reference",
      "name": "ForwardRefExoticComponent",
      "typeArguments": [
        {
          "type": "intersection",
          "types": [
            {
              "type": "reference",
              "name": "WidgetProps",
              "id": 1560,
              "typeArguments": [
                {
                  "type": "intrinsic",
                  "name": "number"
                },
                {
                  "type": "reference",
                  "name": "HTMLInputElement"
                }
              ]
            },
            {
              "type": "reference",
              "name": "RefAttributes",
              "typeArguments": [
                {
                  "type": "reference",
                  "name": "InputNumber"
                }
              ]
            }
          ]
        }
      ]
    },
    "defaultValue": " React.forwardRef(\n    (\n        { input, ...rest }: WidgetProps<number, HTMLInputElement>,\n        ref: React.RefObject<InputNumber>\n    ): React.ReactElement => {\n        return <InputNumber ref={ref} {...input} {...rest} />;\n    }\n)"
  },
  {
    "id": 1958,
    "name": "RadioChoiceWidget",
    "kind": 32,
    "kindString": "Variable",
    "flags": {
      "isExported": true,
      "isConst": true
    },
    "comment": {
      "shortText": "See [Radio](https://next.ant.design/components/radio/) for props available"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/ui-antd/src/widgets/RadioChoiceWidget.tsx",
        "line": 9,
        "character": 23
      }
    ],
    "type": {
      "type": "reference",
      "name": "ForwardRefExoticComponent",
      "typeArguments": [
        {
          "type": "intersection",
          "types": [
            {
              "type": "reference",
              "name": "WidgetProps",
              "id": 1560,
              "typeArguments": [
                {
                  "type": "union",
                  "types": [
                    {
                      "type": "intrinsic",
                      "name": "string"
                    },
                    {
                      "type": "intrinsic",
                      "name": "number"
                    }
                  ]
                },
                {
                  "type": "reference",
                  "name": "HTMLInputElement"
                }
              ]
            },
            {
              "type": "reference",
              "name": "RefAttributes",
              "typeArguments": [
                {
                  "type": "reference",
                  "name": "RadioGroup"
                }
              ]
            }
          ]
        }
      ]
    },
    "defaultValue": " React.forwardRef(\n    (\n        { input, ...rest }: WidgetProps<number | string, HTMLInputElement>,\n        ref: React.RefObject<RadioGroup>\n    ): React.ReactElement => {\n        return (\n            <Radio.Group ref={ref} {...input} {...rest}>\n                {rest.choices &&\n                    Array.from(rest.choices, ([key, label]) => (\n                        <Radio key={key.toString()} value={key}>\n                            {label}\n                        </Radio>\n                    ))}\n            </Radio.Group>\n        );\n    }\n)"
  },
  {
    "id": 1995,
    "name": "RangeWidget",
    "kind": 32,
    "kindString": "Variable",
    "flags": {
      "isExported": true,
      "isConst": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/ui-antd/src/widgets/RangeWidget.tsx",
        "line": 6,
        "character": 17
      }
    ],
    "type": {
      "type": "reference",
      "name": "ForwardRefExoticComponent",
      "typeArguments": [
        {
          "type": "intersection",
          "types": [
            {
              "type": "reference",
              "name": "RangedWidgetProps",
              "id": 1566,
              "typeArguments": [
                {
                  "type": "intrinsic",
                  "name": "unknown"
                },
                {
                  "type": "reference",
                  "name": "HTMLElement"
                },
                {
                  "type": "intrinsic",
                  "name": "unknown"
                }
              ]
            },
            {
              "type": "reflection",
              "declaration": {
                "id": 1996,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "children": [
                  {
                    "id": 1997,
                    "name": "inputWidget",
                    "kind": 32,
                    "kindString": "Variable",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "js-packages/@prestojs/ui-antd/src/widgets/RangeWidget.tsx",
                        "line": 14,
                        "character": 62
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                ],
                "groups": [
                  {
                    "title": "Variables",
                    "kind": 32,
                    "children": [1997]
                  }
                ]
              }
            },
            {
              "type": "reference",
              "name": "RefAttributes",
              "typeArguments": [
                {
                  "type": "intrinsic",
                  "name": "unknown"
                }
              ]
            }
          ]
        }
      ]
    },
    "defaultValue": " React.forwardRef(\n    <FieldValue, T extends HTMLElement, P>(\n        {\n            lowerInput,\n            upperInput,\n            separator = '-',\n            inputWidget: InputWidget,\n            ...rest\n        }: RangedWidgetProps<FieldValue, T, P> & { inputWidget: any },\n        ref: any\n    ): React.ReactElement => {\n        const { lowerRef, upperRef } = ref;\n        return (\n            <>\n                <Input.Group compact>\n                    <InputWidget ref={lowerRef} {...lowerInput} {...rest} />\n                    <Input placeholder={separator} disabled />\n                    <InputWidget ref={upperRef} {...upperInput} {...rest} />\n                </Input.Group>\n            </>\n        );\n    }\n)"
  },
  {
    "id": 1972,
    "name": "SelectChoiceWidget",
    "kind": 32,
    "kindString": "Variable",
    "flags": {
      "isExported": true,
      "isConst": true
    },
    "comment": {
      "shortText": "See [Select](https://next.ant.design/components/select/) for Select props available"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/ui-antd/src/widgets/SelectChoiceWidget.tsx",
        "line": 18,
        "character": 24
      }
    ],
    "type": {
      "type": "reference",
      "name": "ForwardRefExoticComponent",
      "typeArguments": [
        {
          "type": "intersection",
          "types": [
            {
              "type": "reference",
              "name": "SelectProps",
              "typeArguments": [
                {
                  "type": "intrinsic",
                  "name": "any"
                }
              ]
            },
            {
              "type": "reference",
              "name": "WidgetProps",
              "id": 1560,
              "typeArguments": [
                {
                  "type": "union",
                  "types": [
                    {
                      "type": "intrinsic",
                      "name": "string"
                    },
                    {
                      "type": "intrinsic",
                      "name": "number"
                    },
                    {
                      "type": "intrinsic",
                      "name": "false"
                    },
                    {
                      "type": "intrinsic",
                      "name": "true"
                    }
                  ]
                },
                {
                  "type": "reference",
                  "name": "HTMLSelectElement"
                }
              ]
            },
            {
              "type": "reflection",
              "declaration": {
                "id": 1973,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "children": [
                  {
                    "id": 1974,
                    "name": "input",
                    "kind": 32,
                    "kindString": "Variable",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "js-packages/@prestojs/ui-antd/src/widgets/SelectChoiceWidget.tsx",
                        "line": 8,
                        "character": 13
                      }
                    ],
                    "type": {
                      "type": "intersection",
                      "types": [
                        {
                          "type": "reference",
                          "name": "InputProps",
                          "id": 1540,
                          "typeArguments": [
                            {
                              "type": "union",
                              "types": [
                                {
                                  "type": "intrinsic",
                                  "name": "number"
                                },
                                {
                                  "type": "intrinsic",
                                  "name": "string"
                                },
                                {
                                  "type": "intrinsic",
                                  "name": "boolean"
                                }
                              ]
                            },
                            {
                              "type": "reference",
                              "name": "HTMLSelectElement"
                            }
                          ]
                        },
                        {
                          "type": "reflection",
                          "declaration": {
                            "id": 1975,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {},
                            "children": [
                              {
                                "id": 1976,
                                "name": "onBlur",
                                "kind": 32,
                                "kindString": "Variable",
                                "flags": {},
                                "sources": [
                                  {
                                    "fileName": "js-packages/@prestojs/ui-antd/src/widgets/SelectChoiceWidget.tsx",
                                    "line": 10,
                                    "character": 18
                                  }
                                ],
                                "type": {
                                  "type": "reflection",
                                  "declaration": {
                                    "id": 1977,
                                    "name": "__type",
                                    "kind": 65536,
                                    "kindString": "Type literal",
                                    "flags": {},
                                    "signatures": [
                                      {
                                        "id": 1978,
                                        "name": "__call",
                                        "kind": 4096,
                                        "kindString": "Call signature",
                                        "flags": {},
                                        "parameters": [
                                          {
                                            "id": 1979,
                                            "name": "event",
                                            "kind": 32768,
                                            "kindString": "Parameter",
                                            "flags": {},
                                            "type": {
                                              "type": "reference",
                                              "name": "FocusEvent",
                                              "typeArguments": [
                                                {
                                                  "type": "reference",
                                                  "name": "HTMLSelectElement"
                                                }
                                              ]
                                            }
                                          }
                                        ],
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "void"
                                        }
                                      }
                                    ],
                                    "sources": [
                                      {
                                        "fileName": "js-packages/@prestojs/ui-antd/src/widgets/SelectChoiceWidget.tsx",
                                        "line": 10,
                                        "character": 19
                                      }
                                    ]
                                  }
                                }
                              },
                              {
                                "id": 1980,
                                "name": "onFocus",
                                "kind": 32,
                                "kindString": "Variable",
                                "flags": {},
                                "sources": [
                                  {
                                    "fileName": "js-packages/@prestojs/ui-antd/src/widgets/SelectChoiceWidget.tsx",
                                    "line": 11,
                                    "character": 19
                                  }
                                ],
                                "type": {
                                  "type": "reflection",
                                  "declaration": {
                                    "id": 1981,
                                    "name": "__type",
                                    "kind": 65536,
                                    "kindString": "Type literal",
                                    "flags": {},
                                    "signatures": [
                                      {
                                        "id": 1982,
                                        "name": "__call",
                                        "kind": 4096,
                                        "kindString": "Call signature",
                                        "flags": {},
                                        "parameters": [
                                          {
                                            "id": 1983,
                                            "name": "event",
                                            "kind": 32768,
                                            "kindString": "Parameter",
                                            "flags": {},
                                            "type": {
                                              "type": "reference",
                                              "name": "FocusEvent",
                                              "typeArguments": [
                                                {
                                                  "type": "reference",
                                                  "name": "HTMLSelectElement"
                                                }
                                              ]
                                            }
                                          }
                                        ],
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "void"
                                        }
                                      }
                                    ],
                                    "sources": [
                                      {
                                        "fileName": "js-packages/@prestojs/ui-antd/src/widgets/SelectChoiceWidget.tsx",
                                        "line": 11,
                                        "character": 20
                                      }
                                    ]
                                  }
                                }
                              }
                            ],
                            "groups": [
                              {
                                "title": "Variables",
                                "kind": 32,
                                "children": [1976, 1980]
                              }
                            ],
                            "sources": [
                              {
                                "fileName": "js-packages/@prestojs/ui-antd/src/widgets/SelectChoiceWidget.tsx",
                                "line": 8,
                                "character": 73
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ],
                "groups": [
                  {
                    "title": "Variables",
                    "kind": 32,
                    "children": [1974]
                  }
                ]
              }
            },
            {
              "type": "reference",
              "name": "RefAttributes",
              "typeArguments": [
                {
                  "type": "reference",
                  "name": "Select",
                  "typeArguments": [
                    {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "string"
                        },
                        {
                          "type": "intrinsic",
                          "name": "number"
                        },
                        {
                          "type": "array",
                          "elementType": {
                            "type": "union",
                            "types": [
                              {
                                "type": "intrinsic",
                                "name": "string"
                              },
                              {
                                "type": "intrinsic",
                                "name": "number"
                              }
                            ]
                          }
                        },
                        {
                          "type": "reference",
                          "name": "LabeledValue"
                        },
                        {
                          "type": "array",
                          "elementType": {
                            "type": "reference",
                            "name": "LabeledValue"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    "defaultValue": " React.forwardRef(\n    (\n        { input, meta, ...rest }: SelectChoiceProps,\n        ref: React.RefObject<Select>\n    ): React.ReactElement => {\n        return (\n            <Select ref={ref} {...input} {...rest}>\n                {rest.choices &&\n                    Array.from(rest.choices, ([key, label]) => (\n                        <Select.Option key={key.toString()} value={key as any}>\n                            {label}\n                        </Select.Option>\n                    ))}\n            </Select>\n        );\n    }\n)"
  },
  {
    "id": 2065,
    "name": "SlugWidget",
    "kind": 32,
    "kindString": "Variable",
    "flags": {
      "isExported": true,
      "isConst": true
    },
    "comment": {
      "shortText": "See [Input](https://next.ant.design/components/input/) for props available"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/ui-antd/src/widgets/SlugWidget.tsx",
        "line": 8,
        "character": 16
      }
    ],
    "type": {
      "type": "reference",
      "name": "ForwardRefExoticComponent",
      "typeArguments": [
        {
          "type": "intersection",
          "types": [
            {
              "type": "reference",
              "name": "WidgetProps",
              "id": 1560,
              "typeArguments": [
                {
                  "type": "intrinsic",
                  "name": "string"
                },
                {
                  "type": "reference",
                  "name": "HTMLInputElement"
                }
              ]
            },
            {
              "type": "reference",
              "name": "RefAttributes",
              "typeArguments": [
                {
                  "type": "reference",
                  "name": "Input"
                }
              ]
            }
          ]
        }
      ]
    },
    "defaultValue": " React.forwardRef(\n    (\n        { input, ...rest }: WidgetProps<string, HTMLInputElement>,\n        ref: React.RefObject<Input>\n    ): React.ReactElement => {\n        return <Input ref={ref} {...input} {...rest} />;\n    }\n)"
  },
  {
    "id": 2067,
    "name": "TextWidget",
    "kind": 32,
    "kindString": "Variable",
    "flags": {
      "isExported": true,
      "isConst": true
    },
    "comment": {
      "shortText": "See [Input](https://next.ant.design/components/input/) for props available"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/ui-antd/src/widgets/TextWidget.tsx",
        "line": 9,
        "character": 16
      }
    ],
    "type": {
      "type": "reference",
      "name": "ForwardRefExoticComponent",
      "typeArguments": [
        {
          "type": "intersection",
          "types": [
            {
              "type": "reference",
              "name": "WidgetProps",
              "id": 1560,
              "typeArguments": [
                {
                  "type": "intrinsic",
                  "name": "string"
                },
                {
                  "type": "reference",
                  "name": "HTMLTextAreaElement"
                }
              ]
            },
            {
              "type": "reference",
              "name": "RefAttributes",
              "typeArguments": [
                {
                  "type": "reference",
                  "name": "TextArea"
                }
              ]
            }
          ]
        }
      ]
    },
    "defaultValue": " React.forwardRef(\n    (\n        { input, ...rest }: WidgetProps<string, HTMLTextAreaElement>,\n        ref: React.RefObject<TextArea>\n    ): React.ReactElement => {\n        return <Input.TextArea ref={ref} {...input} {...rest} />;\n    }\n)"
  },
  {
    "id": 2069,
    "name": "TimeWidget",
    "kind": 32,
    "kindString": "Variable",
    "flags": {
      "isExported": true,
      "isConst": true
    },
    "comment": {
      "shortText": "See [TimePicker](https://next.ant.design/components/time-picker/) for props available"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/ui-antd/src/widgets/TimeWidget.tsx",
        "line": 10,
        "character": 16
      }
    ],
    "type": {
      "type": "reference",
      "name": "ForwardRefExoticComponent",
      "typeArguments": [
        {
          "type": "intersection",
          "types": [
            {
              "type": "reference",
              "name": "WidgetProps",
              "id": 1560,
              "typeArguments": [
                {
                  "type": "intrinsic",
                  "name": "string"
                },
                {
                  "type": "reference",
                  "name": "HTMLInputElement"
                }
              ]
            },
            {
              "type": "reflection",
              "declaration": {
                "id": 2070,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "children": [
                  {
                    "id": 2071,
                    "name": "input",
                    "kind": 32,
                    "kindString": "Variable",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "js-packages/@prestojs/ui-antd/src/widgets/TimeWidget.tsx",
                        "line": 12,
                        "character": 75
                      }
                    ],
                    "type": {
                      "type": "reference",
                      "name": "TimePickerProps"
                    }
                  }
                ],
                "groups": [
                  {
                    "title": "Variables",
                    "kind": 32,
                    "children": [2071]
                  }
                ]
              }
            },
            {
              "type": "reference",
              "name": "RefAttributes",
              "typeArguments": [
                {
                  "type": "reference",
                  "name": "TimePicker"
                }
              ]
            }
          ]
        }
      ]
    },
    "defaultValue": " React.forwardRef(\n    (\n        { input, ...rest }: WidgetProps<string, HTMLInputElement> & { input: TimePickerProps },\n        ref: React.RefObject<TimePicker>\n    ): React.ReactElement => {\n        return <TimePicker ref={ref} {...input} {...rest} />;\n    }\n)"
  },
  {
    "id": 2073,
    "name": "URLWidget",
    "kind": 32,
    "kindString": "Variable",
    "flags": {
      "isExported": true,
      "isConst": true
    },
    "comment": {
      "shortText": "See [Input](https://next.ant.design/components/input/) for props available"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/ui-antd/src/widgets/URLWidget.tsx",
        "line": 8,
        "character": 15
      }
    ],
    "type": {
      "type": "reference",
      "name": "ForwardRefExoticComponent",
      "typeArguments": [
        {
          "type": "intersection",
          "types": [
            {
              "type": "reference",
              "name": "WidgetProps",
              "id": 1560,
              "typeArguments": [
                {
                  "type": "intrinsic",
                  "name": "string"
                },
                {
                  "type": "reference",
                  "name": "HTMLInputElement"
                }
              ]
            },
            {
              "type": "reference",
              "name": "RefAttributes",
              "typeArguments": [
                {
                  "type": "reference",
                  "name": "Input"
                }
              ]
            }
          ]
        }
      ]
    },
    "defaultValue": " React.forwardRef(\n    (\n        { input, ...rest }: WidgetProps<string, HTMLInputElement>,\n        ref: React.RefObject<Input>\n    ): React.ReactElement => {\n        return <Input ref={ref} {...input} {...rest} />;\n    }\n)"
  },
  {
    "id": 2075,
    "name": "UUIDWidget",
    "kind": 32,
    "kindString": "Variable",
    "flags": {
      "isExported": true,
      "isConst": true
    },
    "comment": {
      "shortText": "See [Input](https://next.ant.design/components/input/) for props available"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/ui-antd/src/widgets/UUIDWidget.tsx",
        "line": 8,
        "character": 16
      }
    ],
    "type": {
      "type": "reference",
      "name": "ForwardRefExoticComponent",
      "typeArguments": [
        {
          "type": "intersection",
          "types": [
            {
              "type": "reference",
              "name": "WidgetProps",
              "id": 1560,
              "typeArguments": [
                {
                  "type": "intrinsic",
                  "name": "string"
                },
                {
                  "type": "reference",
                  "name": "HTMLInputElement"
                }
              ]
            },
            {
              "type": "reference",
              "name": "RefAttributes",
              "typeArguments": [
                {
                  "type": "reference",
                  "name": "Input"
                }
              ]
            }
          ]
        }
      ]
    },
    "defaultValue": " React.forwardRef(\n    (\n        { input, ...rest }: WidgetProps<string, HTMLInputElement>,\n        ref: React.RefObject<Input>\n    ): React.ReactElement => {\n        return <Input ref={ref} {...input} {...rest} />;\n    }\n)"
  },
  {
    "id": 2078,
    "name": "choicesMapping",
    "kind": 32,
    "kindString": "Variable",
    "flags": {
      "isConst": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/ui-antd/src/getWidgetForField.ts",
        "line": 90,
        "character": 20
      }
    ],
    "type": {
      "type": "reference",
      "name": "Map",
      "typeArguments": [
        {
          "type": "reference",
          "name": "Class",
          "id": 152,
          "typeArguments": [
            {
              "type": "reference",
              "name": "Field",
              "id": 24,
              "typeArguments": [
                {
                  "type": "intrinsic",
                  "name": "any"
                }
              ]
            }
          ]
        },
        {
          "type": "union",
          "types": [
            {
              "type": "stringLiteral",
              "value": "input"
            },
            {
              "type": "stringLiteral",
              "value": "select"
            },
            {
              "type": "stringLiteral",
              "value": "textarea"
            },
            {
              "type": "reference",
              "name": "ComponentClass",
              "typeArguments": [
                {
                  "type": "union",
                  "types": [
                    {
                      "type": "reference",
                      "name": "WidgetProps",
                      "id": 1560,
                      "typeArguments": [
                        {
                          "type": "intrinsic",
                          "name": "any"
                        },
                        {
                          "type": "intrinsic",
                          "name": "any"
                        }
                      ]
                    },
                    {
                      "type": "reference",
                      "name": "RangedWidgetProps",
                      "id": 1566,
                      "typeArguments": [
                        {
                          "type": "intrinsic",
                          "name": "any"
                        },
                        {
                          "type": "intrinsic",
                          "name": "any"
                        },
                        {
                          "type": "intrinsic",
                          "name": "any"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "intrinsic",
                  "name": "any"
                }
              ]
            },
            {
              "type": "reference",
              "name": "FunctionComponent",
              "typeArguments": [
                {
                  "type": "union",
                  "types": [
                    {
                      "type": "reference",
                      "name": "WidgetProps",
                      "id": 1560,
                      "typeArguments": [
                        {
                          "type": "intrinsic",
                          "name": "any"
                        },
                        {
                          "type": "intrinsic",
                          "name": "any"
                        }
                      ]
                    },
                    {
                      "type": "reference",
                      "name": "RangedWidgetProps",
                      "id": 1566,
                      "typeArguments": [
                        {
                          "type": "intrinsic",
                          "name": "any"
                        },
                        {
                          "type": "intrinsic",
                          "name": "any"
                        },
                        {
                          "type": "intrinsic",
                          "name": "any"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    "defaultValue": " new Map<Class<Field<any>>, FieldWidgetType<any, any>>([\n    [CharField, CharChoicesWidget],\n    [IntegerField, IntegerChoicesWidget],\n])"
  },
  {
    "id": 2077,
    "name": "mapping",
    "kind": 32,
    "kindString": "Variable",
    "flags": {
      "isConst": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/ui-antd/src/getWidgetForField.ts",
        "line": 61,
        "character": 13
      }
    ],
    "type": {
      "type": "reference",
      "name": "Map",
      "typeArguments": [
        {
          "type": "reference",
          "name": "Class",
          "id": 152,
          "typeArguments": [
            {
              "type": "reference",
              "name": "Field",
              "id": 24,
              "typeArguments": [
                {
                  "type": "intrinsic",
                  "name": "any"
                }
              ]
            }
          ]
        },
        {
          "type": "union",
          "types": [
            {
              "type": "stringLiteral",
              "value": "input"
            },
            {
              "type": "stringLiteral",
              "value": "select"
            },
            {
              "type": "stringLiteral",
              "value": "textarea"
            },
            {
              "type": "reference",
              "name": "ComponentClass",
              "typeArguments": [
                {
                  "type": "union",
                  "types": [
                    {
                      "type": "reference",
                      "name": "WidgetProps",
                      "id": 1560,
                      "typeArguments": [
                        {
                          "type": "intrinsic",
                          "name": "any"
                        },
                        {
                          "type": "intrinsic",
                          "name": "any"
                        }
                      ]
                    },
                    {
                      "type": "reference",
                      "name": "RangedWidgetProps",
                      "id": 1566,
                      "typeArguments": [
                        {
                          "type": "intrinsic",
                          "name": "any"
                        },
                        {
                          "type": "intrinsic",
                          "name": "any"
                        },
                        {
                          "type": "intrinsic",
                          "name": "any"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "intrinsic",
                  "name": "any"
                }
              ]
            },
            {
              "type": "reference",
              "name": "FunctionComponent",
              "typeArguments": [
                {
                  "type": "union",
                  "types": [
                    {
                      "type": "reference",
                      "name": "WidgetProps",
                      "id": 1560,
                      "typeArguments": [
                        {
                          "type": "intrinsic",
                          "name": "any"
                        },
                        {
                          "type": "intrinsic",
                          "name": "any"
                        }
                      ]
                    },
                    {
                      "type": "reference",
                      "name": "RangedWidgetProps",
                      "id": 1566,
                      "typeArguments": [
                        {
                          "type": "intrinsic",
                          "name": "any"
                        },
                        {
                          "type": "intrinsic",
                          "name": "any"
                        },
                        {
                          "type": "intrinsic",
                          "name": "any"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    "defaultValue": " new Map<Class<Field<any>>, FieldWidgetType<any, any>>([\n    [BooleanField, BooleanWidget],\n    [CharField, CharWidget],\n    [CurrencyField, CurrencyWidget],\n    [DateField, DateWidget],\n    [DateRangeField, DateRangeWidget],\n    [DateTimeField, DateTimeWidget],\n    [DateTimeRangeField, DateTimeRangeWidget],\n    [DecimalField, DecimalWidget],\n    [DurationField, DurationWidget],\n    [EmailField, EmailWidget],\n    [FileField, FileWidget],\n    [FloatField, FloatWidget],\n    [FloatRangeField, FloatRangeWidget],\n    [ImageField, ImageWidget],\n    [IntegerField, IntegerWidget],\n    [IntegerRangeField, IntegerRangeWidget],\n    [IPAddressField, IPAddressWidget],\n    [JsonField, JsonWidget],\n    [NumberField, NumberWidget],\n    [NullableBooleanField, NullableBooleanWidget],\n    [SlugField, SlugWidget],\n    [TextField, TextWidget],\n    [TimeField, TimeWidget],\n    [URLField, URLWidget],\n    [UUIDField, UUIDWidget],\n])"
  },
  {
    "id": 1950,
    "name": "FormItemWrapper",
    "kind": 64,
    "kindString": "Function",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 1951,
        "name": "FormItemWrapper",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "parameters": [
          {
            "id": 1952,
            "name": "props",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "intrinsic",
              "name": "any"
            }
          }
        ],
        "type": {
          "type": "reference",
          "name": "ReactElement"
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/ui-antd/src/FormItemWrapper.tsx",
        "line": 4,
        "character": 39
      }
    ]
  },
  {
    "id": 2079,
    "name": "getWidgetForField",
    "kind": 64,
    "kindString": "Function",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 2080,
        "name": "getWidgetForField",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "typeParameter": [
          {
            "id": 2081,
            "name": "FieldValue",
            "kind": 131072,
            "kindString": "Type parameter",
            "flags": {}
          },
          {
            "id": 2082,
            "name": "T",
            "kind": 131072,
            "kindString": "Type parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "name": "HTMLElement"
            }
          }
        ],
        "parameters": [
          {
            "id": 2083,
            "name": "field",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "name": "Field",
              "id": 24,
              "typeArguments": [
                {
                  "type": "typeParameter",
                  "name": "FieldValue"
                }
              ]
            }
          }
        ],
        "type": {
          "type": "union",
          "types": [
            {
              "type": "reference",
              "name": "FieldWidgetType",
              "id": 1574,
              "typeArguments": [
                {
                  "type": "typeParameter",
                  "name": "FieldValue"
                },
                {
                  "type": "typeParameter",
                  "name": "T",
                  "constraint": {
                    "type": "reference",
                    "name": "HTMLElement"
                  }
                }
              ]
            },
            {
              "type": "tuple",
              "elements": [
                {
                  "type": "reference",
                  "name": "FieldWidgetType",
                  "id": 1574,
                  "typeArguments": [
                    {
                      "type": "typeParameter",
                      "name": "FieldValue"
                    },
                    {
                      "type": "typeParameter",
                      "name": "T",
                      "constraint": {
                        "type": "reference",
                        "name": "HTMLElement"
                      }
                    }
                  ]
                },
                {
                  "type": "intrinsic",
                  "name": "object"
                }
              ]
            },
            {
              "type": "intrinsic",
              "name": "null"
            }
          ]
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/ui-antd/src/getWidgetForField.ts",
        "line": 100,
        "character": 41
      }
    ]
  },
  {
    "id": 3,
    "name": "@prestojs/viewmodel",
    "kind": 1,
    "kindString": "Package",
    "flags": {
      "isExported": true
    },
    "originalName": "/Users/dave/Development/internal/xenopus/js-packages/@prestojs/viewmodel/src/fields/Field.ts",
    "comment": {
      "text": "<h1 id=\"core\">Core</h1>\n"
    },
    "groups": [
      {
        "title": "Classes",
        "kind": 128,
        "children": [
          423,
          467,
          562,
          609,
          717,
          764,
          808,
          515,
          855,
          900,
          24,
          79,
          945,
          989,
          1035,
          1219,
          1082,
          1126,
          1172,
          1264,
          379,
          101,
          669,
          190,
          184,
          1315,
          1360,
          1405,
          1449,
          1494,
          15,
          309,
          227
        ]
      },
      {
        "title": "Interfaces",
        "kind": 256,
        "children": [653, 152, 4]
      },
      {
        "title": "Type aliases",
        "kind": 4194304,
        "children": [292, 304, 511, 373, 270, 93, 1310, 298, 147, 377, 269, 372]
      },
      {
        "title": "Variables",
        "kind": 32,
        "children": [307, 287, 282]
      },
      {
        "title": "Functions",
        "kind": 64,
        "children": [75, 97, 73, 271, 275, 71]
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 1,
        "character": 0
      }
    ],
    "childIds": [
      423,
      467,
      562,
      609,
      717,
      764,
      808,
      515,
      855,
      900,
      24,
      79,
      945,
      989,
      1035,
      1219,
      1082,
      1126,
      1172,
      1264,
      379,
      101,
      669,
      190,
      184,
      1315,
      1360,
      1405,
      1449,
      1494,
      15,
      309,
      227,
      653,
      152,
      4,
      292,
      304,
      511,
      373,
      270,
      93,
      1310,
      298,
      147,
      377,
      269,
      372,
      307,
      287,
      282,
      75,
      97,
      73,
      271,
      275,
      71
    ]
  },
  {
    "id": 423,
    "name": "BooleanField",
    "kind": 128,
    "kindString": "Class",
    "flags": {
      "isExported": true
    },
    "comment": {
      "shortText": "Field for Boolean type values. Null count as False for this field.",
      "text": "Follows standard javascript Truthy and Falsy definition.\n\nSee also: NullableBooleanField.\n"
    },
    "groups": [
      {
        "title": "Constructors",
        "kind": 512,
        "children": [444]
      },
      {
        "title": "Properties",
        "kind": 1024,
        "children": [441, 438, 437, 436, 439, 435, 440]
      },
      {
        "title": "Accessors",
        "kind": 262144,
        "children": [456, 431, 427]
      },
      {
        "title": "Methods",
        "kind": 2048,
        "children": [464, 447, 460, 450, 424, 453, 458]
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/BooleanField.ts",
        "line": 10,
        "character": 33
      }
    ],
    "extendedTypes": [
      {
        "type": "reference",
        "name": "NullableBooleanField",
        "id": 379
      }
    ],
    "childIds": [
      444,
      441,
      438,
      437,
      436,
      439,
      435,
      440,
      456,
      431,
      427,
      464,
      447,
      460,
      450,
      424,
      453,
      458
    ]
  },
  {
    "id": 444,
    "name": "constructor",
    "kind": 512,
    "kindString": "Constructor",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 445,
        "name": "new BooleanField",
        "kind": 16384,
        "kindString": "Constructor signature",
        "flags": {},
        "parameters": [
          {
            "id": 446,
            "name": "values",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "name": "Props",
              "id": 4,
              "typeArguments": [
                {
                  "type": "intrinsic",
                  "name": "boolean"
                }
              ]
            },
            "defaultValue": " {}"
          }
        ],
        "type": {
          "type": "reference",
          "name": "BooleanField",
          "id": 423
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.__constructor",
          "id": 45
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 79,
        "character": 53
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.__constructor",
      "id": 45
    }
  },
  {
    "id": 441,
    "name": "_defaultValue",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isProtected": true,
      "isExported": true,
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 79,
        "character": 27
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "boolean"
        },
        {
          "type": "reflection",
          "declaration": {
            "id": 442,
            "name": "__type",
            "kind": 65536,
            "kindString": "Type literal",
            "flags": {},
            "signatures": [
              {
                "id": 443,
                "name": "__call",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "reference",
                  "name": "Promise",
                  "typeArguments": [
                    {
                      "type": "intrinsic",
                      "name": "boolean"
                    }
                  ]
                }
              }
            ],
            "sources": [
              {
                "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
                "line": 79,
                "character": 33
              }
            ]
          }
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field._defaultValue",
      "id": 42
    }
  },
  {
    "id": 438,
    "name": "choices",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true,
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 67,
        "character": 18
      }
    ],
    "type": {
      "type": "reference",
      "name": "Map",
      "typeArguments": [
        {
          "type": "intrinsic",
          "name": "boolean"
        },
        {
          "type": "intrinsic",
          "name": "string"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.choices",
      "id": 39
    }
  },
  {
    "id": 437,
    "name": "helpText",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true,
      "isOptional": true
    },
    "comment": {
      "shortText": "Help text that can be displayed with the form widget"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 61,
        "character": 19
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "undefined"
        },
        {
          "type": "intrinsic",
          "name": "string"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.helpText",
      "id": 38
    }
  },
  {
    "id": 436,
    "name": "label",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true,
      "isOptional": true
    },
    "comment": {
      "shortText": "Label that can be displayed as the form label for a widget",
      "text": "If not specified will be generated from `name`.\n"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 57,
        "character": 16
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "undefined"
        },
        {
          "type": "intrinsic",
          "name": "string"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.label",
      "id": 37
    }
  },
  {
    "id": 439,
    "name": "readOnly",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "comment": {
      "shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 72,
        "character": 19
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "boolean"
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.readOnly",
      "id": 40
    }
  },
  {
    "id": 435,
    "name": "required",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "comment": {
      "shortText": "Is this field required when saving a record?"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 51,
        "character": 19
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "boolean"
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.required",
      "id": 36
    }
  },
  {
    "id": 440,
    "name": "writeOnly",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "comment": {
      "shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 77,
        "character": 20
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "boolean"
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.writeOnly",
      "id": 41
    }
  },
  {
    "id": 456,
    "name": "defaultValue",
    "kind": 262144,
    "kindString": "Accessor",
    "flags": {
      "isExported": true
    },
    "comment": {
      "shortText": "Get the default value for this field. Note that this returns a promise that resolve to the default value\nas some default values may need to resolve data from a backend."
    },
    "getSignature": [
      {
        "id": 457,
        "name": "__get",
        "kind": 524288,
        "kindString": "Get signature",
        "flags": {},
        "comment": {
          "shortText": "Get the default value for this field. Note that this returns a promise that resolve to the default value\nas some default values may need to resolve data from a backend."
        },
        "type": {
          "type": "reference",
          "name": "Promise",
          "typeArguments": [
            {
              "type": "union",
              "types": [
                {
                  "type": "intrinsic",
                  "name": "boolean"
                },
                {
                  "type": "intrinsic",
                  "name": "null"
                },
                {
                  "type": "intrinsic",
                  "name": "undefined"
                }
              ]
            }
          ]
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.defaultValue",
          "id": 60
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 192,
        "character": 20
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.defaultValue",
      "id": 60
    }
  },
  {
    "id": 431,
    "name": "name",
    "kind": 262144,
    "kindString": "Accessor",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "getSignature": [
      {
        "id": 434,
        "name": "__get",
        "kind": 524288,
        "kindString": "Get signature",
        "flags": {},
        "type": {
          "type": "intrinsic",
          "name": "string"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.name",
          "id": 32
        }
      }
    ],
    "setSignature": [
      {
        "id": 432,
        "name": "__set",
        "kind": 1048576,
        "kindString": "Set signature",
        "flags": {},
        "parameters": [
          {
            "id": 433,
            "name": "name",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "void"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.name",
          "id": 32
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 41,
        "character": 19
      },
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 44,
        "character": 19
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.name",
      "id": 32
    }
  },
  {
    "id": 427,
    "name": "parent",
    "kind": 262144,
    "kindString": "Accessor",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "getSignature": [
      {
        "id": 430,
        "name": "__get",
        "kind": 524288,
        "kindString": "Get signature",
        "flags": {},
        "type": {
          "type": "reference",
          "name": "FieldBinder",
          "id": 79
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.parent",
          "id": 27
        }
      }
    ],
    "setSignature": [
      {
        "id": 428,
        "name": "__set",
        "kind": 1048576,
        "kindString": "Set signature",
        "flags": {},
        "parameters": [
          {
            "id": 429,
            "name": "viewModel",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "name": "FieldBinder",
              "id": 79
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "void"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.parent",
          "id": 27
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 30,
        "character": 21
      },
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 33,
        "character": 21
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.parent",
      "id": 27
    }
  },
  {
    "id": 464,
    "name": "clone",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 465,
        "name": "clone",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Returns a clone of the field that should be functionally equivalent"
        },
        "type": {
          "type": "reference",
          "name": "Field",
          "id": 24,
          "typeArguments": [
            {
              "type": "intrinsic",
              "name": "boolean"
            }
          ]
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.clone",
          "id": 68
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 216,
        "character": 16
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.clone",
      "id": 68
    }
  },
  {
    "id": 447,
    "name": "format",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 448,
        "name": "format",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
        },
        "parameters": [
          {
            "id": 449,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "\n"
            },
            "type": {
              "type": "intrinsic",
              "name": "boolean"
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "any"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.format",
          "id": 48
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 137,
        "character": 17
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.format",
      "id": 48
    }
  },
  {
    "id": 460,
    "name": "isEqual",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 461,
        "name": "isEqual",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Should two values be considered equal?",
          "text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
        },
        "parameters": [
          {
            "id": 462,
            "name": "value1",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "intrinsic",
              "name": "boolean"
            }
          },
          {
            "id": 463,
            "name": "value2",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "intrinsic",
              "name": "boolean"
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.isEqual",
          "id": 64
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 209,
        "character": 18
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.isEqual",
      "id": 64
    }
  },
  {
    "id": 450,
    "name": "normalize",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 451,
        "name": "normalize",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
          "text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
        },
        "parameters": [
          {
            "id": 452,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "\n"
            },
            "type": {
              "type": "intrinsic",
              "name": "any"
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.normalize",
          "id": 54
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 175,
        "character": 20
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.normalize",
      "id": 54
    }
  },
  {
    "id": 424,
    "name": "parse",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 425,
        "name": "parse",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "parameters": [
          {
            "id": 426,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "intrinsic",
              "name": "any"
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "overwrites": {
          "type": "reference",
          "name": "NullableBooleanField.parse",
          "id": 380
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/BooleanField.ts",
        "line": 11,
        "character": 9
      }
    ],
    "overwrites": {
      "type": "reference",
      "name": "NullableBooleanField.parse",
      "id": 380
    }
  },
  {
    "id": 453,
    "name": "toJS",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 454,
        "name": "toJS",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
        },
        "parameters": [
          {
            "id": 455,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "\n"
            },
            "type": {
              "type": "intrinsic",
              "name": "boolean"
            }
          }
        ],
        "type": {
          "type": "union",
          "types": [
            {
              "type": "intrinsic",
              "name": "string"
            },
            {
              "type": "intrinsic",
              "name": "number"
            },
            {
              "type": "intrinsic",
              "name": "null"
            },
            {
              "type": "reference",
              "name": "__type"
            }
          ]
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.toJS",
          "id": 57
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 184,
        "character": 8
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.toJS",
      "id": 57
    }
  },
  {
    "id": 458,
    "name": "toString",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 459,
        "name": "toString",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "type": {
          "type": "intrinsic",
          "name": "string"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.toString",
          "id": 62
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 199,
        "character": 12
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.toString",
      "id": 62
    }
  },
  {
    "id": 467,
    "name": "CharField",
    "kind": 128,
    "kindString": "Class",
    "flags": {
      "isExported": true
    },
    "comment": {
      "shortText": "Base class for string fields",
      "text": "Other char fields (EmailField, URLField...) will extend this.\n"
    },
    "groups": [
      {
        "title": "Constructors",
        "kind": 512,
        "children": [469]
      },
      {
        "title": "Properties",
        "kind": 1024,
        "children": [486, 483, 482, 481, 468, 484, 480, 485]
      },
      {
        "title": "Accessors",
        "kind": 262144,
        "children": [501, 476, 472]
      },
      {
        "title": "Methods",
        "kind": 2048,
        "children": [509, 489, 505, 495, 492, 498, 503]
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/CharField.ts",
        "line": 10,
        "character": 30
      }
    ],
    "extendedTypes": [
      {
        "type": "reference",
        "name": "Field",
        "id": 24,
        "typeArguments": [
          {
            "type": "intrinsic",
            "name": "string"
          }
        ]
      }
    ],
    "extendedBy": [
      {
        "type": "reference",
        "name": "DurationField",
        "id": 855
      },
      {
        "type": "reference",
        "name": "EmailField",
        "id": 900
      },
      {
        "type": "reference",
        "name": "IPAddressField",
        "id": 1219
      },
      {
        "type": "reference",
        "name": "JsonField",
        "id": 1264
      },
      {
        "type": "reference",
        "name": "SlugField",
        "id": 1315
      },
      {
        "type": "reference",
        "name": "TextField",
        "id": 1360
      },
      {
        "type": "reference",
        "name": "URLField",
        "id": 1449
      },
      {
        "type": "reference",
        "name": "UUIDField",
        "id": 1494
      }
    ],
    "childIds": [
      469,
      486,
      483,
      482,
      481,
      468,
      484,
      480,
      485,
      501,
      476,
      472,
      509,
      489,
      505,
      495,
      492,
      498,
      503
    ]
  },
  {
    "id": 469,
    "name": "constructor",
    "kind": 512,
    "kindString": "Constructor",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 470,
        "name": "new CharField",
        "kind": 16384,
        "kindString": "Constructor signature",
        "flags": {},
        "parameters": [
          {
            "id": 471,
            "name": "values",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "name": "CharFieldProps",
              "id": 511
            },
            "defaultValue": " {}"
          }
        ],
        "type": {
          "type": "reference",
          "name": "CharField",
          "id": 467
        },
        "overwrites": {
          "type": "reference",
          "name": "Field.__constructor",
          "id": 45
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/CharField.ts",
        "line": 11,
        "character": 30
      }
    ],
    "overwrites": {
      "type": "reference",
      "name": "Field.__constructor",
      "id": 45
    }
  },
  {
    "id": 486,
    "name": "_defaultValue",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isProtected": true,
      "isExported": true,
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 79,
        "character": 27
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "string"
        },
        {
          "type": "reflection",
          "declaration": {
            "id": 487,
            "name": "__type",
            "kind": 65536,
            "kindString": "Type literal",
            "flags": {},
            "signatures": [
              {
                "id": 488,
                "name": "__call",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "reference",
                  "name": "Promise",
                  "typeArguments": [
                    {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  ]
                }
              }
            ],
            "sources": [
              {
                "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
                "line": 79,
                "character": 33
              }
            ]
          }
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field._defaultValue",
      "id": 42
    }
  },
  {
    "id": 483,
    "name": "choices",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true,
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 67,
        "character": 18
      }
    ],
    "type": {
      "type": "reference",
      "name": "Map",
      "typeArguments": [
        {
          "type": "intrinsic",
          "name": "string"
        },
        {
          "type": "intrinsic",
          "name": "string"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.choices",
      "id": 39
    }
  },
  {
    "id": 482,
    "name": "helpText",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true,
      "isOptional": true
    },
    "comment": {
      "shortText": "Help text that can be displayed with the form widget"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 61,
        "character": 19
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "undefined"
        },
        {
          "type": "intrinsic",
          "name": "string"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.helpText",
      "id": 38
    }
  },
  {
    "id": 481,
    "name": "label",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true,
      "isOptional": true
    },
    "comment": {
      "shortText": "Label that can be displayed as the form label for a widget",
      "text": "If not specified will be generated from `name`.\n"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 57,
        "character": 16
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "undefined"
        },
        {
          "type": "intrinsic",
          "name": "string"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.label",
      "id": 37
    }
  },
  {
    "id": 468,
    "name": "maxLength",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true,
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/CharField.ts",
        "line": 11,
        "character": 20
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "undefined"
        },
        {
          "type": "intrinsic",
          "name": "number"
        }
      ]
    }
  },
  {
    "id": 484,
    "name": "readOnly",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "comment": {
      "shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 72,
        "character": 19
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "boolean"
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.readOnly",
      "id": 40
    }
  },
  {
    "id": 480,
    "name": "required",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "comment": {
      "shortText": "Is this field required when saving a record?"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 51,
        "character": 19
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "boolean"
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.required",
      "id": 36
    }
  },
  {
    "id": 485,
    "name": "writeOnly",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "comment": {
      "shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 77,
        "character": 20
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "boolean"
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.writeOnly",
      "id": 41
    }
  },
  {
    "id": 501,
    "name": "defaultValue",
    "kind": 262144,
    "kindString": "Accessor",
    "flags": {
      "isExported": true
    },
    "comment": {
      "shortText": "Get the default value for this field. Note that this returns a promise that resolve to the default value\nas some default values may need to resolve data from a backend."
    },
    "getSignature": [
      {
        "id": 502,
        "name": "__get",
        "kind": 524288,
        "kindString": "Get signature",
        "flags": {},
        "comment": {
          "shortText": "Get the default value for this field. Note that this returns a promise that resolve to the default value\nas some default values may need to resolve data from a backend."
        },
        "type": {
          "type": "reference",
          "name": "Promise",
          "typeArguments": [
            {
              "type": "union",
              "types": [
                {
                  "type": "intrinsic",
                  "name": "string"
                },
                {
                  "type": "intrinsic",
                  "name": "null"
                },
                {
                  "type": "intrinsic",
                  "name": "undefined"
                }
              ]
            }
          ]
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.defaultValue",
          "id": 60
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 192,
        "character": 20
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.defaultValue",
      "id": 60
    }
  },
  {
    "id": 476,
    "name": "name",
    "kind": 262144,
    "kindString": "Accessor",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "getSignature": [
      {
        "id": 479,
        "name": "__get",
        "kind": 524288,
        "kindString": "Get signature",
        "flags": {},
        "type": {
          "type": "intrinsic",
          "name": "string"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.name",
          "id": 32
        }
      }
    ],
    "setSignature": [
      {
        "id": 477,
        "name": "__set",
        "kind": 1048576,
        "kindString": "Set signature",
        "flags": {},
        "parameters": [
          {
            "id": 478,
            "name": "name",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "void"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.name",
          "id": 32
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 41,
        "character": 19
      },
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 44,
        "character": 19
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.name",
      "id": 32
    }
  },
  {
    "id": 472,
    "name": "parent",
    "kind": 262144,
    "kindString": "Accessor",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "getSignature": [
      {
        "id": 475,
        "name": "__get",
        "kind": 524288,
        "kindString": "Get signature",
        "flags": {},
        "type": {
          "type": "reference",
          "name": "FieldBinder",
          "id": 79
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.parent",
          "id": 27
        }
      }
    ],
    "setSignature": [
      {
        "id": 473,
        "name": "__set",
        "kind": 1048576,
        "kindString": "Set signature",
        "flags": {},
        "parameters": [
          {
            "id": 474,
            "name": "viewModel",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "name": "FieldBinder",
              "id": 79
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "void"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.parent",
          "id": 27
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 30,
        "character": 21
      },
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 33,
        "character": 21
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.parent",
      "id": 27
    }
  },
  {
    "id": 509,
    "name": "clone",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 510,
        "name": "clone",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Returns a clone of the field that should be functionally equivalent"
        },
        "type": {
          "type": "reference",
          "name": "Field",
          "id": 24,
          "typeArguments": [
            {
              "type": "intrinsic",
              "name": "string"
            }
          ]
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.clone",
          "id": 68
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 216,
        "character": 16
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.clone",
      "id": 68
    }
  },
  {
    "id": 489,
    "name": "format",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 490,
        "name": "format",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
        },
        "parameters": [
          {
            "id": 491,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "\n"
            },
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "any"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.format",
          "id": 48
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 137,
        "character": 17
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.format",
      "id": 48
    }
  },
  {
    "id": 505,
    "name": "isEqual",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 506,
        "name": "isEqual",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Should two values be considered equal?",
          "text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
        },
        "parameters": [
          {
            "id": 507,
            "name": "value1",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          },
          {
            "id": 508,
            "name": "value2",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.isEqual",
          "id": 64
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 209,
        "character": 18
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.isEqual",
      "id": 64
    }
  },
  {
    "id": 495,
    "name": "normalize",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 496,
        "name": "normalize",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
          "text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
        },
        "parameters": [
          {
            "id": 497,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "\n"
            },
            "type": {
              "type": "intrinsic",
              "name": "any"
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "string"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.normalize",
          "id": 54
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 175,
        "character": 20
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.normalize",
      "id": 54
    }
  },
  {
    "id": 492,
    "name": "parse",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 493,
        "name": "parse",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
        },
        "parameters": [
          {
            "id": 494,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "\n"
            },
            "type": {
              "type": "intrinsic",
              "name": "any"
            }
          }
        ],
        "type": {
          "type": "union",
          "types": [
            {
              "type": "intrinsic",
              "name": "string"
            },
            {
              "type": "intrinsic",
              "name": "null"
            }
          ]
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.parse",
          "id": 51
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 146,
        "character": 16
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.parse",
      "id": 51
    }
  },
  {
    "id": 498,
    "name": "toJS",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 499,
        "name": "toJS",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
        },
        "parameters": [
          {
            "id": 500,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "\n"
            },
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          }
        ],
        "type": {
          "type": "union",
          "types": [
            {
              "type": "intrinsic",
              "name": "string"
            },
            {
              "type": "intrinsic",
              "name": "number"
            },
            {
              "type": "intrinsic",
              "name": "null"
            },
            {
              "type": "reference",
              "name": "__type"
            }
          ]
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.toJS",
          "id": 57
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 184,
        "character": 8
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.toJS",
      "id": 57
    }
  },
  {
    "id": 503,
    "name": "toString",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 504,
        "name": "toString",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "type": {
          "type": "intrinsic",
          "name": "string"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.toString",
          "id": 62
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 199,
        "character": 12
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.toString",
      "id": 62
    }
  },
  {
    "id": 562,
    "name": "CurrencyField",
    "kind": 128,
    "kindString": "Class",
    "flags": {
      "isExported": true
    },
    "comment": {
      "shortText": "Currency Field to store currency values.",
      "text": "Extends DecimalField for precision, TODO - should store additional info on currency types (eg, USD, JPY).\n"
    },
    "groups": [
      {
        "title": "Constructors",
        "kind": 512,
        "children": [564]
      },
      {
        "title": "Properties",
        "kind": 1024,
        "children": [586, 583, 563, 582, 581, 571, 570, 584, 580, 585]
      },
      {
        "title": "Accessors",
        "kind": 262144,
        "children": [598, 576, 572]
      },
      {
        "title": "Methods",
        "kind": 2048,
        "children": [606, 589, 602, 592, 567, 595, 600]
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/CurrencyField.ts",
        "line": 8,
        "character": 34
      }
    ],
    "extendedTypes": [
      {
        "type": "reference",
        "name": "DecimalField",
        "id": 515
      }
    ],
    "childIds": [
      564,
      586,
      583,
      563,
      582,
      581,
      571,
      570,
      584,
      580,
      585,
      598,
      576,
      572,
      606,
      589,
      602,
      592,
      567,
      595,
      600
    ]
  },
  {
    "id": 564,
    "name": "constructor",
    "kind": 512,
    "kindString": "Constructor",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 565,
        "name": "new CurrencyField",
        "kind": 16384,
        "kindString": "Constructor signature",
        "flags": {},
        "parameters": [
          {
            "id": 566,
            "name": "values",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "intrinsic",
              "name": "any"
            }
          }
        ],
        "type": {
          "type": "reference",
          "name": "CurrencyField",
          "id": 562
        },
        "overwrites": {
          "type": "reference",
          "name": "NumberField.__constructor",
          "id": 105
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "DecimalField.__constructor",
          "id": 517
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/DecimalField.ts",
        "line": 13,
        "character": 34
      }
    ],
    "overwrites": {
      "type": "reference",
      "name": "NumberField.__constructor",
      "id": 105
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "DecimalField.__constructor",
      "id": 517
    }
  },
  {
    "id": 586,
    "name": "_defaultValue",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isProtected": true,
      "isExported": true,
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 79,
        "character": 27
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "union",
          "types": [
            {
              "type": "intrinsic",
              "name": "string"
            },
            {
              "type": "intrinsic",
              "name": "number"
            }
          ]
        },
        {
          "type": "reflection",
          "declaration": {
            "id": 587,
            "name": "__type",
            "kind": 65536,
            "kindString": "Type literal",
            "flags": {},
            "signatures": [
              {
                "id": 588,
                "name": "__call",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "reference",
                  "name": "Promise",
                  "typeArguments": [
                    {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "string"
                        },
                        {
                          "type": "intrinsic",
                          "name": "number"
                        }
                      ]
                    }
                  ]
                }
              }
            ],
            "sources": [
              {
                "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
                "line": 79,
                "character": 33
              }
            ]
          }
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field._defaultValue",
      "id": 42
    }
  },
  {
    "id": 583,
    "name": "choices",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true,
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 67,
        "character": 18
      }
    ],
    "type": {
      "type": "reference",
      "name": "Map",
      "typeArguments": [
        {
          "type": "union",
          "types": [
            {
              "type": "intrinsic",
              "name": "string"
            },
            {
              "type": "intrinsic",
              "name": "number"
            }
          ]
        },
        {
          "type": "intrinsic",
          "name": "string"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.choices",
      "id": 39
    }
  },
  {
    "id": 563,
    "name": "decimalPlaces",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true,
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/DecimalField.ts",
        "line": 13,
        "character": 24
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "undefined"
        },
        {
          "type": "intrinsic",
          "name": "number"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "DecimalField.decimalPlaces",
      "id": 516
    }
  },
  {
    "id": 582,
    "name": "helpText",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true,
      "isOptional": true
    },
    "comment": {
      "shortText": "Help text that can be displayed with the form widget"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 61,
        "character": 19
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "undefined"
        },
        {
          "type": "intrinsic",
          "name": "string"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.helpText",
      "id": 38
    }
  },
  {
    "id": 581,
    "name": "label",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true,
      "isOptional": true
    },
    "comment": {
      "shortText": "Label that can be displayed as the form label for a widget",
      "text": "If not specified will be generated from `name`.\n"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 57,
        "character": 16
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "undefined"
        },
        {
          "type": "intrinsic",
          "name": "string"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.label",
      "id": 37
    }
  },
  {
    "id": 571,
    "name": "maxValue",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true,
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/NumberField.ts",
        "line": 16,
        "character": 19
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "undefined"
        },
        {
          "type": "intrinsic",
          "name": "number"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "NumberField.maxValue",
      "id": 104
    }
  },
  {
    "id": 570,
    "name": "minValue",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true,
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/NumberField.ts",
        "line": 15,
        "character": 19
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "undefined"
        },
        {
          "type": "intrinsic",
          "name": "number"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "NumberField.minValue",
      "id": 103
    }
  },
  {
    "id": 584,
    "name": "readOnly",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "comment": {
      "shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 72,
        "character": 19
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "boolean"
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.readOnly",
      "id": 40
    }
  },
  {
    "id": 580,
    "name": "required",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "comment": {
      "shortText": "Is this field required when saving a record?"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 51,
        "character": 19
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "boolean"
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.required",
      "id": 36
    }
  },
  {
    "id": 585,
    "name": "writeOnly",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "comment": {
      "shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 77,
        "character": 20
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "boolean"
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.writeOnly",
      "id": 41
    }
  },
  {
    "id": 598,
    "name": "defaultValue",
    "kind": 262144,
    "kindString": "Accessor",
    "flags": {
      "isExported": true
    },
    "comment": {
      "shortText": "Get the default value for this field. Note that this returns a promise that resolve to the default value\nas some default values may need to resolve data from a backend."
    },
    "getSignature": [
      {
        "id": 599,
        "name": "__get",
        "kind": 524288,
        "kindString": "Get signature",
        "flags": {},
        "comment": {
          "shortText": "Get the default value for this field. Note that this returns a promise that resolve to the default value\nas some default values may need to resolve data from a backend."
        },
        "type": {
          "type": "reference",
          "name": "Promise",
          "typeArguments": [
            {
              "type": "union",
              "types": [
                {
                  "type": "union",
                  "types": [
                    {
                      "type": "intrinsic",
                      "name": "string"
                    },
                    {
                      "type": "intrinsic",
                      "name": "number"
                    }
                  ]
                },
                {
                  "type": "intrinsic",
                  "name": "null"
                },
                {
                  "type": "intrinsic",
                  "name": "undefined"
                }
              ]
            }
          ]
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.defaultValue",
          "id": 60
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 192,
        "character": 20
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.defaultValue",
      "id": 60
    }
  },
  {
    "id": 576,
    "name": "name",
    "kind": 262144,
    "kindString": "Accessor",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "getSignature": [
      {
        "id": 579,
        "name": "__get",
        "kind": 524288,
        "kindString": "Get signature",
        "flags": {},
        "type": {
          "type": "intrinsic",
          "name": "string"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.name",
          "id": 32
        }
      }
    ],
    "setSignature": [
      {
        "id": 577,
        "name": "__set",
        "kind": 1048576,
        "kindString": "Set signature",
        "flags": {},
        "parameters": [
          {
            "id": 578,
            "name": "name",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "void"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.name",
          "id": 32
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 41,
        "character": 19
      },
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 44,
        "character": 19
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.name",
      "id": 32
    }
  },
  {
    "id": 572,
    "name": "parent",
    "kind": 262144,
    "kindString": "Accessor",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "getSignature": [
      {
        "id": 575,
        "name": "__get",
        "kind": 524288,
        "kindString": "Get signature",
        "flags": {},
        "type": {
          "type": "reference",
          "name": "FieldBinder",
          "id": 79
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.parent",
          "id": 27
        }
      }
    ],
    "setSignature": [
      {
        "id": 573,
        "name": "__set",
        "kind": 1048576,
        "kindString": "Set signature",
        "flags": {},
        "parameters": [
          {
            "id": 574,
            "name": "viewModel",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "name": "FieldBinder",
              "id": 79
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "void"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.parent",
          "id": 27
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 30,
        "character": 21
      },
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 33,
        "character": 21
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.parent",
      "id": 27
    }
  },
  {
    "id": 606,
    "name": "clone",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 607,
        "name": "clone",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Returns a clone of the field that should be functionally equivalent"
        },
        "type": {
          "type": "reference",
          "name": "Field",
          "id": 24,
          "typeArguments": [
            {
              "type": "union",
              "types": [
                {
                  "type": "intrinsic",
                  "name": "string"
                },
                {
                  "type": "intrinsic",
                  "name": "number"
                }
              ]
            }
          ]
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.clone",
          "id": 68
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 216,
        "character": 16
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.clone",
      "id": 68
    }
  },
  {
    "id": 589,
    "name": "format",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 590,
        "name": "format",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
        },
        "parameters": [
          {
            "id": 591,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "\n"
            },
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "intrinsic",
                  "name": "string"
                },
                {
                  "type": "intrinsic",
                  "name": "number"
                }
              ]
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "any"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.format",
          "id": 48
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 137,
        "character": 17
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.format",
      "id": 48
    }
  },
  {
    "id": 602,
    "name": "isEqual",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 603,
        "name": "isEqual",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Should two values be considered equal?",
          "text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
        },
        "parameters": [
          {
            "id": 604,
            "name": "value1",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "intrinsic",
                  "name": "string"
                },
                {
                  "type": "intrinsic",
                  "name": "number"
                }
              ]
            }
          },
          {
            "id": 605,
            "name": "value2",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "intrinsic",
                  "name": "string"
                },
                {
                  "type": "intrinsic",
                  "name": "number"
                }
              ]
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.isEqual",
          "id": 64
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 209,
        "character": 18
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.isEqual",
      "id": 64
    }
  },
  {
    "id": 592,
    "name": "normalize",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 593,
        "name": "normalize",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
          "text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
        },
        "parameters": [
          {
            "id": 594,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "\n"
            },
            "type": {
              "type": "intrinsic",
              "name": "any"
            }
          }
        ],
        "type": {
          "type": "union",
          "types": [
            {
              "type": "intrinsic",
              "name": "string"
            },
            {
              "type": "intrinsic",
              "name": "number"
            }
          ]
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.normalize",
          "id": 54
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 175,
        "character": 20
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.normalize",
      "id": 54
    }
  },
  {
    "id": 567,
    "name": "parse",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 568,
        "name": "parse",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "parameters": [
          {
            "id": 569,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "intrinsic",
              "name": "any"
            }
          }
        ],
        "type": {
          "type": "union",
          "types": [
            {
              "type": "intrinsic",
              "name": "string"
            },
            {
              "type": "intrinsic",
              "name": "null"
            }
          ]
        },
        "overwrites": {
          "type": "reference",
          "name": "Field.parse",
          "id": 51
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "DecimalField.parse",
          "id": 520
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/DecimalField.ts",
        "line": 30,
        "character": 9
      }
    ],
    "overwrites": {
      "type": "reference",
      "name": "Field.parse",
      "id": 51
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "DecimalField.parse",
      "id": 520
    }
  },
  {
    "id": 595,
    "name": "toJS",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 596,
        "name": "toJS",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
        },
        "parameters": [
          {
            "id": 597,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "\n"
            },
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "intrinsic",
                  "name": "string"
                },
                {
                  "type": "intrinsic",
                  "name": "number"
                }
              ]
            }
          }
        ],
        "type": {
          "type": "union",
          "types": [
            {
              "type": "intrinsic",
              "name": "string"
            },
            {
              "type": "intrinsic",
              "name": "number"
            },
            {
              "type": "intrinsic",
              "name": "null"
            },
            {
              "type": "reference",
              "name": "__type"
            }
          ]
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.toJS",
          "id": 57
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 184,
        "character": 8
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.toJS",
      "id": 57
    }
  },
  {
    "id": 600,
    "name": "toString",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 601,
        "name": "toString",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "type": {
          "type": "intrinsic",
          "name": "string"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.toString",
          "id": 62
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 199,
        "character": 12
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.toString",
      "id": 62
    }
  },
  {
    "id": 609,
    "name": "DateField",
    "kind": 128,
    "kindString": "Class",
    "flags": {
      "isExported": true
    },
    "groups": [
      {
        "title": "Constructors",
        "kind": 512,
        "children": [630]
      },
      {
        "title": "Properties",
        "kind": 1024,
        "children": [627, 624, 623, 622, 625, 621, 626]
      },
      {
        "title": "Accessors",
        "kind": 262144,
        "children": [642, 617, 613]
      },
      {
        "title": "Methods",
        "kind": 2048,
        "children": [650, 633, 646, 636, 610, 639, 644]
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/DateField.ts",
        "line": 14,
        "character": 30
      }
    ],
    "extendedTypes": [
      {
        "type": "reference",
        "name": "Field",
        "id": 24,
        "typeArguments": [
          {
            "type": "reference",
            "name": "Date"
          }
        ]
      }
    ],
    "childIds": [
      630,
      627,
      624,
      623,
      622,
      625,
      621,
      626,
      642,
      617,
      613,
      650,
      633,
      646,
      636,
      610,
      639,
      644
    ]
  },
  {
    "id": 630,
    "name": "constructor",
    "kind": 512,
    "kindString": "Constructor",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 631,
        "name": "new DateField",
        "kind": 16384,
        "kindString": "Constructor signature",
        "flags": {},
        "parameters": [
          {
            "id": 632,
            "name": "values",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "name": "Props",
              "id": 4,
              "typeArguments": [
                {
                  "type": "reference",
                  "name": "Date"
                }
              ]
            },
            "defaultValue": " {}"
          }
        ],
        "type": {
          "type": "reference",
          "name": "DateField",
          "id": 609
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.__constructor",
          "id": 45
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 79,
        "character": 53
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.__constructor",
      "id": 45
    }
  },
  {
    "id": 627,
    "name": "_defaultValue",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isProtected": true,
      "isExported": true,
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 79,
        "character": 27
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "reference",
          "name": "Date"
        },
        {
          "type": "reflection",
          "declaration": {
            "id": 628,
            "name": "__type",
            "kind": 65536,
            "kindString": "Type literal",
            "flags": {},
            "signatures": [
              {
                "id": 629,
                "name": "__call",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "reference",
                  "name": "Promise",
                  "typeArguments": [
                    {
                      "type": "reference",
                      "name": "Date"
                    }
                  ]
                }
              }
            ],
            "sources": [
              {
                "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
                "line": 79,
                "character": 33
              }
            ]
          }
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field._defaultValue",
      "id": 42
    }
  },
  {
    "id": 624,
    "name": "choices",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true,
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 67,
        "character": 18
      }
    ],
    "type": {
      "type": "reference",
      "name": "Map",
      "typeArguments": [
        {
          "type": "reference",
          "name": "Date"
        },
        {
          "type": "intrinsic",
          "name": "string"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.choices",
      "id": 39
    }
  },
  {
    "id": 623,
    "name": "helpText",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true,
      "isOptional": true
    },
    "comment": {
      "shortText": "Help text that can be displayed with the form widget"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 61,
        "character": 19
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "undefined"
        },
        {
          "type": "intrinsic",
          "name": "string"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.helpText",
      "id": 38
    }
  },
  {
    "id": 622,
    "name": "label",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true,
      "isOptional": true
    },
    "comment": {
      "shortText": "Label that can be displayed as the form label for a widget",
      "text": "If not specified will be generated from `name`.\n"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 57,
        "character": 16
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "undefined"
        },
        {
          "type": "intrinsic",
          "name": "string"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.label",
      "id": 37
    }
  },
  {
    "id": 625,
    "name": "readOnly",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "comment": {
      "shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 72,
        "character": 19
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "boolean"
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.readOnly",
      "id": 40
    }
  },
  {
    "id": 621,
    "name": "required",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "comment": {
      "shortText": "Is this field required when saving a record?"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 51,
        "character": 19
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "boolean"
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.required",
      "id": 36
    }
  },
  {
    "id": 626,
    "name": "writeOnly",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "comment": {
      "shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 77,
        "character": 20
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "boolean"
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.writeOnly",
      "id": 41
    }
  },
  {
    "id": 642,
    "name": "defaultValue",
    "kind": 262144,
    "kindString": "Accessor",
    "flags": {
      "isExported": true
    },
    "comment": {
      "shortText": "Get the default value for this field. Note that this returns a promise that resolve to the default value\nas some default values may need to resolve data from a backend."
    },
    "getSignature": [
      {
        "id": 643,
        "name": "__get",
        "kind": 524288,
        "kindString": "Get signature",
        "flags": {},
        "comment": {
          "shortText": "Get the default value for this field. Note that this returns a promise that resolve to the default value\nas some default values may need to resolve data from a backend."
        },
        "type": {
          "type": "reference",
          "name": "Promise",
          "typeArguments": [
            {
              "type": "union",
              "types": [
                {
                  "type": "reference",
                  "name": "Date"
                },
                {
                  "type": "intrinsic",
                  "name": "null"
                },
                {
                  "type": "intrinsic",
                  "name": "undefined"
                }
              ]
            }
          ]
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.defaultValue",
          "id": 60
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 192,
        "character": 20
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.defaultValue",
      "id": 60
    }
  },
  {
    "id": 617,
    "name": "name",
    "kind": 262144,
    "kindString": "Accessor",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "getSignature": [
      {
        "id": 620,
        "name": "__get",
        "kind": 524288,
        "kindString": "Get signature",
        "flags": {},
        "type": {
          "type": "intrinsic",
          "name": "string"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.name",
          "id": 32
        }
      }
    ],
    "setSignature": [
      {
        "id": 618,
        "name": "__set",
        "kind": 1048576,
        "kindString": "Set signature",
        "flags": {},
        "parameters": [
          {
            "id": 619,
            "name": "name",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "void"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.name",
          "id": 32
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 41,
        "character": 19
      },
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 44,
        "character": 19
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.name",
      "id": 32
    }
  },
  {
    "id": 613,
    "name": "parent",
    "kind": 262144,
    "kindString": "Accessor",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "getSignature": [
      {
        "id": 616,
        "name": "__get",
        "kind": 524288,
        "kindString": "Get signature",
        "flags": {},
        "type": {
          "type": "reference",
          "name": "FieldBinder",
          "id": 79
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.parent",
          "id": 27
        }
      }
    ],
    "setSignature": [
      {
        "id": 614,
        "name": "__set",
        "kind": 1048576,
        "kindString": "Set signature",
        "flags": {},
        "parameters": [
          {
            "id": 615,
            "name": "viewModel",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "name": "FieldBinder",
              "id": 79
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "void"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.parent",
          "id": 27
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 30,
        "character": 21
      },
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 33,
        "character": 21
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.parent",
      "id": 27
    }
  },
  {
    "id": 650,
    "name": "clone",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 651,
        "name": "clone",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Returns a clone of the field that should be functionally equivalent"
        },
        "type": {
          "type": "reference",
          "name": "Field",
          "id": 24,
          "typeArguments": [
            {
              "type": "reference",
              "name": "Date"
            }
          ]
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.clone",
          "id": 68
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 216,
        "character": 16
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.clone",
      "id": 68
    }
  },
  {
    "id": 633,
    "name": "format",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 634,
        "name": "format",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
        },
        "parameters": [
          {
            "id": 635,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "\n"
            },
            "type": {
              "type": "reference",
              "name": "Date"
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "any"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.format",
          "id": 48
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 137,
        "character": 17
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.format",
      "id": 48
    }
  },
  {
    "id": 646,
    "name": "isEqual",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 647,
        "name": "isEqual",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Should two values be considered equal?",
          "text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
        },
        "parameters": [
          {
            "id": 648,
            "name": "value1",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "name": "Date"
            }
          },
          {
            "id": 649,
            "name": "value2",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "name": "Date"
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.isEqual",
          "id": 64
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 209,
        "character": 18
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.isEqual",
      "id": 64
    }
  },
  {
    "id": 636,
    "name": "normalize",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 637,
        "name": "normalize",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
          "text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
        },
        "parameters": [
          {
            "id": 638,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "\n"
            },
            "type": {
              "type": "intrinsic",
              "name": "any"
            }
          }
        ],
        "type": {
          "type": "reference",
          "name": "Date"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.normalize",
          "id": 54
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 175,
        "character": 20
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.normalize",
      "id": 54
    }
  },
  {
    "id": 610,
    "name": "parse",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 611,
        "name": "parse",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "parameters": [
          {
            "id": 612,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "intrinsic",
              "name": "any"
            }
          }
        ],
        "type": {
          "type": "union",
          "types": [
            {
              "type": "reference",
              "name": "Date"
            },
            {
              "type": "intrinsic",
              "name": "null"
            }
          ]
        },
        "overwrites": {
          "type": "reference",
          "name": "Field.parse",
          "id": 51
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/DateField.ts",
        "line": 15,
        "character": 9
      }
    ],
    "overwrites": {
      "type": "reference",
      "name": "Field.parse",
      "id": 51
    }
  },
  {
    "id": 639,
    "name": "toJS",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 640,
        "name": "toJS",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
        },
        "parameters": [
          {
            "id": 641,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "\n"
            },
            "type": {
              "type": "reference",
              "name": "Date"
            }
          }
        ],
        "type": {
          "type": "union",
          "types": [
            {
              "type": "intrinsic",
              "name": "string"
            },
            {
              "type": "intrinsic",
              "name": "number"
            },
            {
              "type": "intrinsic",
              "name": "null"
            },
            {
              "type": "reference",
              "name": "__type"
            }
          ]
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.toJS",
          "id": 57
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 184,
        "character": 8
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.toJS",
      "id": 57
    }
  },
  {
    "id": 644,
    "name": "toString",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 645,
        "name": "toString",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "type": {
          "type": "intrinsic",
          "name": "string"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.toString",
          "id": 62
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 199,
        "character": 12
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.toString",
      "id": 62
    }
  },
  {
    "id": 717,
    "name": "DateRangeField",
    "kind": 128,
    "kindString": "Class",
    "flags": {
      "isExported": true
    },
    "groups": [
      {
        "title": "Constructors",
        "kind": 512,
        "children": [721]
      },
      {
        "title": "Properties",
        "kind": 1024,
        "children": [738, 735, 734, 733, 718, 736, 732, 720, 719, 737]
      },
      {
        "title": "Accessors",
        "kind": 262144,
        "children": [753, 728, 724]
      },
      {
        "title": "Methods",
        "kind": 2048,
        "children": [761, 741, 757, 747, 744, 750, 755]
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/DateRangeField.ts",
        "line": 3,
        "character": 35
      }
    ],
    "extendedTypes": [
      {
        "type": "reference",
        "name": "RangeField",
        "id": 669,
        "typeArguments": [
          {
            "type": "reference",
            "name": "Date"
          }
        ]
      }
    ],
    "childIds": [
      721,
      738,
      735,
      734,
      733,
      718,
      736,
      732,
      720,
      719,
      737,
      753,
      728,
      724,
      761,
      741,
      757,
      747,
      744,
      750,
      755
    ]
  },
  {
    "id": 721,
    "name": "constructor",
    "kind": 512,
    "kindString": "Constructor",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 722,
        "name": "new DateRangeField",
        "kind": 16384,
        "kindString": "Constructor signature",
        "flags": {},
        "parameters": [
          {
            "id": 723,
            "name": "values",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "name": "Boundary",
              "id": 653,
              "typeArguments": [
                {
                  "type": "reference",
                  "name": "Date"
                }
              ]
            }
          }
        ],
        "type": {
          "type": "reference",
          "name": "DateRangeField",
          "id": 717
        },
        "overwrites": {
          "type": "reference",
          "name": "Field.__constructor",
          "id": 45
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "RangeField.__constructor",
          "id": 674
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/RangeField.ts",
        "line": 21,
        "character": 29
      }
    ],
    "overwrites": {
      "type": "reference",
      "name": "Field.__constructor",
      "id": 45
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "RangeField.__constructor",
      "id": 674
    }
  },
  {
    "id": 738,
    "name": "_defaultValue",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isProtected": true,
      "isExported": true,
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 79,
        "character": 27
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "reference",
          "name": "Date"
        },
        {
          "type": "reflection",
          "declaration": {
            "id": 739,
            "name": "__type",
            "kind": 65536,
            "kindString": "Type literal",
            "flags": {},
            "signatures": [
              {
                "id": 740,
                "name": "__call",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "reference",
                  "name": "Promise",
                  "typeArguments": [
                    {
                      "type": "reference",
                      "name": "Date"
                    }
                  ]
                }
              }
            ],
            "sources": [
              {
                "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
                "line": 79,
                "character": 33
              }
            ]
          }
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field._defaultValue",
      "id": 42
    }
  },
  {
    "id": 735,
    "name": "choices",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true,
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 67,
        "character": 18
      }
    ],
    "type": {
      "type": "reference",
      "name": "Map",
      "typeArguments": [
        {
          "type": "reference",
          "name": "Date"
        },
        {
          "type": "intrinsic",
          "name": "string"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.choices",
      "id": 39
    }
  },
  {
    "id": 734,
    "name": "helpText",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true,
      "isOptional": true
    },
    "comment": {
      "shortText": "Help text that can be displayed with the form widget"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 61,
        "character": 19
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "undefined"
        },
        {
          "type": "intrinsic",
          "name": "string"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.helpText",
      "id": 38
    }
  },
  {
    "id": 733,
    "name": "label",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true,
      "isOptional": true
    },
    "comment": {
      "shortText": "Label that can be displayed as the form label for a widget",
      "text": "If not specified will be generated from `name`.\n"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 57,
        "character": 16
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "undefined"
        },
        {
          "type": "intrinsic",
          "name": "string"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.label",
      "id": 37
    }
  },
  {
    "id": 718,
    "name": "lowerBound",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/RangeField.ts",
        "line": 19,
        "character": 21
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "reference",
          "name": "Date"
        },
        {
          "type": "intrinsic",
          "name": "null"
        },
        {
          "type": "intrinsic",
          "name": "undefined"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "RangeField.lowerBound",
      "id": 671
    }
  },
  {
    "id": 736,
    "name": "readOnly",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "comment": {
      "shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 72,
        "character": 19
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "boolean"
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.readOnly",
      "id": 40
    }
  },
  {
    "id": 732,
    "name": "required",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "comment": {
      "shortText": "Is this field required when saving a record?"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 51,
        "character": 19
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "boolean"
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.required",
      "id": 36
    }
  },
  {
    "id": 720,
    "name": "separator",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/RangeField.ts",
        "line": 21,
        "character": 20
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "string"
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "RangeField.separator",
      "id": 673
    }
  },
  {
    "id": 719,
    "name": "upperBound",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/RangeField.ts",
        "line": 20,
        "character": 21
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "reference",
          "name": "Date"
        },
        {
          "type": "intrinsic",
          "name": "null"
        },
        {
          "type": "intrinsic",
          "name": "undefined"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "RangeField.upperBound",
      "id": 672
    }
  },
  {
    "id": 737,
    "name": "writeOnly",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "comment": {
      "shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 77,
        "character": 20
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "boolean"
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.writeOnly",
      "id": 41
    }
  },
  {
    "id": 753,
    "name": "defaultValue",
    "kind": 262144,
    "kindString": "Accessor",
    "flags": {
      "isExported": true
    },
    "comment": {
      "shortText": "Get the default value for this field. Note that this returns a promise that resolve to the default value\nas some default values may need to resolve data from a backend."
    },
    "getSignature": [
      {
        "id": 754,
        "name": "__get",
        "kind": 524288,
        "kindString": "Get signature",
        "flags": {},
        "comment": {
          "shortText": "Get the default value for this field. Note that this returns a promise that resolve to the default value\nas some default values may need to resolve data from a backend."
        },
        "type": {
          "type": "reference",
          "name": "Promise",
          "typeArguments": [
            {
              "type": "union",
              "types": [
                {
                  "type": "reference",
                  "name": "Date"
                },
                {
                  "type": "intrinsic",
                  "name": "null"
                },
                {
                  "type": "intrinsic",
                  "name": "undefined"
                }
              ]
            }
          ]
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.defaultValue",
          "id": 60
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 192,
        "character": 20
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.defaultValue",
      "id": 60
    }
  },
  {
    "id": 728,
    "name": "name",
    "kind": 262144,
    "kindString": "Accessor",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "getSignature": [
      {
        "id": 731,
        "name": "__get",
        "kind": 524288,
        "kindString": "Get signature",
        "flags": {},
        "type": {
          "type": "intrinsic",
          "name": "string"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.name",
          "id": 32
        }
      }
    ],
    "setSignature": [
      {
        "id": 729,
        "name": "__set",
        "kind": 1048576,
        "kindString": "Set signature",
        "flags": {},
        "parameters": [
          {
            "id": 730,
            "name": "name",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "void"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.name",
          "id": 32
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 41,
        "character": 19
      },
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 44,
        "character": 19
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.name",
      "id": 32
    }
  },
  {
    "id": 724,
    "name": "parent",
    "kind": 262144,
    "kindString": "Accessor",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "getSignature": [
      {
        "id": 727,
        "name": "__get",
        "kind": 524288,
        "kindString": "Get signature",
        "flags": {},
        "type": {
          "type": "reference",
          "name": "FieldBinder",
          "id": 79
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.parent",
          "id": 27
        }
      }
    ],
    "setSignature": [
      {
        "id": 725,
        "name": "__set",
        "kind": 1048576,
        "kindString": "Set signature",
        "flags": {},
        "parameters": [
          {
            "id": 726,
            "name": "viewModel",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "name": "FieldBinder",
              "id": 79
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "void"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.parent",
          "id": 27
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 30,
        "character": 21
      },
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 33,
        "character": 21
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.parent",
      "id": 27
    }
  },
  {
    "id": 761,
    "name": "clone",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 762,
        "name": "clone",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Returns a clone of the field that should be functionally equivalent"
        },
        "type": {
          "type": "reference",
          "name": "Field",
          "id": 24,
          "typeArguments": [
            {
              "type": "reference",
              "name": "Date"
            }
          ]
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.clone",
          "id": 68
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 216,
        "character": 16
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.clone",
      "id": 68
    }
  },
  {
    "id": 741,
    "name": "format",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 742,
        "name": "format",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
        },
        "parameters": [
          {
            "id": 743,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "\n"
            },
            "type": {
              "type": "reference",
              "name": "Date"
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "any"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.format",
          "id": 48
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 137,
        "character": 17
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.format",
      "id": 48
    }
  },
  {
    "id": 757,
    "name": "isEqual",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 758,
        "name": "isEqual",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Should two values be considered equal?",
          "text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
        },
        "parameters": [
          {
            "id": 759,
            "name": "value1",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "name": "Date"
            }
          },
          {
            "id": 760,
            "name": "value2",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "name": "Date"
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.isEqual",
          "id": 64
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 209,
        "character": 18
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.isEqual",
      "id": 64
    }
  },
  {
    "id": 747,
    "name": "normalize",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 748,
        "name": "normalize",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
          "text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
        },
        "parameters": [
          {
            "id": 749,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "\n"
            },
            "type": {
              "type": "intrinsic",
              "name": "any"
            }
          }
        ],
        "type": {
          "type": "reference",
          "name": "Date"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.normalize",
          "id": 54
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 175,
        "character": 20
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.normalize",
      "id": 54
    }
  },
  {
    "id": 744,
    "name": "parse",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 745,
        "name": "parse",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
        },
        "parameters": [
          {
            "id": 746,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "\n"
            },
            "type": {
              "type": "intrinsic",
              "name": "any"
            }
          }
        ],
        "type": {
          "type": "union",
          "types": [
            {
              "type": "reference",
              "name": "Date"
            },
            {
              "type": "intrinsic",
              "name": "null"
            }
          ]
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.parse",
          "id": 51
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 146,
        "character": 16
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.parse",
      "id": 51
    }
  },
  {
    "id": 750,
    "name": "toJS",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 751,
        "name": "toJS",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
        },
        "parameters": [
          {
            "id": 752,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "\n"
            },
            "type": {
              "type": "reference",
              "name": "Date"
            }
          }
        ],
        "type": {
          "type": "union",
          "types": [
            {
              "type": "intrinsic",
              "name": "string"
            },
            {
              "type": "intrinsic",
              "name": "number"
            },
            {
              "type": "intrinsic",
              "name": "null"
            },
            {
              "type": "reference",
              "name": "__type"
            }
          ]
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.toJS",
          "id": 57
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 184,
        "character": 8
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.toJS",
      "id": 57
    }
  },
  {
    "id": 755,
    "name": "toString",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 756,
        "name": "toString",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "type": {
          "type": "intrinsic",
          "name": "string"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.toString",
          "id": 62
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 199,
        "character": 12
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.toString",
      "id": 62
    }
  },
  {
    "id": 764,
    "name": "DateTimeField",
    "kind": 128,
    "kindString": "Class",
    "flags": {
      "isExported": true
    },
    "groups": [
      {
        "title": "Constructors",
        "kind": 512,
        "children": [785]
      },
      {
        "title": "Properties",
        "kind": 1024,
        "children": [782, 779, 778, 777, 780, 776, 781]
      },
      {
        "title": "Accessors",
        "kind": 262144,
        "children": [797, 772, 768]
      },
      {
        "title": "Methods",
        "kind": 2048,
        "children": [805, 788, 801, 791, 765, 794, 799]
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/DateTimeField.ts",
        "line": 11,
        "character": 34
      }
    ],
    "extendedTypes": [
      {
        "type": "reference",
        "name": "Field",
        "id": 24,
        "typeArguments": [
          {
            "type": "reference",
            "name": "Date"
          }
        ]
      }
    ],
    "childIds": [
      785,
      782,
      779,
      778,
      777,
      780,
      776,
      781,
      797,
      772,
      768,
      805,
      788,
      801,
      791,
      765,
      794,
      799
    ]
  },
  {
    "id": 785,
    "name": "constructor",
    "kind": 512,
    "kindString": "Constructor",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 786,
        "name": "new DateTimeField",
        "kind": 16384,
        "kindString": "Constructor signature",
        "flags": {},
        "parameters": [
          {
            "id": 787,
            "name": "values",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "name": "Props",
              "id": 4,
              "typeArguments": [
                {
                  "type": "reference",
                  "name": "Date"
                }
              ]
            },
            "defaultValue": " {}"
          }
        ],
        "type": {
          "type": "reference",
          "name": "DateTimeField",
          "id": 764
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.__constructor",
          "id": 45
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 79,
        "character": 53
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.__constructor",
      "id": 45
    }
  },
  {
    "id": 782,
    "name": "_defaultValue",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isProtected": true,
      "isExported": true,
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 79,
        "character": 27
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "reference",
          "name": "Date"
        },
        {
          "type": "reflection",
          "declaration": {
            "id": 783,
            "name": "__type",
            "kind": 65536,
            "kindString": "Type literal",
            "flags": {},
            "signatures": [
              {
                "id": 784,
                "name": "__call",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "reference",
                  "name": "Promise",
                  "typeArguments": [
                    {
                      "type": "reference",
                      "name": "Date"
                    }
                  ]
                }
              }
            ],
            "sources": [
              {
                "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
                "line": 79,
                "character": 33
              }
            ]
          }
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field._defaultValue",
      "id": 42
    }
  },
  {
    "id": 779,
    "name": "choices",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true,
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 67,
        "character": 18
      }
    ],
    "type": {
      "type": "reference",
      "name": "Map",
      "typeArguments": [
        {
          "type": "reference",
          "name": "Date"
        },
        {
          "type": "intrinsic",
          "name": "string"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.choices",
      "id": 39
    }
  },
  {
    "id": 778,
    "name": "helpText",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true,
      "isOptional": true
    },
    "comment": {
      "shortText": "Help text that can be displayed with the form widget"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 61,
        "character": 19
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "undefined"
        },
        {
          "type": "intrinsic",
          "name": "string"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.helpText",
      "id": 38
    }
  },
  {
    "id": 777,
    "name": "label",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true,
      "isOptional": true
    },
    "comment": {
      "shortText": "Label that can be displayed as the form label for a widget",
      "text": "If not specified will be generated from `name`.\n"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 57,
        "character": 16
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "undefined"
        },
        {
          "type": "intrinsic",
          "name": "string"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.label",
      "id": 37
    }
  },
  {
    "id": 780,
    "name": "readOnly",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "comment": {
      "shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 72,
        "character": 19
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "boolean"
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.readOnly",
      "id": 40
    }
  },
  {
    "id": 776,
    "name": "required",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "comment": {
      "shortText": "Is this field required when saving a record?"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 51,
        "character": 19
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "boolean"
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.required",
      "id": 36
    }
  },
  {
    "id": 781,
    "name": "writeOnly",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "comment": {
      "shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 77,
        "character": 20
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "boolean"
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.writeOnly",
      "id": 41
    }
  },
  {
    "id": 797,
    "name": "defaultValue",
    "kind": 262144,
    "kindString": "Accessor",
    "flags": {
      "isExported": true
    },
    "comment": {
      "shortText": "Get the default value for this field. Note that this returns a promise that resolve to the default value\nas some default values may need to resolve data from a backend."
    },
    "getSignature": [
      {
        "id": 798,
        "name": "__get",
        "kind": 524288,
        "kindString": "Get signature",
        "flags": {},
        "comment": {
          "shortText": "Get the default value for this field. Note that this returns a promise that resolve to the default value\nas some default values may need to resolve data from a backend."
        },
        "type": {
          "type": "reference",
          "name": "Promise",
          "typeArguments": [
            {
              "type": "union",
              "types": [
                {
                  "type": "reference",
                  "name": "Date"
                },
                {
                  "type": "intrinsic",
                  "name": "null"
                },
                {
                  "type": "intrinsic",
                  "name": "undefined"
                }
              ]
            }
          ]
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.defaultValue",
          "id": 60
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 192,
        "character": 20
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.defaultValue",
      "id": 60
    }
  },
  {
    "id": 772,
    "name": "name",
    "kind": 262144,
    "kindString": "Accessor",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "getSignature": [
      {
        "id": 775,
        "name": "__get",
        "kind": 524288,
        "kindString": "Get signature",
        "flags": {},
        "type": {
          "type": "intrinsic",
          "name": "string"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.name",
          "id": 32
        }
      }
    ],
    "setSignature": [
      {
        "id": 773,
        "name": "__set",
        "kind": 1048576,
        "kindString": "Set signature",
        "flags": {},
        "parameters": [
          {
            "id": 774,
            "name": "name",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "void"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.name",
          "id": 32
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 41,
        "character": 19
      },
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 44,
        "character": 19
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.name",
      "id": 32
    }
  },
  {
    "id": 768,
    "name": "parent",
    "kind": 262144,
    "kindString": "Accessor",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "getSignature": [
      {
        "id": 771,
        "name": "__get",
        "kind": 524288,
        "kindString": "Get signature",
        "flags": {},
        "type": {
          "type": "reference",
          "name": "FieldBinder",
          "id": 79
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.parent",
          "id": 27
        }
      }
    ],
    "setSignature": [
      {
        "id": 769,
        "name": "__set",
        "kind": 1048576,
        "kindString": "Set signature",
        "flags": {},
        "parameters": [
          {
            "id": 770,
            "name": "viewModel",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "name": "FieldBinder",
              "id": 79
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "void"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.parent",
          "id": 27
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 30,
        "character": 21
      },
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 33,
        "character": 21
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.parent",
      "id": 27
    }
  },
  {
    "id": 805,
    "name": "clone",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 806,
        "name": "clone",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Returns a clone of the field that should be functionally equivalent"
        },
        "type": {
          "type": "reference",
          "name": "Field",
          "id": 24,
          "typeArguments": [
            {
              "type": "reference",
              "name": "Date"
            }
          ]
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.clone",
          "id": 68
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 216,
        "character": 16
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.clone",
      "id": 68
    }
  },
  {
    "id": 788,
    "name": "format",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 789,
        "name": "format",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
        },
        "parameters": [
          {
            "id": 790,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "\n"
            },
            "type": {
              "type": "reference",
              "name": "Date"
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "any"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.format",
          "id": 48
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 137,
        "character": 17
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.format",
      "id": 48
    }
  },
  {
    "id": 801,
    "name": "isEqual",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 802,
        "name": "isEqual",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Should two values be considered equal?",
          "text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
        },
        "parameters": [
          {
            "id": 803,
            "name": "value1",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "name": "Date"
            }
          },
          {
            "id": 804,
            "name": "value2",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "name": "Date"
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.isEqual",
          "id": 64
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 209,
        "character": 18
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.isEqual",
      "id": 64
    }
  },
  {
    "id": 791,
    "name": "normalize",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 792,
        "name": "normalize",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
          "text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
        },
        "parameters": [
          {
            "id": 793,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "\n"
            },
            "type": {
              "type": "intrinsic",
              "name": "any"
            }
          }
        ],
        "type": {
          "type": "reference",
          "name": "Date"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.normalize",
          "id": 54
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 175,
        "character": 20
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.normalize",
      "id": 54
    }
  },
  {
    "id": 765,
    "name": "parse",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 766,
        "name": "parse",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "parameters": [
          {
            "id": 767,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "intrinsic",
              "name": "any"
            }
          }
        ],
        "type": {
          "type": "union",
          "types": [
            {
              "type": "reference",
              "name": "Date"
            },
            {
              "type": "intrinsic",
              "name": "null"
            }
          ]
        },
        "overwrites": {
          "type": "reference",
          "name": "Field.parse",
          "id": 51
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/DateTimeField.ts",
        "line": 12,
        "character": 9
      }
    ],
    "overwrites": {
      "type": "reference",
      "name": "Field.parse",
      "id": 51
    }
  },
  {
    "id": 794,
    "name": "toJS",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 795,
        "name": "toJS",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
        },
        "parameters": [
          {
            "id": 796,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "\n"
            },
            "type": {
              "type": "reference",
              "name": "Date"
            }
          }
        ],
        "type": {
          "type": "union",
          "types": [
            {
              "type": "intrinsic",
              "name": "string"
            },
            {
              "type": "intrinsic",
              "name": "number"
            },
            {
              "type": "intrinsic",
              "name": "null"
            },
            {
              "type": "reference",
              "name": "__type"
            }
          ]
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.toJS",
          "id": 57
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 184,
        "character": 8
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.toJS",
      "id": 57
    }
  },
  {
    "id": 799,
    "name": "toString",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 800,
        "name": "toString",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "type": {
          "type": "intrinsic",
          "name": "string"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.toString",
          "id": 62
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 199,
        "character": 12
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.toString",
      "id": 62
    }
  },
  {
    "id": 808,
    "name": "DateTimeRangeField",
    "kind": 128,
    "kindString": "Class",
    "flags": {
      "isExported": true
    },
    "groups": [
      {
        "title": "Constructors",
        "kind": 512,
        "children": [812]
      },
      {
        "title": "Properties",
        "kind": 1024,
        "children": [829, 826, 825, 824, 809, 827, 823, 811, 810, 828]
      },
      {
        "title": "Accessors",
        "kind": 262144,
        "children": [844, 819, 815]
      },
      {
        "title": "Methods",
        "kind": 2048,
        "children": [852, 832, 848, 838, 835, 841, 846]
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/DateTimeRangeField.ts",
        "line": 3,
        "character": 39
      }
    ],
    "extendedTypes": [
      {
        "type": "reference",
        "name": "RangeField",
        "id": 669,
        "typeArguments": [
          {
            "type": "reference",
            "name": "Date"
          }
        ]
      }
    ],
    "childIds": [
      812,
      829,
      826,
      825,
      824,
      809,
      827,
      823,
      811,
      810,
      828,
      844,
      819,
      815,
      852,
      832,
      848,
      838,
      835,
      841,
      846
    ]
  },
  {
    "id": 812,
    "name": "constructor",
    "kind": 512,
    "kindString": "Constructor",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 813,
        "name": "new DateTimeRangeField",
        "kind": 16384,
        "kindString": "Constructor signature",
        "flags": {},
        "parameters": [
          {
            "id": 814,
            "name": "values",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "name": "Boundary",
              "id": 653,
              "typeArguments": [
                {
                  "type": "reference",
                  "name": "Date"
                }
              ]
            }
          }
        ],
        "type": {
          "type": "reference",
          "name": "DateTimeRangeField",
          "id": 808
        },
        "overwrites": {
          "type": "reference",
          "name": "Field.__constructor",
          "id": 45
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "RangeField.__constructor",
          "id": 674
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/RangeField.ts",
        "line": 21,
        "character": 29
      }
    ],
    "overwrites": {
      "type": "reference",
      "name": "Field.__constructor",
      "id": 45
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "RangeField.__constructor",
      "id": 674
    }
  },
  {
    "id": 829,
    "name": "_defaultValue",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isProtected": true,
      "isExported": true,
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 79,
        "character": 27
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "reference",
          "name": "Date"
        },
        {
          "type": "reflection",
          "declaration": {
            "id": 830,
            "name": "__type",
            "kind": 65536,
            "kindString": "Type literal",
            "flags": {},
            "signatures": [
              {
                "id": 831,
                "name": "__call",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "reference",
                  "name": "Promise",
                  "typeArguments": [
                    {
                      "type": "reference",
                      "name": "Date"
                    }
                  ]
                }
              }
            ],
            "sources": [
              {
                "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
                "line": 79,
                "character": 33
              }
            ]
          }
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field._defaultValue",
      "id": 42
    }
  },
  {
    "id": 826,
    "name": "choices",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true,
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 67,
        "character": 18
      }
    ],
    "type": {
      "type": "reference",
      "name": "Map",
      "typeArguments": [
        {
          "type": "reference",
          "name": "Date"
        },
        {
          "type": "intrinsic",
          "name": "string"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.choices",
      "id": 39
    }
  },
  {
    "id": 825,
    "name": "helpText",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true,
      "isOptional": true
    },
    "comment": {
      "shortText": "Help text that can be displayed with the form widget"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 61,
        "character": 19
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "undefined"
        },
        {
          "type": "intrinsic",
          "name": "string"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.helpText",
      "id": 38
    }
  },
  {
    "id": 824,
    "name": "label",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true,
      "isOptional": true
    },
    "comment": {
      "shortText": "Label that can be displayed as the form label for a widget",
      "text": "If not specified will be generated from `name`.\n"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 57,
        "character": 16
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "undefined"
        },
        {
          "type": "intrinsic",
          "name": "string"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.label",
      "id": 37
    }
  },
  {
    "id": 809,
    "name": "lowerBound",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/RangeField.ts",
        "line": 19,
        "character": 21
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "reference",
          "name": "Date"
        },
        {
          "type": "intrinsic",
          "name": "null"
        },
        {
          "type": "intrinsic",
          "name": "undefined"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "RangeField.lowerBound",
      "id": 671
    }
  },
  {
    "id": 827,
    "name": "readOnly",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "comment": {
      "shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 72,
        "character": 19
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "boolean"
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.readOnly",
      "id": 40
    }
  },
  {
    "id": 823,
    "name": "required",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "comment": {
      "shortText": "Is this field required when saving a record?"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 51,
        "character": 19
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "boolean"
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.required",
      "id": 36
    }
  },
  {
    "id": 811,
    "name": "separator",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/RangeField.ts",
        "line": 21,
        "character": 20
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "string"
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "RangeField.separator",
      "id": 673
    }
  },
  {
    "id": 810,
    "name": "upperBound",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/RangeField.ts",
        "line": 20,
        "character": 21
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "reference",
          "name": "Date"
        },
        {
          "type": "intrinsic",
          "name": "null"
        },
        {
          "type": "intrinsic",
          "name": "undefined"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "RangeField.upperBound",
      "id": 672
    }
  },
  {
    "id": 828,
    "name": "writeOnly",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "comment": {
      "shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 77,
        "character": 20
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "boolean"
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.writeOnly",
      "id": 41
    }
  },
  {
    "id": 844,
    "name": "defaultValue",
    "kind": 262144,
    "kindString": "Accessor",
    "flags": {
      "isExported": true
    },
    "comment": {
      "shortText": "Get the default value for this field. Note that this returns a promise that resolve to the default value\nas some default values may need to resolve data from a backend."
    },
    "getSignature": [
      {
        "id": 845,
        "name": "__get",
        "kind": 524288,
        "kindString": "Get signature",
        "flags": {},
        "comment": {
          "shortText": "Get the default value for this field. Note that this returns a promise that resolve to the default value\nas some default values may need to resolve data from a backend."
        },
        "type": {
          "type": "reference",
          "name": "Promise",
          "typeArguments": [
            {
              "type": "union",
              "types": [
                {
                  "type": "reference",
                  "name": "Date"
                },
                {
                  "type": "intrinsic",
                  "name": "null"
                },
                {
                  "type": "intrinsic",
                  "name": "undefined"
                }
              ]
            }
          ]
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.defaultValue",
          "id": 60
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 192,
        "character": 20
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.defaultValue",
      "id": 60
    }
  },
  {
    "id": 819,
    "name": "name",
    "kind": 262144,
    "kindString": "Accessor",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "getSignature": [
      {
        "id": 822,
        "name": "__get",
        "kind": 524288,
        "kindString": "Get signature",
        "flags": {},
        "type": {
          "type": "intrinsic",
          "name": "string"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.name",
          "id": 32
        }
      }
    ],
    "setSignature": [
      {
        "id": 820,
        "name": "__set",
        "kind": 1048576,
        "kindString": "Set signature",
        "flags": {},
        "parameters": [
          {
            "id": 821,
            "name": "name",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "void"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.name",
          "id": 32
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 41,
        "character": 19
      },
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 44,
        "character": 19
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.name",
      "id": 32
    }
  },
  {
    "id": 815,
    "name": "parent",
    "kind": 262144,
    "kindString": "Accessor",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "getSignature": [
      {
        "id": 818,
        "name": "__get",
        "kind": 524288,
        "kindString": "Get signature",
        "flags": {},
        "type": {
          "type": "reference",
          "name": "FieldBinder",
          "id": 79
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.parent",
          "id": 27
        }
      }
    ],
    "setSignature": [
      {
        "id": 816,
        "name": "__set",
        "kind": 1048576,
        "kindString": "Set signature",
        "flags": {},
        "parameters": [
          {
            "id": 817,
            "name": "viewModel",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "name": "FieldBinder",
              "id": 79
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "void"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.parent",
          "id": 27
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 30,
        "character": 21
      },
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 33,
        "character": 21
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.parent",
      "id": 27
    }
  },
  {
    "id": 852,
    "name": "clone",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 853,
        "name": "clone",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Returns a clone of the field that should be functionally equivalent"
        },
        "type": {
          "type": "reference",
          "name": "Field",
          "id": 24,
          "typeArguments": [
            {
              "type": "reference",
              "name": "Date"
            }
          ]
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.clone",
          "id": 68
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 216,
        "character": 16
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.clone",
      "id": 68
    }
  },
  {
    "id": 832,
    "name": "format",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 833,
        "name": "format",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
        },
        "parameters": [
          {
            "id": 834,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "\n"
            },
            "type": {
              "type": "reference",
              "name": "Date"
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "any"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.format",
          "id": 48
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 137,
        "character": 17
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.format",
      "id": 48
    }
  },
  {
    "id": 848,
    "name": "isEqual",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 849,
        "name": "isEqual",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Should two values be considered equal?",
          "text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
        },
        "parameters": [
          {
            "id": 850,
            "name": "value1",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "name": "Date"
            }
          },
          {
            "id": 851,
            "name": "value2",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "name": "Date"
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.isEqual",
          "id": 64
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 209,
        "character": 18
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.isEqual",
      "id": 64
    }
  },
  {
    "id": 838,
    "name": "normalize",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 839,
        "name": "normalize",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
          "text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
        },
        "parameters": [
          {
            "id": 840,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "\n"
            },
            "type": {
              "type": "intrinsic",
              "name": "any"
            }
          }
        ],
        "type": {
          "type": "reference",
          "name": "Date"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.normalize",
          "id": 54
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 175,
        "character": 20
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.normalize",
      "id": 54
    }
  },
  {
    "id": 835,
    "name": "parse",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 836,
        "name": "parse",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
        },
        "parameters": [
          {
            "id": 837,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "\n"
            },
            "type": {
              "type": "intrinsic",
              "name": "any"
            }
          }
        ],
        "type": {
          "type": "union",
          "types": [
            {
              "type": "reference",
              "name": "Date"
            },
            {
              "type": "intrinsic",
              "name": "null"
            }
          ]
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.parse",
          "id": 51
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 146,
        "character": 16
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.parse",
      "id": 51
    }
  },
  {
    "id": 841,
    "name": "toJS",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 842,
        "name": "toJS",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
        },
        "parameters": [
          {
            "id": 843,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "\n"
            },
            "type": {
              "type": "reference",
              "name": "Date"
            }
          }
        ],
        "type": {
          "type": "union",
          "types": [
            {
              "type": "intrinsic",
              "name": "string"
            },
            {
              "type": "intrinsic",
              "name": "number"
            },
            {
              "type": "intrinsic",
              "name": "null"
            },
            {
              "type": "reference",
              "name": "__type"
            }
          ]
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.toJS",
          "id": 57
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 184,
        "character": 8
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.toJS",
      "id": 57
    }
  },
  {
    "id": 846,
    "name": "toString",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 847,
        "name": "toString",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "type": {
          "type": "intrinsic",
          "name": "string"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.toString",
          "id": 62
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 199,
        "character": 12
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.toString",
      "id": 62
    }
  },
  {
    "id": 515,
    "name": "DecimalField",
    "kind": 128,
    "kindString": "Class",
    "flags": {
      "isExported": true
    },
    "comment": {
      "shortText": "Decimal Field. Stores decimal value as a string.",
      "text": "To support decimal operations consider a custom implementation that uses a decimal library eg. decimal.js\n\nAlso used by CurrencyField.\n\nSee also: FloatField\n"
    },
    "groups": [
      {
        "title": "Constructors",
        "kind": 512,
        "children": [517]
      },
      {
        "title": "Properties",
        "kind": 1024,
        "children": [539, 536, 516, 535, 534, 524, 523, 537, 533, 538]
      },
      {
        "title": "Accessors",
        "kind": 262144,
        "children": [551, 529, 525]
      },
      {
        "title": "Methods",
        "kind": 2048,
        "children": [559, 542, 555, 545, 520, 548, 553]
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/DecimalField.ts",
        "line": 12,
        "character": 33
      }
    ],
    "extendedTypes": [
      {
        "type": "reference",
        "name": "NumberField",
        "id": 101,
        "typeArguments": [
          {
            "type": "intrinsic",
            "name": "string"
          }
        ]
      }
    ],
    "extendedBy": [
      {
        "type": "reference",
        "name": "CurrencyField",
        "id": 562
      }
    ],
    "childIds": [
      517,
      539,
      536,
      516,
      535,
      534,
      524,
      523,
      537,
      533,
      538,
      551,
      529,
      525,
      559,
      542,
      555,
      545,
      520,
      548,
      553
    ]
  },
  {
    "id": 517,
    "name": "constructor",
    "kind": 512,
    "kindString": "Constructor",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 518,
        "name": "new DecimalField",
        "kind": 16384,
        "kindString": "Constructor signature",
        "flags": {},
        "parameters": [
          {
            "id": 519,
            "name": "values",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "intrinsic",
              "name": "any"
            }
          }
        ],
        "type": {
          "type": "reference",
          "name": "DecimalField",
          "id": 515
        },
        "overwrites": {
          "type": "reference",
          "name": "NumberField.__constructor",
          "id": 105
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/DecimalField.ts",
        "line": 13,
        "character": 34
      }
    ],
    "overwrites": {
      "type": "reference",
      "name": "NumberField.__constructor",
      "id": 105
    }
  },
  {
    "id": 539,
    "name": "_defaultValue",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isProtected": true,
      "isExported": true,
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 79,
        "character": 27
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "union",
          "types": [
            {
              "type": "intrinsic",
              "name": "string"
            },
            {
              "type": "intrinsic",
              "name": "number"
            }
          ]
        },
        {
          "type": "reflection",
          "declaration": {
            "id": 540,
            "name": "__type",
            "kind": 65536,
            "kindString": "Type literal",
            "flags": {},
            "signatures": [
              {
                "id": 541,
                "name": "__call",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "reference",
                  "name": "Promise",
                  "typeArguments": [
                    {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "string"
                        },
                        {
                          "type": "intrinsic",
                          "name": "number"
                        }
                      ]
                    }
                  ]
                }
              }
            ],
            "sources": [
              {
                "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
                "line": 79,
                "character": 33
              }
            ]
          }
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field._defaultValue",
      "id": 42
    }
  },
  {
    "id": 536,
    "name": "choices",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true,
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 67,
        "character": 18
      }
    ],
    "type": {
      "type": "reference",
      "name": "Map",
      "typeArguments": [
        {
          "type": "union",
          "types": [
            {
              "type": "intrinsic",
              "name": "string"
            },
            {
              "type": "intrinsic",
              "name": "number"
            }
          ]
        },
        {
          "type": "intrinsic",
          "name": "string"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.choices",
      "id": 39
    }
  },
  {
    "id": 516,
    "name": "decimalPlaces",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true,
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/DecimalField.ts",
        "line": 13,
        "character": 24
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "undefined"
        },
        {
          "type": "intrinsic",
          "name": "number"
        }
      ]
    }
  },
  {
    "id": 535,
    "name": "helpText",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true,
      "isOptional": true
    },
    "comment": {
      "shortText": "Help text that can be displayed with the form widget"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 61,
        "character": 19
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "undefined"
        },
        {
          "type": "intrinsic",
          "name": "string"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.helpText",
      "id": 38
    }
  },
  {
    "id": 534,
    "name": "label",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true,
      "isOptional": true
    },
    "comment": {
      "shortText": "Label that can be displayed as the form label for a widget",
      "text": "If not specified will be generated from `name`.\n"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 57,
        "character": 16
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "undefined"
        },
        {
          "type": "intrinsic",
          "name": "string"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.label",
      "id": 37
    }
  },
  {
    "id": 524,
    "name": "maxValue",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true,
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/NumberField.ts",
        "line": 16,
        "character": 19
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "undefined"
        },
        {
          "type": "intrinsic",
          "name": "number"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "NumberField.maxValue",
      "id": 104
    }
  },
  {
    "id": 523,
    "name": "minValue",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true,
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/NumberField.ts",
        "line": 15,
        "character": 19
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "undefined"
        },
        {
          "type": "intrinsic",
          "name": "number"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "NumberField.minValue",
      "id": 103
    }
  },
  {
    "id": 537,
    "name": "readOnly",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "comment": {
      "shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 72,
        "character": 19
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "boolean"
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.readOnly",
      "id": 40
    }
  },
  {
    "id": 533,
    "name": "required",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "comment": {
      "shortText": "Is this field required when saving a record?"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 51,
        "character": 19
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "boolean"
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.required",
      "id": 36
    }
  },
  {
    "id": 538,
    "name": "writeOnly",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "comment": {
      "shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 77,
        "character": 20
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "boolean"
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.writeOnly",
      "id": 41
    }
  },
  {
    "id": 551,
    "name": "defaultValue",
    "kind": 262144,
    "kindString": "Accessor",
    "flags": {
      "isExported": true
    },
    "comment": {
      "shortText": "Get the default value for this field. Note that this returns a promise that resolve to the default value\nas some default values may need to resolve data from a backend."
    },
    "getSignature": [
      {
        "id": 552,
        "name": "__get",
        "kind": 524288,
        "kindString": "Get signature",
        "flags": {},
        "comment": {
          "shortText": "Get the default value for this field. Note that this returns a promise that resolve to the default value\nas some default values may need to resolve data from a backend."
        },
        "type": {
          "type": "reference",
          "name": "Promise",
          "typeArguments": [
            {
              "type": "union",
              "types": [
                {
                  "type": "union",
                  "types": [
                    {
                      "type": "intrinsic",
                      "name": "string"
                    },
                    {
                      "type": "intrinsic",
                      "name": "number"
                    }
                  ]
                },
                {
                  "type": "intrinsic",
                  "name": "null"
                },
                {
                  "type": "intrinsic",
                  "name": "undefined"
                }
              ]
            }
          ]
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.defaultValue",
          "id": 60
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 192,
        "character": 20
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.defaultValue",
      "id": 60
    }
  },
  {
    "id": 529,
    "name": "name",
    "kind": 262144,
    "kindString": "Accessor",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "getSignature": [
      {
        "id": 532,
        "name": "__get",
        "kind": 524288,
        "kindString": "Get signature",
        "flags": {},
        "type": {
          "type": "intrinsic",
          "name": "string"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.name",
          "id": 32
        }
      }
    ],
    "setSignature": [
      {
        "id": 530,
        "name": "__set",
        "kind": 1048576,
        "kindString": "Set signature",
        "flags": {},
        "parameters": [
          {
            "id": 531,
            "name": "name",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "void"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.name",
          "id": 32
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 41,
        "character": 19
      },
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 44,
        "character": 19
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.name",
      "id": 32
    }
  },
  {
    "id": 525,
    "name": "parent",
    "kind": 262144,
    "kindString": "Accessor",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "getSignature": [
      {
        "id": 528,
        "name": "__get",
        "kind": 524288,
        "kindString": "Get signature",
        "flags": {},
        "type": {
          "type": "reference",
          "name": "FieldBinder",
          "id": 79
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.parent",
          "id": 27
        }
      }
    ],
    "setSignature": [
      {
        "id": 526,
        "name": "__set",
        "kind": 1048576,
        "kindString": "Set signature",
        "flags": {},
        "parameters": [
          {
            "id": 527,
            "name": "viewModel",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "name": "FieldBinder",
              "id": 79
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "void"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.parent",
          "id": 27
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 30,
        "character": 21
      },
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 33,
        "character": 21
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.parent",
      "id": 27
    }
  },
  {
    "id": 559,
    "name": "clone",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 560,
        "name": "clone",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Returns a clone of the field that should be functionally equivalent"
        },
        "type": {
          "type": "reference",
          "name": "Field",
          "id": 24,
          "typeArguments": [
            {
              "type": "union",
              "types": [
                {
                  "type": "intrinsic",
                  "name": "string"
                },
                {
                  "type": "intrinsic",
                  "name": "number"
                }
              ]
            }
          ]
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.clone",
          "id": 68
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 216,
        "character": 16
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.clone",
      "id": 68
    }
  },
  {
    "id": 542,
    "name": "format",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 543,
        "name": "format",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
        },
        "parameters": [
          {
            "id": 544,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "\n"
            },
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "intrinsic",
                  "name": "string"
                },
                {
                  "type": "intrinsic",
                  "name": "number"
                }
              ]
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "any"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.format",
          "id": 48
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 137,
        "character": 17
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.format",
      "id": 48
    }
  },
  {
    "id": 555,
    "name": "isEqual",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 556,
        "name": "isEqual",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Should two values be considered equal?",
          "text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
        },
        "parameters": [
          {
            "id": 557,
            "name": "value1",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "intrinsic",
                  "name": "string"
                },
                {
                  "type": "intrinsic",
                  "name": "number"
                }
              ]
            }
          },
          {
            "id": 558,
            "name": "value2",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "intrinsic",
                  "name": "string"
                },
                {
                  "type": "intrinsic",
                  "name": "number"
                }
              ]
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.isEqual",
          "id": 64
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 209,
        "character": 18
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.isEqual",
      "id": 64
    }
  },
  {
    "id": 545,
    "name": "normalize",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 546,
        "name": "normalize",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
          "text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
        },
        "parameters": [
          {
            "id": 547,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "\n"
            },
            "type": {
              "type": "intrinsic",
              "name": "any"
            }
          }
        ],
        "type": {
          "type": "union",
          "types": [
            {
              "type": "intrinsic",
              "name": "string"
            },
            {
              "type": "intrinsic",
              "name": "number"
            }
          ]
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.normalize",
          "id": 54
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 175,
        "character": 20
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.normalize",
      "id": 54
    }
  },
  {
    "id": 520,
    "name": "parse",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 521,
        "name": "parse",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "parameters": [
          {
            "id": 522,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "intrinsic",
              "name": "any"
            }
          }
        ],
        "type": {
          "type": "union",
          "types": [
            {
              "type": "intrinsic",
              "name": "string"
            },
            {
              "type": "intrinsic",
              "name": "null"
            }
          ]
        },
        "overwrites": {
          "type": "reference",
          "name": "Field.parse",
          "id": 51
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/DecimalField.ts",
        "line": 30,
        "character": 9
      }
    ],
    "overwrites": {
      "type": "reference",
      "name": "Field.parse",
      "id": 51
    }
  },
  {
    "id": 548,
    "name": "toJS",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 549,
        "name": "toJS",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
        },
        "parameters": [
          {
            "id": 550,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "\n"
            },
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "intrinsic",
                  "name": "string"
                },
                {
                  "type": "intrinsic",
                  "name": "number"
                }
              ]
            }
          }
        ],
        "type": {
          "type": "union",
          "types": [
            {
              "type": "intrinsic",
              "name": "string"
            },
            {
              "type": "intrinsic",
              "name": "number"
            },
            {
              "type": "intrinsic",
              "name": "null"
            },
            {
              "type": "reference",
              "name": "__type"
            }
          ]
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.toJS",
          "id": 57
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 184,
        "character": 8
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.toJS",
      "id": 57
    }
  },
  {
    "id": 553,
    "name": "toString",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 554,
        "name": "toString",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "type": {
          "type": "intrinsic",
          "name": "string"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.toString",
          "id": 62
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 199,
        "character": 12
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.toString",
      "id": 62
    }
  },
  {
    "id": 855,
    "name": "DurationField",
    "kind": 128,
    "kindString": "Class",
    "flags": {
      "isExported": true
    },
    "comment": {
      "shortText": "Duration Field - represents a duration with two components: hour, minute such as 10h5m.",
      "text": "Duration longer than 23h59m is not currently supported.\n\nBackend of choice need to be capable of storing a duration in a similar manner.\n"
    },
    "groups": [
      {
        "title": "Constructors",
        "kind": 512,
        "children": [857]
      },
      {
        "title": "Properties",
        "kind": 1024,
        "children": [874, 871, 870, 869, 856, 872, 868, 873]
      },
      {
        "title": "Accessors",
        "kind": 262144,
        "children": [889, 864, 860]
      },
      {
        "title": "Methods",
        "kind": 2048,
        "children": [897, 877, 893, 883, 880, 886, 891]
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/DurationField.ts",
        "line": 10,
        "character": 34
      }
    ],
    "extendedTypes": [
      {
        "type": "reference",
        "name": "CharField",
        "id": 467
      }
    ],
    "childIds": [
      857,
      874,
      871,
      870,
      869,
      856,
      872,
      868,
      873,
      889,
      864,
      860,
      897,
      877,
      893,
      883,
      880,
      886,
      891
    ]
  },
  {
    "id": 857,
    "name": "constructor",
    "kind": 512,
    "kindString": "Constructor",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 858,
        "name": "new DurationField",
        "kind": 16384,
        "kindString": "Constructor signature",
        "flags": {},
        "parameters": [
          {
            "id": 859,
            "name": "values",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "name": "CharFieldProps",
              "id": 511
            },
            "defaultValue": " {}"
          }
        ],
        "type": {
          "type": "reference",
          "name": "DurationField",
          "id": 855
        },
        "overwrites": {
          "type": "reference",
          "name": "Field.__constructor",
          "id": 45
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "CharField.__constructor",
          "id": 469
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/CharField.ts",
        "line": 11,
        "character": 30
      }
    ],
    "overwrites": {
      "type": "reference",
      "name": "Field.__constructor",
      "id": 45
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "CharField.__constructor",
      "id": 469
    }
  },
  {
    "id": 874,
    "name": "_defaultValue",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isProtected": true,
      "isExported": true,
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 79,
        "character": 27
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "string"
        },
        {
          "type": "reflection",
          "declaration": {
            "id": 875,
            "name": "__type",
            "kind": 65536,
            "kindString": "Type literal",
            "flags": {},
            "signatures": [
              {
                "id": 876,
                "name": "__call",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "reference",
                  "name": "Promise",
                  "typeArguments": [
                    {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  ]
                }
              }
            ],
            "sources": [
              {
                "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
                "line": 79,
                "character": 33
              }
            ]
          }
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field._defaultValue",
      "id": 42
    }
  },
  {
    "id": 871,
    "name": "choices",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true,
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 67,
        "character": 18
      }
    ],
    "type": {
      "type": "reference",
      "name": "Map",
      "typeArguments": [
        {
          "type": "intrinsic",
          "name": "string"
        },
        {
          "type": "intrinsic",
          "name": "string"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.choices",
      "id": 39
    }
  },
  {
    "id": 870,
    "name": "helpText",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true,
      "isOptional": true
    },
    "comment": {
      "shortText": "Help text that can be displayed with the form widget"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 61,
        "character": 19
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "undefined"
        },
        {
          "type": "intrinsic",
          "name": "string"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.helpText",
      "id": 38
    }
  },
  {
    "id": 869,
    "name": "label",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true,
      "isOptional": true
    },
    "comment": {
      "shortText": "Label that can be displayed as the form label for a widget",
      "text": "If not specified will be generated from `name`.\n"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 57,
        "character": 16
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "undefined"
        },
        {
          "type": "intrinsic",
          "name": "string"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.label",
      "id": 37
    }
  },
  {
    "id": 856,
    "name": "maxLength",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true,
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/CharField.ts",
        "line": 11,
        "character": 20
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "undefined"
        },
        {
          "type": "intrinsic",
          "name": "number"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "CharField.maxLength",
      "id": 468
    }
  },
  {
    "id": 872,
    "name": "readOnly",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "comment": {
      "shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 72,
        "character": 19
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "boolean"
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.readOnly",
      "id": 40
    }
  },
  {
    "id": 868,
    "name": "required",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "comment": {
      "shortText": "Is this field required when saving a record?"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 51,
        "character": 19
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "boolean"
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.required",
      "id": 36
    }
  },
  {
    "id": 873,
    "name": "writeOnly",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "comment": {
      "shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 77,
        "character": 20
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "boolean"
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.writeOnly",
      "id": 41
    }
  },
  {
    "id": 889,
    "name": "defaultValue",
    "kind": 262144,
    "kindString": "Accessor",
    "flags": {
      "isExported": true
    },
    "comment": {
      "shortText": "Get the default value for this field. Note that this returns a promise that resolve to the default value\nas some default values may need to resolve data from a backend."
    },
    "getSignature": [
      {
        "id": 890,
        "name": "__get",
        "kind": 524288,
        "kindString": "Get signature",
        "flags": {},
        "comment": {
          "shortText": "Get the default value for this field. Note that this returns a promise that resolve to the default value\nas some default values may need to resolve data from a backend."
        },
        "type": {
          "type": "reference",
          "name": "Promise",
          "typeArguments": [
            {
              "type": "union",
              "types": [
                {
                  "type": "intrinsic",
                  "name": "string"
                },
                {
                  "type": "intrinsic",
                  "name": "null"
                },
                {
                  "type": "intrinsic",
                  "name": "undefined"
                }
              ]
            }
          ]
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.defaultValue",
          "id": 60
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 192,
        "character": 20
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.defaultValue",
      "id": 60
    }
  },
  {
    "id": 864,
    "name": "name",
    "kind": 262144,
    "kindString": "Accessor",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "getSignature": [
      {
        "id": 867,
        "name": "__get",
        "kind": 524288,
        "kindString": "Get signature",
        "flags": {},
        "type": {
          "type": "intrinsic",
          "name": "string"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.name",
          "id": 32
        }
      }
    ],
    "setSignature": [
      {
        "id": 865,
        "name": "__set",
        "kind": 1048576,
        "kindString": "Set signature",
        "flags": {},
        "parameters": [
          {
            "id": 866,
            "name": "name",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "void"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.name",
          "id": 32
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 41,
        "character": 19
      },
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 44,
        "character": 19
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.name",
      "id": 32
    }
  },
  {
    "id": 860,
    "name": "parent",
    "kind": 262144,
    "kindString": "Accessor",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "getSignature": [
      {
        "id": 863,
        "name": "__get",
        "kind": 524288,
        "kindString": "Get signature",
        "flags": {},
        "type": {
          "type": "reference",
          "name": "FieldBinder",
          "id": 79
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.parent",
          "id": 27
        }
      }
    ],
    "setSignature": [
      {
        "id": 861,
        "name": "__set",
        "kind": 1048576,
        "kindString": "Set signature",
        "flags": {},
        "parameters": [
          {
            "id": 862,
            "name": "viewModel",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "name": "FieldBinder",
              "id": 79
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "void"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.parent",
          "id": 27
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 30,
        "character": 21
      },
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 33,
        "character": 21
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.parent",
      "id": 27
    }
  },
  {
    "id": 897,
    "name": "clone",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 898,
        "name": "clone",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Returns a clone of the field that should be functionally equivalent"
        },
        "type": {
          "type": "reference",
          "name": "Field",
          "id": 24,
          "typeArguments": [
            {
              "type": "intrinsic",
              "name": "string"
            }
          ]
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.clone",
          "id": 68
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 216,
        "character": 16
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.clone",
      "id": 68
    }
  },
  {
    "id": 877,
    "name": "format",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 878,
        "name": "format",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
        },
        "parameters": [
          {
            "id": 879,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "\n"
            },
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "any"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.format",
          "id": 48
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 137,
        "character": 17
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.format",
      "id": 48
    }
  },
  {
    "id": 893,
    "name": "isEqual",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 894,
        "name": "isEqual",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Should two values be considered equal?",
          "text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
        },
        "parameters": [
          {
            "id": 895,
            "name": "value1",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          },
          {
            "id": 896,
            "name": "value2",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.isEqual",
          "id": 64
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 209,
        "character": 18
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.isEqual",
      "id": 64
    }
  },
  {
    "id": 883,
    "name": "normalize",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 884,
        "name": "normalize",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
          "text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
        },
        "parameters": [
          {
            "id": 885,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "\n"
            },
            "type": {
              "type": "intrinsic",
              "name": "any"
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "string"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.normalize",
          "id": 54
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 175,
        "character": 20
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.normalize",
      "id": 54
    }
  },
  {
    "id": 880,
    "name": "parse",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 881,
        "name": "parse",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
        },
        "parameters": [
          {
            "id": 882,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "\n"
            },
            "type": {
              "type": "intrinsic",
              "name": "any"
            }
          }
        ],
        "type": {
          "type": "union",
          "types": [
            {
              "type": "intrinsic",
              "name": "string"
            },
            {
              "type": "intrinsic",
              "name": "null"
            }
          ]
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.parse",
          "id": 51
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 146,
        "character": 16
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.parse",
      "id": 51
    }
  },
  {
    "id": 886,
    "name": "toJS",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 887,
        "name": "toJS",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
        },
        "parameters": [
          {
            "id": 888,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "\n"
            },
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          }
        ],
        "type": {
          "type": "union",
          "types": [
            {
              "type": "intrinsic",
              "name": "string"
            },
            {
              "type": "intrinsic",
              "name": "number"
            },
            {
              "type": "intrinsic",
              "name": "null"
            },
            {
              "type": "reference",
              "name": "__type"
            }
          ]
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.toJS",
          "id": 57
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 184,
        "character": 8
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.toJS",
      "id": 57
    }
  },
  {
    "id": 891,
    "name": "toString",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 892,
        "name": "toString",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "type": {
          "type": "intrinsic",
          "name": "string"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.toString",
          "id": 62
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 199,
        "character": 12
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.toString",
      "id": 62
    }
  },
  {
    "id": 900,
    "name": "EmailField",
    "kind": 128,
    "kindString": "Class",
    "flags": {
      "isExported": true
    },
    "groups": [
      {
        "title": "Constructors",
        "kind": 512,
        "children": [902]
      },
      {
        "title": "Properties",
        "kind": 1024,
        "children": [919, 916, 915, 914, 901, 917, 913, 918]
      },
      {
        "title": "Accessors",
        "kind": 262144,
        "children": [934, 909, 905]
      },
      {
        "title": "Methods",
        "kind": 2048,
        "children": [942, 922, 938, 928, 925, 931, 936]
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/EmailField.ts",
        "line": 3,
        "character": 31
      }
    ],
    "extendedTypes": [
      {
        "type": "reference",
        "name": "CharField",
        "id": 467
      }
    ],
    "childIds": [
      902,
      919,
      916,
      915,
      914,
      901,
      917,
      913,
      918,
      934,
      909,
      905,
      942,
      922,
      938,
      928,
      925,
      931,
      936
    ]
  },
  {
    "id": 902,
    "name": "constructor",
    "kind": 512,
    "kindString": "Constructor",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 903,
        "name": "new EmailField",
        "kind": 16384,
        "kindString": "Constructor signature",
        "flags": {},
        "parameters": [
          {
            "id": 904,
            "name": "values",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "name": "CharFieldProps",
              "id": 511
            },
            "defaultValue": " {}"
          }
        ],
        "type": {
          "type": "reference",
          "name": "EmailField",
          "id": 900
        },
        "overwrites": {
          "type": "reference",
          "name": "Field.__constructor",
          "id": 45
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "CharField.__constructor",
          "id": 469
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/CharField.ts",
        "line": 11,
        "character": 30
      }
    ],
    "overwrites": {
      "type": "reference",
      "name": "Field.__constructor",
      "id": 45
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "CharField.__constructor",
      "id": 469
    }
  },
  {
    "id": 919,
    "name": "_defaultValue",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isProtected": true,
      "isExported": true,
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 79,
        "character": 27
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "string"
        },
        {
          "type": "reflection",
          "declaration": {
            "id": 920,
            "name": "__type",
            "kind": 65536,
            "kindString": "Type literal",
            "flags": {},
            "signatures": [
              {
                "id": 921,
                "name": "__call",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "reference",
                  "name": "Promise",
                  "typeArguments": [
                    {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  ]
                }
              }
            ],
            "sources": [
              {
                "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
                "line": 79,
                "character": 33
              }
            ]
          }
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field._defaultValue",
      "id": 42
    }
  },
  {
    "id": 916,
    "name": "choices",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true,
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 67,
        "character": 18
      }
    ],
    "type": {
      "type": "reference",
      "name": "Map",
      "typeArguments": [
        {
          "type": "intrinsic",
          "name": "string"
        },
        {
          "type": "intrinsic",
          "name": "string"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.choices",
      "id": 39
    }
  },
  {
    "id": 915,
    "name": "helpText",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true,
      "isOptional": true
    },
    "comment": {
      "shortText": "Help text that can be displayed with the form widget"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 61,
        "character": 19
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "undefined"
        },
        {
          "type": "intrinsic",
          "name": "string"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.helpText",
      "id": 38
    }
  },
  {
    "id": 914,
    "name": "label",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true,
      "isOptional": true
    },
    "comment": {
      "shortText": "Label that can be displayed as the form label for a widget",
      "text": "If not specified will be generated from `name`.\n"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 57,
        "character": 16
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "undefined"
        },
        {
          "type": "intrinsic",
          "name": "string"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.label",
      "id": 37
    }
  },
  {
    "id": 901,
    "name": "maxLength",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true,
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/CharField.ts",
        "line": 11,
        "character": 20
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "undefined"
        },
        {
          "type": "intrinsic",
          "name": "number"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "CharField.maxLength",
      "id": 468
    }
  },
  {
    "id": 917,
    "name": "readOnly",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "comment": {
      "shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 72,
        "character": 19
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "boolean"
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.readOnly",
      "id": 40
    }
  },
  {
    "id": 913,
    "name": "required",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "comment": {
      "shortText": "Is this field required when saving a record?"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 51,
        "character": 19
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "boolean"
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.required",
      "id": 36
    }
  },
  {
    "id": 918,
    "name": "writeOnly",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "comment": {
      "shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 77,
        "character": 20
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "boolean"
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.writeOnly",
      "id": 41
    }
  },
  {
    "id": 934,
    "name": "defaultValue",
    "kind": 262144,
    "kindString": "Accessor",
    "flags": {
      "isExported": true
    },
    "comment": {
      "shortText": "Get the default value for this field. Note that this returns a promise that resolve to the default value\nas some default values may need to resolve data from a backend."
    },
    "getSignature": [
      {
        "id": 935,
        "name": "__get",
        "kind": 524288,
        "kindString": "Get signature",
        "flags": {},
        "comment": {
          "shortText": "Get the default value for this field. Note that this returns a promise that resolve to the default value\nas some default values may need to resolve data from a backend."
        },
        "type": {
          "type": "reference",
          "name": "Promise",
          "typeArguments": [
            {
              "type": "union",
              "types": [
                {
                  "type": "intrinsic",
                  "name": "string"
                },
                {
                  "type": "intrinsic",
                  "name": "null"
                },
                {
                  "type": "intrinsic",
                  "name": "undefined"
                }
              ]
            }
          ]
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.defaultValue",
          "id": 60
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 192,
        "character": 20
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.defaultValue",
      "id": 60
    }
  },
  {
    "id": 909,
    "name": "name",
    "kind": 262144,
    "kindString": "Accessor",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "getSignature": [
      {
        "id": 912,
        "name": "__get",
        "kind": 524288,
        "kindString": "Get signature",
        "flags": {},
        "type": {
          "type": "intrinsic",
          "name": "string"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.name",
          "id": 32
        }
      }
    ],
    "setSignature": [
      {
        "id": 910,
        "name": "__set",
        "kind": 1048576,
        "kindString": "Set signature",
        "flags": {},
        "parameters": [
          {
            "id": 911,
            "name": "name",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "void"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.name",
          "id": 32
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 41,
        "character": 19
      },
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 44,
        "character": 19
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.name",
      "id": 32
    }
  },
  {
    "id": 905,
    "name": "parent",
    "kind": 262144,
    "kindString": "Accessor",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "getSignature": [
      {
        "id": 908,
        "name": "__get",
        "kind": 524288,
        "kindString": "Get signature",
        "flags": {},
        "type": {
          "type": "reference",
          "name": "FieldBinder",
          "id": 79
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.parent",
          "id": 27
        }
      }
    ],
    "setSignature": [
      {
        "id": 906,
        "name": "__set",
        "kind": 1048576,
        "kindString": "Set signature",
        "flags": {},
        "parameters": [
          {
            "id": 907,
            "name": "viewModel",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "name": "FieldBinder",
              "id": 79
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "void"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.parent",
          "id": 27
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 30,
        "character": 21
      },
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 33,
        "character": 21
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.parent",
      "id": 27
    }
  },
  {
    "id": 942,
    "name": "clone",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 943,
        "name": "clone",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Returns a clone of the field that should be functionally equivalent"
        },
        "type": {
          "type": "reference",
          "name": "Field",
          "id": 24,
          "typeArguments": [
            {
              "type": "intrinsic",
              "name": "string"
            }
          ]
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.clone",
          "id": 68
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 216,
        "character": 16
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.clone",
      "id": 68
    }
  },
  {
    "id": 922,
    "name": "format",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 923,
        "name": "format",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
        },
        "parameters": [
          {
            "id": 924,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "\n"
            },
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "any"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.format",
          "id": 48
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 137,
        "character": 17
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.format",
      "id": 48
    }
  },
  {
    "id": 938,
    "name": "isEqual",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 939,
        "name": "isEqual",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Should two values be considered equal?",
          "text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
        },
        "parameters": [
          {
            "id": 940,
            "name": "value1",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          },
          {
            "id": 941,
            "name": "value2",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.isEqual",
          "id": 64
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 209,
        "character": 18
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.isEqual",
      "id": 64
    }
  },
  {
    "id": 928,
    "name": "normalize",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 929,
        "name": "normalize",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
          "text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
        },
        "parameters": [
          {
            "id": 930,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "\n"
            },
            "type": {
              "type": "intrinsic",
              "name": "any"
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "string"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.normalize",
          "id": 54
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 175,
        "character": 20
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.normalize",
      "id": 54
    }
  },
  {
    "id": 925,
    "name": "parse",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 926,
        "name": "parse",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
        },
        "parameters": [
          {
            "id": 927,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "\n"
            },
            "type": {
              "type": "intrinsic",
              "name": "any"
            }
          }
        ],
        "type": {
          "type": "union",
          "types": [
            {
              "type": "intrinsic",
              "name": "string"
            },
            {
              "type": "intrinsic",
              "name": "null"
            }
          ]
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.parse",
          "id": 51
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 146,
        "character": 16
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.parse",
      "id": 51
    }
  },
  {
    "id": 931,
    "name": "toJS",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 932,
        "name": "toJS",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
        },
        "parameters": [
          {
            "id": 933,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "\n"
            },
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          }
        ],
        "type": {
          "type": "union",
          "types": [
            {
              "type": "intrinsic",
              "name": "string"
            },
            {
              "type": "intrinsic",
              "name": "number"
            },
            {
              "type": "intrinsic",
              "name": "null"
            },
            {
              "type": "reference",
              "name": "__type"
            }
          ]
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.toJS",
          "id": 57
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 184,
        "character": 8
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.toJS",
      "id": 57
    }
  },
  {
    "id": 936,
    "name": "toString",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 937,
        "name": "toString",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "type": {
          "type": "intrinsic",
          "name": "string"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.toString",
          "id": 62
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 199,
        "character": 12
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.toString",
      "id": 62
    }
  },
  {
    "id": 24,
    "name": "Field",
    "kind": 128,
    "kindString": "Class",
    "flags": {
      "isExported": true
    },
    "comment": {
      "shortText": "Base Field"
    },
    "typeParameter": [
      {
        "id": 25,
        "name": "T",
        "kind": 131072,
        "kindString": "Type parameter",
        "flags": {}
      }
    ],
    "groups": [
      {
        "title": "Constructors",
        "kind": 512,
        "children": [45]
      },
      {
        "title": "Properties",
        "kind": 1024,
        "children": [42, 31, 26, 39, 38, 37, 40, 36, 41]
      },
      {
        "title": "Accessors",
        "kind": 262144,
        "children": [60, 32, 27]
      },
      {
        "title": "Methods",
        "kind": 2048,
        "children": [68, 48, 64, 54, 51, 57, 62]
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 28,
        "character": 26
      }
    ],
    "extendedBy": [
      {
        "type": "reference",
        "name": "NumberField",
        "id": 101
      },
      {
        "type": "reference",
        "name": "NullableBooleanField",
        "id": 379
      },
      {
        "type": "reference",
        "name": "CharField",
        "id": 467
      },
      {
        "type": "reference",
        "name": "DateField",
        "id": 609
      },
      {
        "type": "reference",
        "name": "RangeField",
        "id": 669
      },
      {
        "type": "reference",
        "name": "DateTimeField",
        "id": 764
      },
      {
        "type": "reference",
        "name": "FileField",
        "id": 945
      },
      {
        "type": "reference",
        "name": "TimeField",
        "id": 1405
      }
    ],
    "childIds": [45, 42, 31, 26, 39, 38, 37, 40, 36, 41, 60, 32, 27, 68, 48, 64, 54, 51, 57, 62]
  },
  {
    "id": 45,
    "name": "constructor",
    "kind": 512,
    "kindString": "Constructor",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 46,
        "name": "new Field",
        "kind": 16384,
        "kindString": "Constructor signature",
        "flags": {},
        "parameters": [
          {
            "id": 47,
            "name": "values",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "name": "Props",
              "id": 4,
              "typeArguments": [
                {
                  "type": "typeParameter",
                  "name": "T"
                }
              ]
            },
            "defaultValue": " {}"
          }
        ],
        "type": {
          "type": "reference",
          "name": "Field",
          "id": 24
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 79,
        "character": 53
      }
    ]
  },
  {
    "id": 42,
    "name": "_defaultValue",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isProtected": true,
      "isExported": true,
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 79,
        "character": 27
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "typeParameter",
          "name": "T"
        },
        {
          "type": "reflection",
          "declaration": {
            "id": 43,
            "name": "__type",
            "kind": 65536,
            "kindString": "Type literal",
            "flags": {},
            "signatures": [
              {
                "id": 44,
                "name": "__call",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "reference",
                  "name": "Promise",
                  "typeArguments": [
                    {
                      "type": "typeParameter",
                      "name": "T"
                    }
                  ]
                }
              }
            ],
            "sources": [
              {
                "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
                "line": 79,
                "character": 33
              }
            ]
          }
        }
      ]
    }
  },
  {
    "id": 31,
    "name": "_name",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPrivate": true,
      "isExported": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 40,
        "character": 17
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "string"
    }
  },
  {
    "id": 26,
    "name": "_parent",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPrivate": true,
      "isExported": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 29,
        "character": 19
      }
    ],
    "type": {
      "type": "reference",
      "name": "FieldBinder",
      "id": 79
    }
  },
  {
    "id": 39,
    "name": "choices",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true,
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 67,
        "character": 18
      }
    ],
    "type": {
      "type": "reference",
      "name": "Map",
      "typeArguments": [
        {
          "type": "typeParameter",
          "name": "T"
        },
        {
          "type": "intrinsic",
          "name": "string"
        }
      ]
    }
  },
  {
    "id": 38,
    "name": "helpText",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true,
      "isOptional": true
    },
    "comment": {
      "shortText": "Help text that can be displayed with the form widget"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 61,
        "character": 19
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "undefined"
        },
        {
          "type": "intrinsic",
          "name": "string"
        }
      ]
    }
  },
  {
    "id": 37,
    "name": "label",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true,
      "isOptional": true
    },
    "comment": {
      "shortText": "Label that can be displayed as the form label for a widget",
      "text": "If not specified will be generated from `name`.\n"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 57,
        "character": 16
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "undefined"
        },
        {
          "type": "intrinsic",
          "name": "string"
        }
      ]
    }
  },
  {
    "id": 40,
    "name": "readOnly",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "comment": {
      "shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 72,
        "character": 19
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "boolean"
    }
  },
  {
    "id": 36,
    "name": "required",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "comment": {
      "shortText": "Is this field required when saving a record?"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 51,
        "character": 19
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "boolean"
    }
  },
  {
    "id": 41,
    "name": "writeOnly",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "comment": {
      "shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 77,
        "character": 20
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "boolean"
    }
  },
  {
    "id": 60,
    "name": "defaultValue",
    "kind": 262144,
    "kindString": "Accessor",
    "flags": {
      "isExported": true
    },
    "comment": {
      "shortText": "Get the default value for this field. Note that this returns a promise that resolve to the default value\nas some default values may need to resolve data from a backend."
    },
    "getSignature": [
      {
        "id": 61,
        "name": "__get",
        "kind": 524288,
        "kindString": "Get signature",
        "flags": {},
        "comment": {
          "shortText": "Get the default value for this field. Note that this returns a promise that resolve to the default value\nas some default values may need to resolve data from a backend."
        },
        "type": {
          "type": "reference",
          "name": "Promise",
          "typeArguments": [
            {
              "type": "union",
              "types": [
                {
                  "type": "typeParameter",
                  "name": "T"
                },
                {
                  "type": "intrinsic",
                  "name": "null"
                },
                {
                  "type": "intrinsic",
                  "name": "undefined"
                }
              ]
            }
          ]
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 192,
        "character": 20
      }
    ]
  },
  {
    "id": 32,
    "name": "name",
    "kind": 262144,
    "kindString": "Accessor",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "getSignature": [
      {
        "id": 35,
        "name": "__get",
        "kind": 524288,
        "kindString": "Get signature",
        "flags": {},
        "type": {
          "type": "intrinsic",
          "name": "string"
        }
      }
    ],
    "setSignature": [
      {
        "id": 33,
        "name": "__set",
        "kind": 1048576,
        "kindString": "Set signature",
        "flags": {},
        "parameters": [
          {
            "id": 34,
            "name": "name",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "void"
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 41,
        "character": 19
      },
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 44,
        "character": 19
      }
    ]
  },
  {
    "id": 27,
    "name": "parent",
    "kind": 262144,
    "kindString": "Accessor",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "getSignature": [
      {
        "id": 30,
        "name": "__get",
        "kind": 524288,
        "kindString": "Get signature",
        "flags": {},
        "type": {
          "type": "reference",
          "name": "FieldBinder",
          "id": 79
        }
      }
    ],
    "setSignature": [
      {
        "id": 28,
        "name": "__set",
        "kind": 1048576,
        "kindString": "Set signature",
        "flags": {},
        "parameters": [
          {
            "id": 29,
            "name": "viewModel",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "name": "FieldBinder",
              "id": 79
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "void"
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 30,
        "character": 21
      },
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 33,
        "character": 21
      }
    ]
  },
  {
    "id": 68,
    "name": "clone",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 69,
        "name": "clone",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Returns a clone of the field that should be functionally equivalent"
        },
        "type": {
          "type": "reference",
          "name": "Field",
          "id": 24,
          "typeArguments": [
            {
              "type": "typeParameter",
              "name": "T"
            }
          ]
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 216,
        "character": 16
      }
    ]
  },
  {
    "id": 48,
    "name": "format",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 49,
        "name": "format",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
        },
        "parameters": [
          {
            "id": 50,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "\n"
            },
            "type": {
              "type": "typeParameter",
              "name": "T"
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "any"
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 137,
        "character": 17
      }
    ]
  },
  {
    "id": 64,
    "name": "isEqual",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 65,
        "name": "isEqual",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Should two values be considered equal?",
          "text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
        },
        "parameters": [
          {
            "id": 66,
            "name": "value1",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "typeParameter",
              "name": "T"
            }
          },
          {
            "id": 67,
            "name": "value2",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "typeParameter",
              "name": "T"
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "boolean"
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 209,
        "character": 18
      }
    ]
  },
  {
    "id": 54,
    "name": "normalize",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 55,
        "name": "normalize",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
          "text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
        },
        "parameters": [
          {
            "id": 56,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "\n"
            },
            "type": {
              "type": "intrinsic",
              "name": "any"
            }
          }
        ],
        "type": {
          "type": "typeParameter",
          "name": "T"
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 175,
        "character": 20
      }
    ]
  },
  {
    "id": 51,
    "name": "parse",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 52,
        "name": "parse",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
        },
        "parameters": [
          {
            "id": 53,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "\n"
            },
            "type": {
              "type": "intrinsic",
              "name": "any"
            }
          }
        ],
        "type": {
          "type": "union",
          "types": [
            {
              "type": "typeParameter",
              "name": "T"
            },
            {
              "type": "intrinsic",
              "name": "null"
            }
          ]
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 146,
        "character": 16
      }
    ]
  },
  {
    "id": 57,
    "name": "toJS",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 58,
        "name": "toJS",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
        },
        "parameters": [
          {
            "id": 59,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "\n"
            },
            "type": {
              "type": "typeParameter",
              "name": "T"
            }
          }
        ],
        "type": {
          "type": "union",
          "types": [
            {
              "type": "intrinsic",
              "name": "string"
            },
            {
              "type": "intrinsic",
              "name": "number"
            },
            {
              "type": "intrinsic",
              "name": "null"
            },
            {
              "type": "reference",
              "name": "__type"
            }
          ]
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 184,
        "character": 8
      }
    ]
  },
  {
    "id": 62,
    "name": "toString",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 63,
        "name": "toString",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "type": {
          "type": "intrinsic",
          "name": "string"
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 199,
        "character": 12
      }
    ]
  },
  {
    "id": 79,
    "name": "FieldBinder",
    "kind": 128,
    "kindString": "Class",
    "flags": {
      "isExported": true,
      "isAbstract": true
    },
    "comment": {
      "shortText": "Class that contains field definitions that get bound to that class",
      "text": "On bind the following happens:\n- The field has it's `parent` property set to point to the containing class\n- The field has it's `name` property set to the name used on the containing class object definition\n- If label is not set it is generated from the name\n\nTo define fields on a class implementing this use `_fields`:\n\n```js\nclass UserFilterSet extends FieldBinder {\n    static _fields = {\n        name: new Field(),\n        emailAddress: new Field(),\n    }\n}\n```\n\nYou can then access the fields via the `fields` prop:\n\n```\nUserFilterSet.fields.email.name\n// 'emailAddress'\nUserFilterSet.fields.email.label\n// 'Email Address'\n```\n"
    },
    "groups": [
      {
        "title": "Properties",
        "kind": 1024,
        "children": [82, 81, 80]
      },
      {
        "title": "Accessors",
        "kind": 262144,
        "children": [89, 87]
      },
      {
        "title": "Methods",
        "kind": 2048,
        "children": [83]
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/FieldBinder.ts",
        "line": 46,
        "character": 41
      }
    ],
    "extendedBy": [
      {
        "type": "reference",
        "name": "ViewModel",
        "id": 309
      }
    ],
    "childIds": [82, 81, 80, 89, 87, 83]
  },
  {
    "id": 82,
    "name": "__boundFields",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isProtected": true,
      "isStatic": true,
      "isExported": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/FieldBinder.ts",
        "line": 65,
        "character": 34
      }
    ],
    "type": {
      "type": "reference",
      "name": "Map",
      "typeArguments": [
        {
          "type": "reference",
          "name": "FieldBinder",
          "id": 79
        },
        {
          "type": "reference",
          "name": "FieldsMapping",
          "id": 93
        }
      ]
    },
    "defaultValue": " new Map()"
  },
  {
    "id": 81,
    "name": "__fieldsCopy",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPrivate": true,
      "isStatic": true,
      "isExported": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/FieldBinder.ts",
        "line": 59,
        "character": 31
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "null"
        },
        {
          "type": "reference",
          "name": "FieldsMapping",
          "id": 93
        }
      ]
    },
    "defaultValue": " null"
  },
  {
    "id": 80,
    "name": "_fields",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isStatic": true,
      "isExported": true
    },
    "comment": {
      "shortText": "This should be a mapping from the field name to an instance of `Field`.",
      "text": "To access fields use `<model>.fields` which will return the field instance with a link back\nto the `parent` and it's `name` property set.\n"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/FieldBinder.ts",
        "line": 53,
        "character": 25
      }
    ],
    "type": {
      "type": "reference",
      "name": "FieldsMapping",
      "id": 93
    }
  },
  {
    "id": 89,
    "name": "fields",
    "kind": 262144,
    "kindString": "Accessor",
    "flags": {
      "isPublic": true,
      "isStatic": true,
      "isExported": true
    },
    "getSignature": [
      {
        "id": 92,
        "name": "__get",
        "kind": 524288,
        "kindString": "Get signature",
        "flags": {},
        "type": {
          "type": "reference",
          "name": "FieldsMapping",
          "id": 93
        }
      }
    ],
    "setSignature": [
      {
        "id": 90,
        "name": "__set",
        "kind": 1048576,
        "kindString": "Set signature",
        "flags": {},
        "parameters": [
          {
            "id": 91,
            "name": "fields",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "name": "FieldsMapping",
              "id": 93
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "void"
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/FieldBinder.ts",
        "line": 92,
        "character": 28
      },
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/FieldBinder.ts",
        "line": 96,
        "character": 28
      }
    ]
  },
  {
    "id": 87,
    "name": "unboundFields",
    "kind": 262144,
    "kindString": "Accessor",
    "flags": {
      "isPublic": true,
      "isStatic": true,
      "isExported": true
    },
    "comment": {
      "shortText": "Get the unbound fields. Use this instead of accessing _fields directly. Accessing _fields after binding\nresults in an error to avoid accidentally retrieving the unbound version when the intention was to retrieve\nthe bound versions from `fields`."
    },
    "getSignature": [
      {
        "id": 88,
        "name": "__get",
        "kind": 524288,
        "kindString": "Get signature",
        "flags": {},
        "comment": {
          "shortText": "Get the unbound fields. Use this instead of accessing _fields directly. Accessing _fields after binding\nresults in an error to avoid accidentally retrieving the unbound version when the intention was to retrieve\nthe bound versions from `fields`."
        },
        "type": {
          "type": "reference",
          "name": "FieldsMapping",
          "id": 93
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/FieldBinder.ts",
        "line": 85,
        "character": 35
      }
    ]
  },
  {
    "id": 83,
    "name": "bindFields",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isProtected": true,
      "isStatic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 84,
        "name": "bindFields",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "parameters": [
          {
            "id": 85,
            "name": "fields",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "name": "FieldsMapping",
              "id": 93
            }
          },
          {
            "id": 86,
            "name": "bindTo",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "name": "FieldBinder",
              "id": 79
            }
          }
        ],
        "type": {
          "type": "reference",
          "name": "FieldsMapping",
          "id": 93
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/FieldBinder.ts",
        "line": 67,
        "character": 31
      }
    ]
  },
  {
    "id": 945,
    "name": "FileField",
    "kind": 128,
    "kindString": "Class",
    "flags": {
      "isExported": true
    },
    "comment": {
      "shortText": "Base class for File fields",
      "text": "Used by ImageField.\n\n"
    },
    "groups": [
      {
        "title": "Constructors",
        "kind": 512,
        "children": [963]
      },
      {
        "title": "Properties",
        "kind": 1024,
        "children": [960, 957, 956, 955, 958, 954, 959]
      },
      {
        "title": "Accessors",
        "kind": 262144,
        "children": [978, 950, 946]
      },
      {
        "title": "Methods",
        "kind": 2048,
        "children": [986, 966, 982, 972, 969, 975, 980]
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/FileField.ts",
        "line": 9,
        "character": 30
      }
    ],
    "extendedTypes": [
      {
        "type": "reference",
        "name": "Field",
        "id": 24,
        "typeArguments": [
          {
            "type": "reference",
            "name": "File"
          }
        ]
      }
    ],
    "extendedBy": [
      {
        "type": "reference",
        "name": "ImageField",
        "id": 1082
      }
    ],
    "childIds": [
      963,
      960,
      957,
      956,
      955,
      958,
      954,
      959,
      978,
      950,
      946,
      986,
      966,
      982,
      972,
      969,
      975,
      980
    ]
  },
  {
    "id": 963,
    "name": "constructor",
    "kind": 512,
    "kindString": "Constructor",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 964,
        "name": "new FileField",
        "kind": 16384,
        "kindString": "Constructor signature",
        "flags": {},
        "parameters": [
          {
            "id": 965,
            "name": "values",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "name": "Props",
              "id": 4,
              "typeArguments": [
                {
                  "type": "reference",
                  "name": "File"
                }
              ]
            },
            "defaultValue": " {}"
          }
        ],
        "type": {
          "type": "reference",
          "name": "FileField",
          "id": 945
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.__constructor",
          "id": 45
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 79,
        "character": 53
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.__constructor",
      "id": 45
    }
  },
  {
    "id": 960,
    "name": "_defaultValue",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isProtected": true,
      "isExported": true,
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 79,
        "character": 27
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "reference",
          "name": "File"
        },
        {
          "type": "reflection",
          "declaration": {
            "id": 961,
            "name": "__type",
            "kind": 65536,
            "kindString": "Type literal",
            "flags": {},
            "signatures": [
              {
                "id": 962,
                "name": "__call",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "reference",
                  "name": "Promise",
                  "typeArguments": [
                    {
                      "type": "reference",
                      "name": "File"
                    }
                  ]
                }
              }
            ],
            "sources": [
              {
                "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
                "line": 79,
                "character": 33
              }
            ]
          }
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field._defaultValue",
      "id": 42
    }
  },
  {
    "id": 957,
    "name": "choices",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true,
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 67,
        "character": 18
      }
    ],
    "type": {
      "type": "reference",
      "name": "Map",
      "typeArguments": [
        {
          "type": "reference",
          "name": "File"
        },
        {
          "type": "intrinsic",
          "name": "string"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.choices",
      "id": 39
    }
  },
  {
    "id": 956,
    "name": "helpText",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true,
      "isOptional": true
    },
    "comment": {
      "shortText": "Help text that can be displayed with the form widget"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 61,
        "character": 19
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "undefined"
        },
        {
          "type": "intrinsic",
          "name": "string"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.helpText",
      "id": 38
    }
  },
  {
    "id": 955,
    "name": "label",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true,
      "isOptional": true
    },
    "comment": {
      "shortText": "Label that can be displayed as the form label for a widget",
      "text": "If not specified will be generated from `name`.\n"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 57,
        "character": 16
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "undefined"
        },
        {
          "type": "intrinsic",
          "name": "string"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.label",
      "id": 37
    }
  },
  {
    "id": 958,
    "name": "readOnly",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "comment": {
      "shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 72,
        "character": 19
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "boolean"
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.readOnly",
      "id": 40
    }
  },
  {
    "id": 954,
    "name": "required",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "comment": {
      "shortText": "Is this field required when saving a record?"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 51,
        "character": 19
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "boolean"
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.required",
      "id": 36
    }
  },
  {
    "id": 959,
    "name": "writeOnly",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "comment": {
      "shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 77,
        "character": 20
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "boolean"
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.writeOnly",
      "id": 41
    }
  },
  {
    "id": 978,
    "name": "defaultValue",
    "kind": 262144,
    "kindString": "Accessor",
    "flags": {
      "isExported": true
    },
    "comment": {
      "shortText": "Get the default value for this field. Note that this returns a promise that resolve to the default value\nas some default values may need to resolve data from a backend."
    },
    "getSignature": [
      {
        "id": 979,
        "name": "__get",
        "kind": 524288,
        "kindString": "Get signature",
        "flags": {},
        "comment": {
          "shortText": "Get the default value for this field. Note that this returns a promise that resolve to the default value\nas some default values may need to resolve data from a backend."
        },
        "type": {
          "type": "reference",
          "name": "Promise",
          "typeArguments": [
            {
              "type": "union",
              "types": [
                {
                  "type": "reference",
                  "name": "File"
                },
                {
                  "type": "intrinsic",
                  "name": "null"
                },
                {
                  "type": "intrinsic",
                  "name": "undefined"
                }
              ]
            }
          ]
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.defaultValue",
          "id": 60
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 192,
        "character": 20
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.defaultValue",
      "id": 60
    }
  },
  {
    "id": 950,
    "name": "name",
    "kind": 262144,
    "kindString": "Accessor",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "getSignature": [
      {
        "id": 953,
        "name": "__get",
        "kind": 524288,
        "kindString": "Get signature",
        "flags": {},
        "type": {
          "type": "intrinsic",
          "name": "string"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.name",
          "id": 32
        }
      }
    ],
    "setSignature": [
      {
        "id": 951,
        "name": "__set",
        "kind": 1048576,
        "kindString": "Set signature",
        "flags": {},
        "parameters": [
          {
            "id": 952,
            "name": "name",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "void"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.name",
          "id": 32
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 41,
        "character": 19
      },
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 44,
        "character": 19
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.name",
      "id": 32
    }
  },
  {
    "id": 946,
    "name": "parent",
    "kind": 262144,
    "kindString": "Accessor",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "getSignature": [
      {
        "id": 949,
        "name": "__get",
        "kind": 524288,
        "kindString": "Get signature",
        "flags": {},
        "type": {
          "type": "reference",
          "name": "FieldBinder",
          "id": 79
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.parent",
          "id": 27
        }
      }
    ],
    "setSignature": [
      {
        "id": 947,
        "name": "__set",
        "kind": 1048576,
        "kindString": "Set signature",
        "flags": {},
        "parameters": [
          {
            "id": 948,
            "name": "viewModel",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "name": "FieldBinder",
              "id": 79
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "void"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.parent",
          "id": 27
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 30,
        "character": 21
      },
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 33,
        "character": 21
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.parent",
      "id": 27
    }
  },
  {
    "id": 986,
    "name": "clone",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 987,
        "name": "clone",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Returns a clone of the field that should be functionally equivalent"
        },
        "type": {
          "type": "reference",
          "name": "Field",
          "id": 24,
          "typeArguments": [
            {
              "type": "reference",
              "name": "File"
            }
          ]
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.clone",
          "id": 68
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 216,
        "character": 16
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.clone",
      "id": 68
    }
  },
  {
    "id": 966,
    "name": "format",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 967,
        "name": "format",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
        },
        "parameters": [
          {
            "id": 968,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "\n"
            },
            "type": {
              "type": "reference",
              "name": "File"
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "any"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.format",
          "id": 48
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 137,
        "character": 17
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.format",
      "id": 48
    }
  },
  {
    "id": 982,
    "name": "isEqual",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 983,
        "name": "isEqual",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Should two values be considered equal?",
          "text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
        },
        "parameters": [
          {
            "id": 984,
            "name": "value1",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "name": "File"
            }
          },
          {
            "id": 985,
            "name": "value2",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "name": "File"
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.isEqual",
          "id": 64
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 209,
        "character": 18
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.isEqual",
      "id": 64
    }
  },
  {
    "id": 972,
    "name": "normalize",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 973,
        "name": "normalize",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
          "text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
        },
        "parameters": [
          {
            "id": 974,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "\n"
            },
            "type": {
              "type": "intrinsic",
              "name": "any"
            }
          }
        ],
        "type": {
          "type": "reference",
          "name": "File"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.normalize",
          "id": 54
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 175,
        "character": 20
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.normalize",
      "id": 54
    }
  },
  {
    "id": 969,
    "name": "parse",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 970,
        "name": "parse",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
        },
        "parameters": [
          {
            "id": 971,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "\n"
            },
            "type": {
              "type": "intrinsic",
              "name": "any"
            }
          }
        ],
        "type": {
          "type": "union",
          "types": [
            {
              "type": "reference",
              "name": "File"
            },
            {
              "type": "intrinsic",
              "name": "null"
            }
          ]
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.parse",
          "id": 51
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 146,
        "character": 16
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.parse",
      "id": 51
    }
  },
  {
    "id": 975,
    "name": "toJS",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 976,
        "name": "toJS",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
        },
        "parameters": [
          {
            "id": 977,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "\n"
            },
            "type": {
              "type": "reference",
              "name": "File"
            }
          }
        ],
        "type": {
          "type": "union",
          "types": [
            {
              "type": "intrinsic",
              "name": "string"
            },
            {
              "type": "intrinsic",
              "name": "number"
            },
            {
              "type": "intrinsic",
              "name": "null"
            },
            {
              "type": "reference",
              "name": "__type"
            }
          ]
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.toJS",
          "id": 57
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 184,
        "character": 8
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.toJS",
      "id": 57
    }
  },
  {
    "id": 980,
    "name": "toString",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 981,
        "name": "toString",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "type": {
          "type": "intrinsic",
          "name": "string"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.toString",
          "id": 62
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 199,
        "character": 12
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.toString",
      "id": 62
    }
  },
  {
    "id": 989,
    "name": "FloatField",
    "kind": 128,
    "kindString": "Class",
    "flags": {
      "isExported": true
    },
    "comment": {
      "shortText": "Float Field.",
      "text": "Use only if stored number is tolerant on precision error.\n\nSee also: DecimalField\n"
    },
    "groups": [
      {
        "title": "Constructors",
        "kind": 512,
        "children": [995]
      },
      {
        "title": "Properties",
        "kind": 1024,
        "children": [1012, 1009, 1008, 1007, 994, 993, 1010, 1006, 1011]
      },
      {
        "title": "Accessors",
        "kind": 262144,
        "children": [1024, 1002, 998]
      },
      {
        "title": "Methods",
        "kind": 2048,
        "children": [1032, 1015, 1028, 1018, 990, 1021, 1026]
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/FloatField.ts",
        "line": 10,
        "character": 31
      }
    ],
    "extendedTypes": [
      {
        "type": "reference",
        "name": "NumberField",
        "id": 101,
        "typeArguments": [
          {
            "type": "intrinsic",
            "name": "number"
          }
        ]
      }
    ],
    "childIds": [
      995,
      1012,
      1009,
      1008,
      1007,
      994,
      993,
      1010,
      1006,
      1011,
      1024,
      1002,
      998,
      1032,
      1015,
      1028,
      1018,
      990,
      1021,
      1026
    ]
  },
  {
    "id": 995,
    "name": "constructor",
    "kind": 512,
    "kindString": "Constructor",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 996,
        "name": "new FloatField",
        "kind": 16384,
        "kindString": "Constructor signature",
        "flags": {},
        "parameters": [
          {
            "id": 997,
            "name": "values",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "name": "NumberFieldProps",
              "id": 147
            },
            "defaultValue": " {}"
          }
        ],
        "type": {
          "type": "reference",
          "name": "FloatField",
          "id": 989
        },
        "overwrites": {
          "type": "reference",
          "name": "Field.__constructor",
          "id": 45
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "NumberField.__constructor",
          "id": 105
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/NumberField.ts",
        "line": 16,
        "character": 29
      }
    ],
    "overwrites": {
      "type": "reference",
      "name": "Field.__constructor",
      "id": 45
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "NumberField.__constructor",
      "id": 105
    }
  },
  {
    "id": 1012,
    "name": "_defaultValue",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isProtected": true,
      "isExported": true,
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 79,
        "character": 27
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "union",
          "types": [
            {
              "type": "intrinsic",
              "name": "string"
            },
            {
              "type": "intrinsic",
              "name": "number"
            }
          ]
        },
        {
          "type": "reflection",
          "declaration": {
            "id": 1013,
            "name": "__type",
            "kind": 65536,
            "kindString": "Type literal",
            "flags": {},
            "signatures": [
              {
                "id": 1014,
                "name": "__call",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "reference",
                  "name": "Promise",
                  "typeArguments": [
                    {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "string"
                        },
                        {
                          "type": "intrinsic",
                          "name": "number"
                        }
                      ]
                    }
                  ]
                }
              }
            ],
            "sources": [
              {
                "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
                "line": 79,
                "character": 33
              }
            ]
          }
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field._defaultValue",
      "id": 42
    }
  },
  {
    "id": 1009,
    "name": "choices",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true,
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 67,
        "character": 18
      }
    ],
    "type": {
      "type": "reference",
      "name": "Map",
      "typeArguments": [
        {
          "type": "union",
          "types": [
            {
              "type": "intrinsic",
              "name": "string"
            },
            {
              "type": "intrinsic",
              "name": "number"
            }
          ]
        },
        {
          "type": "intrinsic",
          "name": "string"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.choices",
      "id": 39
    }
  },
  {
    "id": 1008,
    "name": "helpText",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true,
      "isOptional": true
    },
    "comment": {
      "shortText": "Help text that can be displayed with the form widget"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 61,
        "character": 19
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "undefined"
        },
        {
          "type": "intrinsic",
          "name": "string"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.helpText",
      "id": 38
    }
  },
  {
    "id": 1007,
    "name": "label",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true,
      "isOptional": true
    },
    "comment": {
      "shortText": "Label that can be displayed as the form label for a widget",
      "text": "If not specified will be generated from `name`.\n"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 57,
        "character": 16
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "undefined"
        },
        {
          "type": "intrinsic",
          "name": "string"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.label",
      "id": 37
    }
  },
  {
    "id": 994,
    "name": "maxValue",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true,
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/NumberField.ts",
        "line": 16,
        "character": 19
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "undefined"
        },
        {
          "type": "intrinsic",
          "name": "number"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "NumberField.maxValue",
      "id": 104
    }
  },
  {
    "id": 993,
    "name": "minValue",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true,
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/NumberField.ts",
        "line": 15,
        "character": 19
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "undefined"
        },
        {
          "type": "intrinsic",
          "name": "number"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "NumberField.minValue",
      "id": 103
    }
  },
  {
    "id": 1010,
    "name": "readOnly",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "comment": {
      "shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 72,
        "character": 19
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "boolean"
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.readOnly",
      "id": 40
    }
  },
  {
    "id": 1006,
    "name": "required",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "comment": {
      "shortText": "Is this field required when saving a record?"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 51,
        "character": 19
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "boolean"
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.required",
      "id": 36
    }
  },
  {
    "id": 1011,
    "name": "writeOnly",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "comment": {
      "shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 77,
        "character": 20
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "boolean"
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.writeOnly",
      "id": 41
    }
  },
  {
    "id": 1024,
    "name": "defaultValue",
    "kind": 262144,
    "kindString": "Accessor",
    "flags": {
      "isExported": true
    },
    "comment": {
      "shortText": "Get the default value for this field. Note that this returns a promise that resolve to the default value\nas some default values may need to resolve data from a backend."
    },
    "getSignature": [
      {
        "id": 1025,
        "name": "__get",
        "kind": 524288,
        "kindString": "Get signature",
        "flags": {},
        "comment": {
          "shortText": "Get the default value for this field. Note that this returns a promise that resolve to the default value\nas some default values may need to resolve data from a backend."
        },
        "type": {
          "type": "reference",
          "name": "Promise",
          "typeArguments": [
            {
              "type": "union",
              "types": [
                {
                  "type": "union",
                  "types": [
                    {
                      "type": "intrinsic",
                      "name": "string"
                    },
                    {
                      "type": "intrinsic",
                      "name": "number"
                    }
                  ]
                },
                {
                  "type": "intrinsic",
                  "name": "null"
                },
                {
                  "type": "intrinsic",
                  "name": "undefined"
                }
              ]
            }
          ]
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.defaultValue",
          "id": 60
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 192,
        "character": 20
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.defaultValue",
      "id": 60
    }
  },
  {
    "id": 1002,
    "name": "name",
    "kind": 262144,
    "kindString": "Accessor",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "getSignature": [
      {
        "id": 1005,
        "name": "__get",
        "kind": 524288,
        "kindString": "Get signature",
        "flags": {},
        "type": {
          "type": "intrinsic",
          "name": "string"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.name",
          "id": 32
        }
      }
    ],
    "setSignature": [
      {
        "id": 1003,
        "name": "__set",
        "kind": 1048576,
        "kindString": "Set signature",
        "flags": {},
        "parameters": [
          {
            "id": 1004,
            "name": "name",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "void"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.name",
          "id": 32
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 41,
        "character": 19
      },
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 44,
        "character": 19
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.name",
      "id": 32
    }
  },
  {
    "id": 998,
    "name": "parent",
    "kind": 262144,
    "kindString": "Accessor",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "getSignature": [
      {
        "id": 1001,
        "name": "__get",
        "kind": 524288,
        "kindString": "Get signature",
        "flags": {},
        "type": {
          "type": "reference",
          "name": "FieldBinder",
          "id": 79
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.parent",
          "id": 27
        }
      }
    ],
    "setSignature": [
      {
        "id": 999,
        "name": "__set",
        "kind": 1048576,
        "kindString": "Set signature",
        "flags": {},
        "parameters": [
          {
            "id": 1000,
            "name": "viewModel",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "name": "FieldBinder",
              "id": 79
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "void"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.parent",
          "id": 27
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 30,
        "character": 21
      },
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 33,
        "character": 21
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.parent",
      "id": 27
    }
  },
  {
    "id": 1032,
    "name": "clone",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 1033,
        "name": "clone",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Returns a clone of the field that should be functionally equivalent"
        },
        "type": {
          "type": "reference",
          "name": "Field",
          "id": 24,
          "typeArguments": [
            {
              "type": "union",
              "types": [
                {
                  "type": "intrinsic",
                  "name": "string"
                },
                {
                  "type": "intrinsic",
                  "name": "number"
                }
              ]
            }
          ]
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.clone",
          "id": 68
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 216,
        "character": 16
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.clone",
      "id": 68
    }
  },
  {
    "id": 1015,
    "name": "format",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 1016,
        "name": "format",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
        },
        "parameters": [
          {
            "id": 1017,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "\n"
            },
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "intrinsic",
                  "name": "string"
                },
                {
                  "type": "intrinsic",
                  "name": "number"
                }
              ]
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "any"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.format",
          "id": 48
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 137,
        "character": 17
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.format",
      "id": 48
    }
  },
  {
    "id": 1028,
    "name": "isEqual",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 1029,
        "name": "isEqual",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Should two values be considered equal?",
          "text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
        },
        "parameters": [
          {
            "id": 1030,
            "name": "value1",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "intrinsic",
                  "name": "string"
                },
                {
                  "type": "intrinsic",
                  "name": "number"
                }
              ]
            }
          },
          {
            "id": 1031,
            "name": "value2",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "intrinsic",
                  "name": "string"
                },
                {
                  "type": "intrinsic",
                  "name": "number"
                }
              ]
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.isEqual",
          "id": 64
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 209,
        "character": 18
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.isEqual",
      "id": 64
    }
  },
  {
    "id": 1018,
    "name": "normalize",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 1019,
        "name": "normalize",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
          "text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
        },
        "parameters": [
          {
            "id": 1020,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "\n"
            },
            "type": {
              "type": "intrinsic",
              "name": "any"
            }
          }
        ],
        "type": {
          "type": "union",
          "types": [
            {
              "type": "intrinsic",
              "name": "string"
            },
            {
              "type": "intrinsic",
              "name": "number"
            }
          ]
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.normalize",
          "id": 54
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 175,
        "character": 20
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.normalize",
      "id": 54
    }
  },
  {
    "id": 990,
    "name": "parse",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 991,
        "name": "parse",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "parameters": [
          {
            "id": 992,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "intrinsic",
              "name": "any"
            }
          }
        ],
        "type": {
          "type": "union",
          "types": [
            {
              "type": "intrinsic",
              "name": "number"
            },
            {
              "type": "intrinsic",
              "name": "null"
            }
          ]
        },
        "overwrites": {
          "type": "reference",
          "name": "Field.parse",
          "id": 51
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/FloatField.ts",
        "line": 11,
        "character": 9
      }
    ],
    "overwrites": {
      "type": "reference",
      "name": "Field.parse",
      "id": 51
    }
  },
  {
    "id": 1021,
    "name": "toJS",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 1022,
        "name": "toJS",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
        },
        "parameters": [
          {
            "id": 1023,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "\n"
            },
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "intrinsic",
                  "name": "string"
                },
                {
                  "type": "intrinsic",
                  "name": "number"
                }
              ]
            }
          }
        ],
        "type": {
          "type": "union",
          "types": [
            {
              "type": "intrinsic",
              "name": "string"
            },
            {
              "type": "intrinsic",
              "name": "number"
            },
            {
              "type": "intrinsic",
              "name": "null"
            },
            {
              "type": "reference",
              "name": "__type"
            }
          ]
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.toJS",
          "id": 57
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 184,
        "character": 8
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.toJS",
      "id": 57
    }
  },
  {
    "id": 1026,
    "name": "toString",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 1027,
        "name": "toString",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "type": {
          "type": "intrinsic",
          "name": "string"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.toString",
          "id": 62
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 199,
        "character": 12
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.toString",
      "id": 62
    }
  },
  {
    "id": 1035,
    "name": "FloatRangeField",
    "kind": 128,
    "kindString": "Class",
    "flags": {
      "isExported": true
    },
    "groups": [
      {
        "title": "Constructors",
        "kind": 512,
        "children": [1039]
      },
      {
        "title": "Properties",
        "kind": 1024,
        "children": [1056, 1053, 1052, 1051, 1036, 1054, 1050, 1038, 1037, 1055]
      },
      {
        "title": "Accessors",
        "kind": 262144,
        "children": [1071, 1046, 1042]
      },
      {
        "title": "Methods",
        "kind": 2048,
        "children": [1079, 1059, 1075, 1065, 1062, 1068, 1073]
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/FloatRangeField.ts",
        "line": 3,
        "character": 36
      }
    ],
    "extendedTypes": [
      {
        "type": "reference",
        "name": "RangeField",
        "id": 669,
        "typeArguments": [
          {
            "type": "intrinsic",
            "name": "number"
          }
        ]
      }
    ],
    "childIds": [
      1039,
      1056,
      1053,
      1052,
      1051,
      1036,
      1054,
      1050,
      1038,
      1037,
      1055,
      1071,
      1046,
      1042,
      1079,
      1059,
      1075,
      1065,
      1062,
      1068,
      1073
    ]
  },
  {
    "id": 1039,
    "name": "constructor",
    "kind": 512,
    "kindString": "Constructor",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 1040,
        "name": "new FloatRangeField",
        "kind": 16384,
        "kindString": "Constructor signature",
        "flags": {},
        "parameters": [
          {
            "id": 1041,
            "name": "values",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "name": "Boundary",
              "id": 653,
              "typeArguments": [
                {
                  "type": "intrinsic",
                  "name": "number"
                }
              ]
            }
          }
        ],
        "type": {
          "type": "reference",
          "name": "FloatRangeField",
          "id": 1035
        },
        "overwrites": {
          "type": "reference",
          "name": "Field.__constructor",
          "id": 45
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "RangeField.__constructor",
          "id": 674
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/RangeField.ts",
        "line": 21,
        "character": 29
      }
    ],
    "overwrites": {
      "type": "reference",
      "name": "Field.__constructor",
      "id": 45
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "RangeField.__constructor",
      "id": 674
    }
  },
  {
    "id": 1056,
    "name": "_defaultValue",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isProtected": true,
      "isExported": true,
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 79,
        "character": 27
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "number"
        },
        {
          "type": "reflection",
          "declaration": {
            "id": 1057,
            "name": "__type",
            "kind": 65536,
            "kindString": "Type literal",
            "flags": {},
            "signatures": [
              {
                "id": 1058,
                "name": "__call",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "reference",
                  "name": "Promise",
                  "typeArguments": [
                    {
                      "type": "intrinsic",
                      "name": "number"
                    }
                  ]
                }
              }
            ],
            "sources": [
              {
                "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
                "line": 79,
                "character": 33
              }
            ]
          }
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field._defaultValue",
      "id": 42
    }
  },
  {
    "id": 1053,
    "name": "choices",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true,
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 67,
        "character": 18
      }
    ],
    "type": {
      "type": "reference",
      "name": "Map",
      "typeArguments": [
        {
          "type": "intrinsic",
          "name": "number"
        },
        {
          "type": "intrinsic",
          "name": "string"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.choices",
      "id": 39
    }
  },
  {
    "id": 1052,
    "name": "helpText",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true,
      "isOptional": true
    },
    "comment": {
      "shortText": "Help text that can be displayed with the form widget"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 61,
        "character": 19
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "undefined"
        },
        {
          "type": "intrinsic",
          "name": "string"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.helpText",
      "id": 38
    }
  },
  {
    "id": 1051,
    "name": "label",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true,
      "isOptional": true
    },
    "comment": {
      "shortText": "Label that can be displayed as the form label for a widget",
      "text": "If not specified will be generated from `name`.\n"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 57,
        "character": 16
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "undefined"
        },
        {
          "type": "intrinsic",
          "name": "string"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.label",
      "id": 37
    }
  },
  {
    "id": 1036,
    "name": "lowerBound",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/RangeField.ts",
        "line": 19,
        "character": 21
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "number"
        },
        {
          "type": "intrinsic",
          "name": "null"
        },
        {
          "type": "intrinsic",
          "name": "undefined"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "RangeField.lowerBound",
      "id": 671
    }
  },
  {
    "id": 1054,
    "name": "readOnly",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "comment": {
      "shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 72,
        "character": 19
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "boolean"
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.readOnly",
      "id": 40
    }
  },
  {
    "id": 1050,
    "name": "required",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "comment": {
      "shortText": "Is this field required when saving a record?"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 51,
        "character": 19
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "boolean"
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.required",
      "id": 36
    }
  },
  {
    "id": 1038,
    "name": "separator",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/RangeField.ts",
        "line": 21,
        "character": 20
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "string"
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "RangeField.separator",
      "id": 673
    }
  },
  {
    "id": 1037,
    "name": "upperBound",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/RangeField.ts",
        "line": 20,
        "character": 21
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "number"
        },
        {
          "type": "intrinsic",
          "name": "null"
        },
        {
          "type": "intrinsic",
          "name": "undefined"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "RangeField.upperBound",
      "id": 672
    }
  },
  {
    "id": 1055,
    "name": "writeOnly",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "comment": {
      "shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 77,
        "character": 20
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "boolean"
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.writeOnly",
      "id": 41
    }
  },
  {
    "id": 1071,
    "name": "defaultValue",
    "kind": 262144,
    "kindString": "Accessor",
    "flags": {
      "isExported": true
    },
    "comment": {
      "shortText": "Get the default value for this field. Note that this returns a promise that resolve to the default value\nas some default values may need to resolve data from a backend."
    },
    "getSignature": [
      {
        "id": 1072,
        "name": "__get",
        "kind": 524288,
        "kindString": "Get signature",
        "flags": {},
        "comment": {
          "shortText": "Get the default value for this field. Note that this returns a promise that resolve to the default value\nas some default values may need to resolve data from a backend."
        },
        "type": {
          "type": "reference",
          "name": "Promise",
          "typeArguments": [
            {
              "type": "union",
              "types": [
                {
                  "type": "intrinsic",
                  "name": "number"
                },
                {
                  "type": "intrinsic",
                  "name": "null"
                },
                {
                  "type": "intrinsic",
                  "name": "undefined"
                }
              ]
            }
          ]
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.defaultValue",
          "id": 60
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 192,
        "character": 20
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.defaultValue",
      "id": 60
    }
  },
  {
    "id": 1046,
    "name": "name",
    "kind": 262144,
    "kindString": "Accessor",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "getSignature": [
      {
        "id": 1049,
        "name": "__get",
        "kind": 524288,
        "kindString": "Get signature",
        "flags": {},
        "type": {
          "type": "intrinsic",
          "name": "string"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.name",
          "id": 32
        }
      }
    ],
    "setSignature": [
      {
        "id": 1047,
        "name": "__set",
        "kind": 1048576,
        "kindString": "Set signature",
        "flags": {},
        "parameters": [
          {
            "id": 1048,
            "name": "name",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "void"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.name",
          "id": 32
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 41,
        "character": 19
      },
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 44,
        "character": 19
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.name",
      "id": 32
    }
  },
  {
    "id": 1042,
    "name": "parent",
    "kind": 262144,
    "kindString": "Accessor",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "getSignature": [
      {
        "id": 1045,
        "name": "__get",
        "kind": 524288,
        "kindString": "Get signature",
        "flags": {},
        "type": {
          "type": "reference",
          "name": "FieldBinder",
          "id": 79
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.parent",
          "id": 27
        }
      }
    ],
    "setSignature": [
      {
        "id": 1043,
        "name": "__set",
        "kind": 1048576,
        "kindString": "Set signature",
        "flags": {},
        "parameters": [
          {
            "id": 1044,
            "name": "viewModel",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "name": "FieldBinder",
              "id": 79
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "void"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.parent",
          "id": 27
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 30,
        "character": 21
      },
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 33,
        "character": 21
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.parent",
      "id": 27
    }
  },
  {
    "id": 1079,
    "name": "clone",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 1080,
        "name": "clone",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Returns a clone of the field that should be functionally equivalent"
        },
        "type": {
          "type": "reference",
          "name": "Field",
          "id": 24,
          "typeArguments": [
            {
              "type": "intrinsic",
              "name": "number"
            }
          ]
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.clone",
          "id": 68
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 216,
        "character": 16
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.clone",
      "id": 68
    }
  },
  {
    "id": 1059,
    "name": "format",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 1060,
        "name": "format",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
        },
        "parameters": [
          {
            "id": 1061,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "\n"
            },
            "type": {
              "type": "intrinsic",
              "name": "number"
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "any"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.format",
          "id": 48
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 137,
        "character": 17
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.format",
      "id": 48
    }
  },
  {
    "id": 1075,
    "name": "isEqual",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 1076,
        "name": "isEqual",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Should two values be considered equal?",
          "text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
        },
        "parameters": [
          {
            "id": 1077,
            "name": "value1",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "intrinsic",
              "name": "number"
            }
          },
          {
            "id": 1078,
            "name": "value2",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "intrinsic",
              "name": "number"
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.isEqual",
          "id": 64
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 209,
        "character": 18
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.isEqual",
      "id": 64
    }
  },
  {
    "id": 1065,
    "name": "normalize",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 1066,
        "name": "normalize",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
          "text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
        },
        "parameters": [
          {
            "id": 1067,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "\n"
            },
            "type": {
              "type": "intrinsic",
              "name": "any"
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "number"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.normalize",
          "id": 54
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 175,
        "character": 20
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.normalize",
      "id": 54
    }
  },
  {
    "id": 1062,
    "name": "parse",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 1063,
        "name": "parse",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
        },
        "parameters": [
          {
            "id": 1064,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "\n"
            },
            "type": {
              "type": "intrinsic",
              "name": "any"
            }
          }
        ],
        "type": {
          "type": "union",
          "types": [
            {
              "type": "intrinsic",
              "name": "number"
            },
            {
              "type": "intrinsic",
              "name": "null"
            }
          ]
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.parse",
          "id": 51
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 146,
        "character": 16
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.parse",
      "id": 51
    }
  },
  {
    "id": 1068,
    "name": "toJS",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 1069,
        "name": "toJS",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
        },
        "parameters": [
          {
            "id": 1070,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "\n"
            },
            "type": {
              "type": "intrinsic",
              "name": "number"
            }
          }
        ],
        "type": {
          "type": "union",
          "types": [
            {
              "type": "intrinsic",
              "name": "string"
            },
            {
              "type": "intrinsic",
              "name": "number"
            },
            {
              "type": "intrinsic",
              "name": "null"
            },
            {
              "type": "reference",
              "name": "__type"
            }
          ]
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.toJS",
          "id": 57
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 184,
        "character": 8
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.toJS",
      "id": 57
    }
  },
  {
    "id": 1073,
    "name": "toString",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 1074,
        "name": "toString",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "type": {
          "type": "intrinsic",
          "name": "string"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.toString",
          "id": 62
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 199,
        "character": 12
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.toString",
      "id": 62
    }
  },
  {
    "id": 1219,
    "name": "IPAddressField",
    "kind": 128,
    "kindString": "Class",
    "flags": {
      "isExported": true
    },
    "groups": [
      {
        "title": "Constructors",
        "kind": 512,
        "children": [1221]
      },
      {
        "title": "Properties",
        "kind": 1024,
        "children": [1238, 1235, 1234, 1233, 1220, 1236, 1232, 1237]
      },
      {
        "title": "Accessors",
        "kind": 262144,
        "children": [1253, 1228, 1224]
      },
      {
        "title": "Methods",
        "kind": 2048,
        "children": [1261, 1241, 1257, 1247, 1244, 1250, 1255]
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/IPAddressField.ts",
        "line": 3,
        "character": 35
      }
    ],
    "extendedTypes": [
      {
        "type": "reference",
        "name": "CharField",
        "id": 467
      }
    ],
    "childIds": [
      1221,
      1238,
      1235,
      1234,
      1233,
      1220,
      1236,
      1232,
      1237,
      1253,
      1228,
      1224,
      1261,
      1241,
      1257,
      1247,
      1244,
      1250,
      1255
    ]
  },
  {
    "id": 1221,
    "name": "constructor",
    "kind": 512,
    "kindString": "Constructor",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 1222,
        "name": "new IPAddressField",
        "kind": 16384,
        "kindString": "Constructor signature",
        "flags": {},
        "parameters": [
          {
            "id": 1223,
            "name": "values",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "name": "CharFieldProps",
              "id": 511
            },
            "defaultValue": " {}"
          }
        ],
        "type": {
          "type": "reference",
          "name": "IPAddressField",
          "id": 1219
        },
        "overwrites": {
          "type": "reference",
          "name": "Field.__constructor",
          "id": 45
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "CharField.__constructor",
          "id": 469
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/CharField.ts",
        "line": 11,
        "character": 30
      }
    ],
    "overwrites": {
      "type": "reference",
      "name": "Field.__constructor",
      "id": 45
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "CharField.__constructor",
      "id": 469
    }
  },
  {
    "id": 1238,
    "name": "_defaultValue",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isProtected": true,
      "isExported": true,
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 79,
        "character": 27
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "string"
        },
        {
          "type": "reflection",
          "declaration": {
            "id": 1239,
            "name": "__type",
            "kind": 65536,
            "kindString": "Type literal",
            "flags": {},
            "signatures": [
              {
                "id": 1240,
                "name": "__call",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "reference",
                  "name": "Promise",
                  "typeArguments": [
                    {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  ]
                }
              }
            ],
            "sources": [
              {
                "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
                "line": 79,
                "character": 33
              }
            ]
          }
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field._defaultValue",
      "id": 42
    }
  },
  {
    "id": 1235,
    "name": "choices",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true,
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 67,
        "character": 18
      }
    ],
    "type": {
      "type": "reference",
      "name": "Map",
      "typeArguments": [
        {
          "type": "intrinsic",
          "name": "string"
        },
        {
          "type": "intrinsic",
          "name": "string"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.choices",
      "id": 39
    }
  },
  {
    "id": 1234,
    "name": "helpText",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true,
      "isOptional": true
    },
    "comment": {
      "shortText": "Help text that can be displayed with the form widget"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 61,
        "character": 19
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "undefined"
        },
        {
          "type": "intrinsic",
          "name": "string"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.helpText",
      "id": 38
    }
  },
  {
    "id": 1233,
    "name": "label",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true,
      "isOptional": true
    },
    "comment": {
      "shortText": "Label that can be displayed as the form label for a widget",
      "text": "If not specified will be generated from `name`.\n"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 57,
        "character": 16
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "undefined"
        },
        {
          "type": "intrinsic",
          "name": "string"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.label",
      "id": 37
    }
  },
  {
    "id": 1220,
    "name": "maxLength",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true,
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/CharField.ts",
        "line": 11,
        "character": 20
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "undefined"
        },
        {
          "type": "intrinsic",
          "name": "number"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "CharField.maxLength",
      "id": 468
    }
  },
  {
    "id": 1236,
    "name": "readOnly",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "comment": {
      "shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 72,
        "character": 19
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "boolean"
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.readOnly",
      "id": 40
    }
  },
  {
    "id": 1232,
    "name": "required",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "comment": {
      "shortText": "Is this field required when saving a record?"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 51,
        "character": 19
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "boolean"
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.required",
      "id": 36
    }
  },
  {
    "id": 1237,
    "name": "writeOnly",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "comment": {
      "shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 77,
        "character": 20
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "boolean"
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.writeOnly",
      "id": 41
    }
  },
  {
    "id": 1253,
    "name": "defaultValue",
    "kind": 262144,
    "kindString": "Accessor",
    "flags": {
      "isExported": true
    },
    "comment": {
      "shortText": "Get the default value for this field. Note that this returns a promise that resolve to the default value\nas some default values may need to resolve data from a backend."
    },
    "getSignature": [
      {
        "id": 1254,
        "name": "__get",
        "kind": 524288,
        "kindString": "Get signature",
        "flags": {},
        "comment": {
          "shortText": "Get the default value for this field. Note that this returns a promise that resolve to the default value\nas some default values may need to resolve data from a backend."
        },
        "type": {
          "type": "reference",
          "name": "Promise",
          "typeArguments": [
            {
              "type": "union",
              "types": [
                {
                  "type": "intrinsic",
                  "name": "string"
                },
                {
                  "type": "intrinsic",
                  "name": "null"
                },
                {
                  "type": "intrinsic",
                  "name": "undefined"
                }
              ]
            }
          ]
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.defaultValue",
          "id": 60
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 192,
        "character": 20
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.defaultValue",
      "id": 60
    }
  },
  {
    "id": 1228,
    "name": "name",
    "kind": 262144,
    "kindString": "Accessor",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "getSignature": [
      {
        "id": 1231,
        "name": "__get",
        "kind": 524288,
        "kindString": "Get signature",
        "flags": {},
        "type": {
          "type": "intrinsic",
          "name": "string"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.name",
          "id": 32
        }
      }
    ],
    "setSignature": [
      {
        "id": 1229,
        "name": "__set",
        "kind": 1048576,
        "kindString": "Set signature",
        "flags": {},
        "parameters": [
          {
            "id": 1230,
            "name": "name",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "void"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.name",
          "id": 32
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 41,
        "character": 19
      },
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 44,
        "character": 19
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.name",
      "id": 32
    }
  },
  {
    "id": 1224,
    "name": "parent",
    "kind": 262144,
    "kindString": "Accessor",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "getSignature": [
      {
        "id": 1227,
        "name": "__get",
        "kind": 524288,
        "kindString": "Get signature",
        "flags": {},
        "type": {
          "type": "reference",
          "name": "FieldBinder",
          "id": 79
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.parent",
          "id": 27
        }
      }
    ],
    "setSignature": [
      {
        "id": 1225,
        "name": "__set",
        "kind": 1048576,
        "kindString": "Set signature",
        "flags": {},
        "parameters": [
          {
            "id": 1226,
            "name": "viewModel",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "name": "FieldBinder",
              "id": 79
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "void"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.parent",
          "id": 27
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 30,
        "character": 21
      },
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 33,
        "character": 21
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.parent",
      "id": 27
    }
  },
  {
    "id": 1261,
    "name": "clone",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 1262,
        "name": "clone",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Returns a clone of the field that should be functionally equivalent"
        },
        "type": {
          "type": "reference",
          "name": "Field",
          "id": 24,
          "typeArguments": [
            {
              "type": "intrinsic",
              "name": "string"
            }
          ]
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.clone",
          "id": 68
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 216,
        "character": 16
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.clone",
      "id": 68
    }
  },
  {
    "id": 1241,
    "name": "format",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 1242,
        "name": "format",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
        },
        "parameters": [
          {
            "id": 1243,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "\n"
            },
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "any"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.format",
          "id": 48
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 137,
        "character": 17
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.format",
      "id": 48
    }
  },
  {
    "id": 1257,
    "name": "isEqual",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 1258,
        "name": "isEqual",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Should two values be considered equal?",
          "text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
        },
        "parameters": [
          {
            "id": 1259,
            "name": "value1",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          },
          {
            "id": 1260,
            "name": "value2",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.isEqual",
          "id": 64
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 209,
        "character": 18
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.isEqual",
      "id": 64
    }
  },
  {
    "id": 1247,
    "name": "normalize",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 1248,
        "name": "normalize",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
          "text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
        },
        "parameters": [
          {
            "id": 1249,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "\n"
            },
            "type": {
              "type": "intrinsic",
              "name": "any"
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "string"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.normalize",
          "id": 54
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 175,
        "character": 20
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.normalize",
      "id": 54
    }
  },
  {
    "id": 1244,
    "name": "parse",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 1245,
        "name": "parse",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
        },
        "parameters": [
          {
            "id": 1246,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "\n"
            },
            "type": {
              "type": "intrinsic",
              "name": "any"
            }
          }
        ],
        "type": {
          "type": "union",
          "types": [
            {
              "type": "intrinsic",
              "name": "string"
            },
            {
              "type": "intrinsic",
              "name": "null"
            }
          ]
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.parse",
          "id": 51
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 146,
        "character": 16
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.parse",
      "id": 51
    }
  },
  {
    "id": 1250,
    "name": "toJS",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 1251,
        "name": "toJS",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
        },
        "parameters": [
          {
            "id": 1252,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "\n"
            },
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          }
        ],
        "type": {
          "type": "union",
          "types": [
            {
              "type": "intrinsic",
              "name": "string"
            },
            {
              "type": "intrinsic",
              "name": "number"
            },
            {
              "type": "intrinsic",
              "name": "null"
            },
            {
              "type": "reference",
              "name": "__type"
            }
          ]
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.toJS",
          "id": 57
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 184,
        "character": 8
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.toJS",
      "id": 57
    }
  },
  {
    "id": 1255,
    "name": "toString",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 1256,
        "name": "toString",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "type": {
          "type": "intrinsic",
          "name": "string"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.toString",
          "id": 62
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 199,
        "character": 12
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.toString",
      "id": 62
    }
  },
  {
    "id": 1082,
    "name": "ImageField",
    "kind": 128,
    "kindString": "Class",
    "flags": {
      "isExported": true
    },
    "comment": {
      "shortText": "Image field.",
      "text": "ImageField is an exact match of FileField, however the representation (format/widget) will be different.\n"
    },
    "groups": [
      {
        "title": "Constructors",
        "kind": 512,
        "children": [1100]
      },
      {
        "title": "Properties",
        "kind": 1024,
        "children": [1097, 1094, 1093, 1092, 1095, 1091, 1096]
      },
      {
        "title": "Accessors",
        "kind": 262144,
        "children": [1115, 1087, 1083]
      },
      {
        "title": "Methods",
        "kind": 2048,
        "children": [1123, 1103, 1119, 1109, 1106, 1112, 1117]
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/ImageField.ts",
        "line": 8,
        "character": 31
      }
    ],
    "extendedTypes": [
      {
        "type": "reference",
        "name": "FileField",
        "id": 945
      }
    ],
    "childIds": [
      1100,
      1097,
      1094,
      1093,
      1092,
      1095,
      1091,
      1096,
      1115,
      1087,
      1083,
      1123,
      1103,
      1119,
      1109,
      1106,
      1112,
      1117
    ]
  },
  {
    "id": 1100,
    "name": "constructor",
    "kind": 512,
    "kindString": "Constructor",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 1101,
        "name": "new ImageField",
        "kind": 16384,
        "kindString": "Constructor signature",
        "flags": {},
        "parameters": [
          {
            "id": 1102,
            "name": "values",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "name": "Props",
              "id": 4,
              "typeArguments": [
                {
                  "type": "reference",
                  "name": "File"
                }
              ]
            },
            "defaultValue": " {}"
          }
        ],
        "type": {
          "type": "reference",
          "name": "ImageField",
          "id": 1082
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.__constructor",
          "id": 45
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 79,
        "character": 53
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.__constructor",
      "id": 45
    }
  },
  {
    "id": 1097,
    "name": "_defaultValue",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isProtected": true,
      "isExported": true,
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 79,
        "character": 27
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "reference",
          "name": "File"
        },
        {
          "type": "reflection",
          "declaration": {
            "id": 1098,
            "name": "__type",
            "kind": 65536,
            "kindString": "Type literal",
            "flags": {},
            "signatures": [
              {
                "id": 1099,
                "name": "__call",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "reference",
                  "name": "Promise",
                  "typeArguments": [
                    {
                      "type": "reference",
                      "name": "File"
                    }
                  ]
                }
              }
            ],
            "sources": [
              {
                "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
                "line": 79,
                "character": 33
              }
            ]
          }
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field._defaultValue",
      "id": 42
    }
  },
  {
    "id": 1094,
    "name": "choices",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true,
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 67,
        "character": 18
      }
    ],
    "type": {
      "type": "reference",
      "name": "Map",
      "typeArguments": [
        {
          "type": "reference",
          "name": "File"
        },
        {
          "type": "intrinsic",
          "name": "string"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.choices",
      "id": 39
    }
  },
  {
    "id": 1093,
    "name": "helpText",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true,
      "isOptional": true
    },
    "comment": {
      "shortText": "Help text that can be displayed with the form widget"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 61,
        "character": 19
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "undefined"
        },
        {
          "type": "intrinsic",
          "name": "string"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.helpText",
      "id": 38
    }
  },
  {
    "id": 1092,
    "name": "label",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true,
      "isOptional": true
    },
    "comment": {
      "shortText": "Label that can be displayed as the form label for a widget",
      "text": "If not specified will be generated from `name`.\n"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 57,
        "character": 16
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "undefined"
        },
        {
          "type": "intrinsic",
          "name": "string"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.label",
      "id": 37
    }
  },
  {
    "id": 1095,
    "name": "readOnly",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "comment": {
      "shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 72,
        "character": 19
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "boolean"
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.readOnly",
      "id": 40
    }
  },
  {
    "id": 1091,
    "name": "required",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "comment": {
      "shortText": "Is this field required when saving a record?"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 51,
        "character": 19
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "boolean"
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.required",
      "id": 36
    }
  },
  {
    "id": 1096,
    "name": "writeOnly",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "comment": {
      "shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 77,
        "character": 20
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "boolean"
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.writeOnly",
      "id": 41
    }
  },
  {
    "id": 1115,
    "name": "defaultValue",
    "kind": 262144,
    "kindString": "Accessor",
    "flags": {
      "isExported": true
    },
    "comment": {
      "shortText": "Get the default value for this field. Note that this returns a promise that resolve to the default value\nas some default values may need to resolve data from a backend."
    },
    "getSignature": [
      {
        "id": 1116,
        "name": "__get",
        "kind": 524288,
        "kindString": "Get signature",
        "flags": {},
        "comment": {
          "shortText": "Get the default value for this field. Note that this returns a promise that resolve to the default value\nas some default values may need to resolve data from a backend."
        },
        "type": {
          "type": "reference",
          "name": "Promise",
          "typeArguments": [
            {
              "type": "union",
              "types": [
                {
                  "type": "reference",
                  "name": "File"
                },
                {
                  "type": "intrinsic",
                  "name": "null"
                },
                {
                  "type": "intrinsic",
                  "name": "undefined"
                }
              ]
            }
          ]
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.defaultValue",
          "id": 60
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 192,
        "character": 20
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.defaultValue",
      "id": 60
    }
  },
  {
    "id": 1087,
    "name": "name",
    "kind": 262144,
    "kindString": "Accessor",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "getSignature": [
      {
        "id": 1090,
        "name": "__get",
        "kind": 524288,
        "kindString": "Get signature",
        "flags": {},
        "type": {
          "type": "intrinsic",
          "name": "string"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.name",
          "id": 32
        }
      }
    ],
    "setSignature": [
      {
        "id": 1088,
        "name": "__set",
        "kind": 1048576,
        "kindString": "Set signature",
        "flags": {},
        "parameters": [
          {
            "id": 1089,
            "name": "name",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "void"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.name",
          "id": 32
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 41,
        "character": 19
      },
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 44,
        "character": 19
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.name",
      "id": 32
    }
  },
  {
    "id": 1083,
    "name": "parent",
    "kind": 262144,
    "kindString": "Accessor",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "getSignature": [
      {
        "id": 1086,
        "name": "__get",
        "kind": 524288,
        "kindString": "Get signature",
        "flags": {},
        "type": {
          "type": "reference",
          "name": "FieldBinder",
          "id": 79
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.parent",
          "id": 27
        }
      }
    ],
    "setSignature": [
      {
        "id": 1084,
        "name": "__set",
        "kind": 1048576,
        "kindString": "Set signature",
        "flags": {},
        "parameters": [
          {
            "id": 1085,
            "name": "viewModel",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "name": "FieldBinder",
              "id": 79
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "void"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.parent",
          "id": 27
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 30,
        "character": 21
      },
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 33,
        "character": 21
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.parent",
      "id": 27
    }
  },
  {
    "id": 1123,
    "name": "clone",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 1124,
        "name": "clone",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Returns a clone of the field that should be functionally equivalent"
        },
        "type": {
          "type": "reference",
          "name": "Field",
          "id": 24,
          "typeArguments": [
            {
              "type": "reference",
              "name": "File"
            }
          ]
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.clone",
          "id": 68
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 216,
        "character": 16
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.clone",
      "id": 68
    }
  },
  {
    "id": 1103,
    "name": "format",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 1104,
        "name": "format",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
        },
        "parameters": [
          {
            "id": 1105,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "\n"
            },
            "type": {
              "type": "reference",
              "name": "File"
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "any"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.format",
          "id": 48
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 137,
        "character": 17
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.format",
      "id": 48
    }
  },
  {
    "id": 1119,
    "name": "isEqual",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 1120,
        "name": "isEqual",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Should two values be considered equal?",
          "text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
        },
        "parameters": [
          {
            "id": 1121,
            "name": "value1",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "name": "File"
            }
          },
          {
            "id": 1122,
            "name": "value2",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "name": "File"
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.isEqual",
          "id": 64
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 209,
        "character": 18
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.isEqual",
      "id": 64
    }
  },
  {
    "id": 1109,
    "name": "normalize",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 1110,
        "name": "normalize",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
          "text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
        },
        "parameters": [
          {
            "id": 1111,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "\n"
            },
            "type": {
              "type": "intrinsic",
              "name": "any"
            }
          }
        ],
        "type": {
          "type": "reference",
          "name": "File"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.normalize",
          "id": 54
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 175,
        "character": 20
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.normalize",
      "id": 54
    }
  },
  {
    "id": 1106,
    "name": "parse",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 1107,
        "name": "parse",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
        },
        "parameters": [
          {
            "id": 1108,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "\n"
            },
            "type": {
              "type": "intrinsic",
              "name": "any"
            }
          }
        ],
        "type": {
          "type": "union",
          "types": [
            {
              "type": "reference",
              "name": "File"
            },
            {
              "type": "intrinsic",
              "name": "null"
            }
          ]
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.parse",
          "id": 51
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 146,
        "character": 16
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.parse",
      "id": 51
    }
  },
  {
    "id": 1112,
    "name": "toJS",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 1113,
        "name": "toJS",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
        },
        "parameters": [
          {
            "id": 1114,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "\n"
            },
            "type": {
              "type": "reference",
              "name": "File"
            }
          }
        ],
        "type": {
          "type": "union",
          "types": [
            {
              "type": "intrinsic",
              "name": "string"
            },
            {
              "type": "intrinsic",
              "name": "number"
            },
            {
              "type": "intrinsic",
              "name": "null"
            },
            {
              "type": "reference",
              "name": "__type"
            }
          ]
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.toJS",
          "id": 57
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 184,
        "character": 8
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.toJS",
      "id": 57
    }
  },
  {
    "id": 1117,
    "name": "toString",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 1118,
        "name": "toString",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "type": {
          "type": "intrinsic",
          "name": "string"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.toString",
          "id": 62
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 199,
        "character": 12
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.toString",
      "id": 62
    }
  },
  {
    "id": 1126,
    "name": "IntegerField",
    "kind": 128,
    "kindString": "Class",
    "flags": {
      "isExported": true
    },
    "groups": [
      {
        "title": "Constructors",
        "kind": 512,
        "children": [1132]
      },
      {
        "title": "Properties",
        "kind": 1024,
        "children": [1149, 1146, 1145, 1144, 1131, 1130, 1147, 1143, 1148]
      },
      {
        "title": "Accessors",
        "kind": 262144,
        "children": [1161, 1139, 1135]
      },
      {
        "title": "Methods",
        "kind": 2048,
        "children": [1169, 1152, 1165, 1155, 1127, 1158, 1163]
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/IntegerField.ts",
        "line": 3,
        "character": 33
      }
    ],
    "extendedTypes": [
      {
        "type": "reference",
        "name": "NumberField",
        "id": 101,
        "typeArguments": [
          {
            "type": "intrinsic",
            "name": "number"
          }
        ]
      }
    ],
    "childIds": [
      1132,
      1149,
      1146,
      1145,
      1144,
      1131,
      1130,
      1147,
      1143,
      1148,
      1161,
      1139,
      1135,
      1169,
      1152,
      1165,
      1155,
      1127,
      1158,
      1163
    ]
  },
  {
    "id": 1132,
    "name": "constructor",
    "kind": 512,
    "kindString": "Constructor",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 1133,
        "name": "new IntegerField",
        "kind": 16384,
        "kindString": "Constructor signature",
        "flags": {},
        "parameters": [
          {
            "id": 1134,
            "name": "values",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "name": "NumberFieldProps",
              "id": 147
            },
            "defaultValue": " {}"
          }
        ],
        "type": {
          "type": "reference",
          "name": "IntegerField",
          "id": 1126
        },
        "overwrites": {
          "type": "reference",
          "name": "Field.__constructor",
          "id": 45
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "NumberField.__constructor",
          "id": 105
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/NumberField.ts",
        "line": 16,
        "character": 29
      }
    ],
    "overwrites": {
      "type": "reference",
      "name": "Field.__constructor",
      "id": 45
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "NumberField.__constructor",
      "id": 105
    }
  },
  {
    "id": 1149,
    "name": "_defaultValue",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isProtected": true,
      "isExported": true,
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 79,
        "character": 27
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "union",
          "types": [
            {
              "type": "intrinsic",
              "name": "string"
            },
            {
              "type": "intrinsic",
              "name": "number"
            }
          ]
        },
        {
          "type": "reflection",
          "declaration": {
            "id": 1150,
            "name": "__type",
            "kind": 65536,
            "kindString": "Type literal",
            "flags": {},
            "signatures": [
              {
                "id": 1151,
                "name": "__call",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "reference",
                  "name": "Promise",
                  "typeArguments": [
                    {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "string"
                        },
                        {
                          "type": "intrinsic",
                          "name": "number"
                        }
                      ]
                    }
                  ]
                }
              }
            ],
            "sources": [
              {
                "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
                "line": 79,
                "character": 33
              }
            ]
          }
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field._defaultValue",
      "id": 42
    }
  },
  {
    "id": 1146,
    "name": "choices",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true,
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 67,
        "character": 18
      }
    ],
    "type": {
      "type": "reference",
      "name": "Map",
      "typeArguments": [
        {
          "type": "union",
          "types": [
            {
              "type": "intrinsic",
              "name": "string"
            },
            {
              "type": "intrinsic",
              "name": "number"
            }
          ]
        },
        {
          "type": "intrinsic",
          "name": "string"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.choices",
      "id": 39
    }
  },
  {
    "id": 1145,
    "name": "helpText",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true,
      "isOptional": true
    },
    "comment": {
      "shortText": "Help text that can be displayed with the form widget"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 61,
        "character": 19
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "undefined"
        },
        {
          "type": "intrinsic",
          "name": "string"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.helpText",
      "id": 38
    }
  },
  {
    "id": 1144,
    "name": "label",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true,
      "isOptional": true
    },
    "comment": {
      "shortText": "Label that can be displayed as the form label for a widget",
      "text": "If not specified will be generated from `name`.\n"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 57,
        "character": 16
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "undefined"
        },
        {
          "type": "intrinsic",
          "name": "string"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.label",
      "id": 37
    }
  },
  {
    "id": 1131,
    "name": "maxValue",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true,
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/NumberField.ts",
        "line": 16,
        "character": 19
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "undefined"
        },
        {
          "type": "intrinsic",
          "name": "number"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "NumberField.maxValue",
      "id": 104
    }
  },
  {
    "id": 1130,
    "name": "minValue",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true,
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/NumberField.ts",
        "line": 15,
        "character": 19
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "undefined"
        },
        {
          "type": "intrinsic",
          "name": "number"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "NumberField.minValue",
      "id": 103
    }
  },
  {
    "id": 1147,
    "name": "readOnly",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "comment": {
      "shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 72,
        "character": 19
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "boolean"
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.readOnly",
      "id": 40
    }
  },
  {
    "id": 1143,
    "name": "required",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "comment": {
      "shortText": "Is this field required when saving a record?"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 51,
        "character": 19
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "boolean"
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.required",
      "id": 36
    }
  },
  {
    "id": 1148,
    "name": "writeOnly",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "comment": {
      "shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 77,
        "character": 20
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "boolean"
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.writeOnly",
      "id": 41
    }
  },
  {
    "id": 1161,
    "name": "defaultValue",
    "kind": 262144,
    "kindString": "Accessor",
    "flags": {
      "isExported": true
    },
    "comment": {
      "shortText": "Get the default value for this field. Note that this returns a promise that resolve to the default value\nas some default values may need to resolve data from a backend."
    },
    "getSignature": [
      {
        "id": 1162,
        "name": "__get",
        "kind": 524288,
        "kindString": "Get signature",
        "flags": {},
        "comment": {
          "shortText": "Get the default value for this field. Note that this returns a promise that resolve to the default value\nas some default values may need to resolve data from a backend."
        },
        "type": {
          "type": "reference",
          "name": "Promise",
          "typeArguments": [
            {
              "type": "union",
              "types": [
                {
                  "type": "union",
                  "types": [
                    {
                      "type": "intrinsic",
                      "name": "string"
                    },
                    {
                      "type": "intrinsic",
                      "name": "number"
                    }
                  ]
                },
                {
                  "type": "intrinsic",
                  "name": "null"
                },
                {
                  "type": "intrinsic",
                  "name": "undefined"
                }
              ]
            }
          ]
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.defaultValue",
          "id": 60
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 192,
        "character": 20
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.defaultValue",
      "id": 60
    }
  },
  {
    "id": 1139,
    "name": "name",
    "kind": 262144,
    "kindString": "Accessor",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "getSignature": [
      {
        "id": 1142,
        "name": "__get",
        "kind": 524288,
        "kindString": "Get signature",
        "flags": {},
        "type": {
          "type": "intrinsic",
          "name": "string"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.name",
          "id": 32
        }
      }
    ],
    "setSignature": [
      {
        "id": 1140,
        "name": "__set",
        "kind": 1048576,
        "kindString": "Set signature",
        "flags": {},
        "parameters": [
          {
            "id": 1141,
            "name": "name",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "void"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.name",
          "id": 32
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 41,
        "character": 19
      },
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 44,
        "character": 19
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.name",
      "id": 32
    }
  },
  {
    "id": 1135,
    "name": "parent",
    "kind": 262144,
    "kindString": "Accessor",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "getSignature": [
      {
        "id": 1138,
        "name": "__get",
        "kind": 524288,
        "kindString": "Get signature",
        "flags": {},
        "type": {
          "type": "reference",
          "name": "FieldBinder",
          "id": 79
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.parent",
          "id": 27
        }
      }
    ],
    "setSignature": [
      {
        "id": 1136,
        "name": "__set",
        "kind": 1048576,
        "kindString": "Set signature",
        "flags": {},
        "parameters": [
          {
            "id": 1137,
            "name": "viewModel",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "name": "FieldBinder",
              "id": 79
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "void"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.parent",
          "id": 27
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 30,
        "character": 21
      },
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 33,
        "character": 21
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.parent",
      "id": 27
    }
  },
  {
    "id": 1169,
    "name": "clone",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 1170,
        "name": "clone",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Returns a clone of the field that should be functionally equivalent"
        },
        "type": {
          "type": "reference",
          "name": "Field",
          "id": 24,
          "typeArguments": [
            {
              "type": "union",
              "types": [
                {
                  "type": "intrinsic",
                  "name": "string"
                },
                {
                  "type": "intrinsic",
                  "name": "number"
                }
              ]
            }
          ]
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.clone",
          "id": 68
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 216,
        "character": 16
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.clone",
      "id": 68
    }
  },
  {
    "id": 1152,
    "name": "format",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 1153,
        "name": "format",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
        },
        "parameters": [
          {
            "id": 1154,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "\n"
            },
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "intrinsic",
                  "name": "string"
                },
                {
                  "type": "intrinsic",
                  "name": "number"
                }
              ]
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "any"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.format",
          "id": 48
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 137,
        "character": 17
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.format",
      "id": 48
    }
  },
  {
    "id": 1165,
    "name": "isEqual",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 1166,
        "name": "isEqual",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Should two values be considered equal?",
          "text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
        },
        "parameters": [
          {
            "id": 1167,
            "name": "value1",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "intrinsic",
                  "name": "string"
                },
                {
                  "type": "intrinsic",
                  "name": "number"
                }
              ]
            }
          },
          {
            "id": 1168,
            "name": "value2",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "intrinsic",
                  "name": "string"
                },
                {
                  "type": "intrinsic",
                  "name": "number"
                }
              ]
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.isEqual",
          "id": 64
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 209,
        "character": 18
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.isEqual",
      "id": 64
    }
  },
  {
    "id": 1155,
    "name": "normalize",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 1156,
        "name": "normalize",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
          "text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
        },
        "parameters": [
          {
            "id": 1157,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "\n"
            },
            "type": {
              "type": "intrinsic",
              "name": "any"
            }
          }
        ],
        "type": {
          "type": "union",
          "types": [
            {
              "type": "intrinsic",
              "name": "string"
            },
            {
              "type": "intrinsic",
              "name": "number"
            }
          ]
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.normalize",
          "id": 54
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 175,
        "character": 20
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.normalize",
      "id": 54
    }
  },
  {
    "id": 1127,
    "name": "parse",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 1128,
        "name": "parse",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "parameters": [
          {
            "id": 1129,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "intrinsic",
              "name": "any"
            }
          }
        ],
        "type": {
          "type": "union",
          "types": [
            {
              "type": "intrinsic",
              "name": "number"
            },
            {
              "type": "intrinsic",
              "name": "null"
            }
          ]
        },
        "overwrites": {
          "type": "reference",
          "name": "Field.parse",
          "id": 51
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/IntegerField.ts",
        "line": 4,
        "character": 9
      }
    ],
    "overwrites": {
      "type": "reference",
      "name": "Field.parse",
      "id": 51
    }
  },
  {
    "id": 1158,
    "name": "toJS",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 1159,
        "name": "toJS",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
        },
        "parameters": [
          {
            "id": 1160,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "\n"
            },
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "intrinsic",
                  "name": "string"
                },
                {
                  "type": "intrinsic",
                  "name": "number"
                }
              ]
            }
          }
        ],
        "type": {
          "type": "union",
          "types": [
            {
              "type": "intrinsic",
              "name": "string"
            },
            {
              "type": "intrinsic",
              "name": "number"
            },
            {
              "type": "intrinsic",
              "name": "null"
            },
            {
              "type": "reference",
              "name": "__type"
            }
          ]
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.toJS",
          "id": 57
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 184,
        "character": 8
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.toJS",
      "id": 57
    }
  },
  {
    "id": 1163,
    "name": "toString",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 1164,
        "name": "toString",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "type": {
          "type": "intrinsic",
          "name": "string"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.toString",
          "id": 62
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 199,
        "character": 12
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.toString",
      "id": 62
    }
  },
  {
    "id": 1172,
    "name": "IntegerRangeField",
    "kind": 128,
    "kindString": "Class",
    "flags": {
      "isExported": true
    },
    "groups": [
      {
        "title": "Constructors",
        "kind": 512,
        "children": [1176]
      },
      {
        "title": "Properties",
        "kind": 1024,
        "children": [1193, 1190, 1189, 1188, 1173, 1191, 1187, 1175, 1174, 1192]
      },
      {
        "title": "Accessors",
        "kind": 262144,
        "children": [1208, 1183, 1179]
      },
      {
        "title": "Methods",
        "kind": 2048,
        "children": [1216, 1196, 1212, 1202, 1199, 1205, 1210]
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/IntegerRangeField.ts",
        "line": 3,
        "character": 38
      }
    ],
    "extendedTypes": [
      {
        "type": "reference",
        "name": "RangeField",
        "id": 669,
        "typeArguments": [
          {
            "type": "intrinsic",
            "name": "number"
          }
        ]
      }
    ],
    "childIds": [
      1176,
      1193,
      1190,
      1189,
      1188,
      1173,
      1191,
      1187,
      1175,
      1174,
      1192,
      1208,
      1183,
      1179,
      1216,
      1196,
      1212,
      1202,
      1199,
      1205,
      1210
    ]
  },
  {
    "id": 1176,
    "name": "constructor",
    "kind": 512,
    "kindString": "Constructor",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 1177,
        "name": "new IntegerRangeField",
        "kind": 16384,
        "kindString": "Constructor signature",
        "flags": {},
        "parameters": [
          {
            "id": 1178,
            "name": "values",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "name": "Boundary",
              "id": 653,
              "typeArguments": [
                {
                  "type": "intrinsic",
                  "name": "number"
                }
              ]
            }
          }
        ],
        "type": {
          "type": "reference",
          "name": "IntegerRangeField",
          "id": 1172
        },
        "overwrites": {
          "type": "reference",
          "name": "Field.__constructor",
          "id": 45
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "RangeField.__constructor",
          "id": 674
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/RangeField.ts",
        "line": 21,
        "character": 29
      }
    ],
    "overwrites": {
      "type": "reference",
      "name": "Field.__constructor",
      "id": 45
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "RangeField.__constructor",
      "id": 674
    }
  },
  {
    "id": 1193,
    "name": "_defaultValue",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isProtected": true,
      "isExported": true,
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 79,
        "character": 27
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "number"
        },
        {
          "type": "reflection",
          "declaration": {
            "id": 1194,
            "name": "__type",
            "kind": 65536,
            "kindString": "Type literal",
            "flags": {},
            "signatures": [
              {
                "id": 1195,
                "name": "__call",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "reference",
                  "name": "Promise",
                  "typeArguments": [
                    {
                      "type": "intrinsic",
                      "name": "number"
                    }
                  ]
                }
              }
            ],
            "sources": [
              {
                "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
                "line": 79,
                "character": 33
              }
            ]
          }
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field._defaultValue",
      "id": 42
    }
  },
  {
    "id": 1190,
    "name": "choices",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true,
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 67,
        "character": 18
      }
    ],
    "type": {
      "type": "reference",
      "name": "Map",
      "typeArguments": [
        {
          "type": "intrinsic",
          "name": "number"
        },
        {
          "type": "intrinsic",
          "name": "string"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.choices",
      "id": 39
    }
  },
  {
    "id": 1189,
    "name": "helpText",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true,
      "isOptional": true
    },
    "comment": {
      "shortText": "Help text that can be displayed with the form widget"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 61,
        "character": 19
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "undefined"
        },
        {
          "type": "intrinsic",
          "name": "string"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.helpText",
      "id": 38
    }
  },
  {
    "id": 1188,
    "name": "label",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true,
      "isOptional": true
    },
    "comment": {
      "shortText": "Label that can be displayed as the form label for a widget",
      "text": "If not specified will be generated from `name`.\n"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 57,
        "character": 16
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "undefined"
        },
        {
          "type": "intrinsic",
          "name": "string"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.label",
      "id": 37
    }
  },
  {
    "id": 1173,
    "name": "lowerBound",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/RangeField.ts",
        "line": 19,
        "character": 21
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "number"
        },
        {
          "type": "intrinsic",
          "name": "null"
        },
        {
          "type": "intrinsic",
          "name": "undefined"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "RangeField.lowerBound",
      "id": 671
    }
  },
  {
    "id": 1191,
    "name": "readOnly",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "comment": {
      "shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 72,
        "character": 19
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "boolean"
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.readOnly",
      "id": 40
    }
  },
  {
    "id": 1187,
    "name": "required",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "comment": {
      "shortText": "Is this field required when saving a record?"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 51,
        "character": 19
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "boolean"
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.required",
      "id": 36
    }
  },
  {
    "id": 1175,
    "name": "separator",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/RangeField.ts",
        "line": 21,
        "character": 20
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "string"
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "RangeField.separator",
      "id": 673
    }
  },
  {
    "id": 1174,
    "name": "upperBound",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/RangeField.ts",
        "line": 20,
        "character": 21
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "number"
        },
        {
          "type": "intrinsic",
          "name": "null"
        },
        {
          "type": "intrinsic",
          "name": "undefined"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "RangeField.upperBound",
      "id": 672
    }
  },
  {
    "id": 1192,
    "name": "writeOnly",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "comment": {
      "shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 77,
        "character": 20
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "boolean"
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.writeOnly",
      "id": 41
    }
  },
  {
    "id": 1208,
    "name": "defaultValue",
    "kind": 262144,
    "kindString": "Accessor",
    "flags": {
      "isExported": true
    },
    "comment": {
      "shortText": "Get the default value for this field. Note that this returns a promise that resolve to the default value\nas some default values may need to resolve data from a backend."
    },
    "getSignature": [
      {
        "id": 1209,
        "name": "__get",
        "kind": 524288,
        "kindString": "Get signature",
        "flags": {},
        "comment": {
          "shortText": "Get the default value for this field. Note that this returns a promise that resolve to the default value\nas some default values may need to resolve data from a backend."
        },
        "type": {
          "type": "reference",
          "name": "Promise",
          "typeArguments": [
            {
              "type": "union",
              "types": [
                {
                  "type": "intrinsic",
                  "name": "number"
                },
                {
                  "type": "intrinsic",
                  "name": "null"
                },
                {
                  "type": "intrinsic",
                  "name": "undefined"
                }
              ]
            }
          ]
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.defaultValue",
          "id": 60
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 192,
        "character": 20
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.defaultValue",
      "id": 60
    }
  },
  {
    "id": 1183,
    "name": "name",
    "kind": 262144,
    "kindString": "Accessor",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "getSignature": [
      {
        "id": 1186,
        "name": "__get",
        "kind": 524288,
        "kindString": "Get signature",
        "flags": {},
        "type": {
          "type": "intrinsic",
          "name": "string"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.name",
          "id": 32
        }
      }
    ],
    "setSignature": [
      {
        "id": 1184,
        "name": "__set",
        "kind": 1048576,
        "kindString": "Set signature",
        "flags": {},
        "parameters": [
          {
            "id": 1185,
            "name": "name",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "void"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.name",
          "id": 32
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 41,
        "character": 19
      },
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 44,
        "character": 19
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.name",
      "id": 32
    }
  },
  {
    "id": 1179,
    "name": "parent",
    "kind": 262144,
    "kindString": "Accessor",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "getSignature": [
      {
        "id": 1182,
        "name": "__get",
        "kind": 524288,
        "kindString": "Get signature",
        "flags": {},
        "type": {
          "type": "reference",
          "name": "FieldBinder",
          "id": 79
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.parent",
          "id": 27
        }
      }
    ],
    "setSignature": [
      {
        "id": 1180,
        "name": "__set",
        "kind": 1048576,
        "kindString": "Set signature",
        "flags": {},
        "parameters": [
          {
            "id": 1181,
            "name": "viewModel",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "name": "FieldBinder",
              "id": 79
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "void"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.parent",
          "id": 27
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 30,
        "character": 21
      },
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 33,
        "character": 21
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.parent",
      "id": 27
    }
  },
  {
    "id": 1216,
    "name": "clone",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 1217,
        "name": "clone",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Returns a clone of the field that should be functionally equivalent"
        },
        "type": {
          "type": "reference",
          "name": "Field",
          "id": 24,
          "typeArguments": [
            {
              "type": "intrinsic",
              "name": "number"
            }
          ]
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.clone",
          "id": 68
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 216,
        "character": 16
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.clone",
      "id": 68
    }
  },
  {
    "id": 1196,
    "name": "format",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 1197,
        "name": "format",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
        },
        "parameters": [
          {
            "id": 1198,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "\n"
            },
            "type": {
              "type": "intrinsic",
              "name": "number"
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "any"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.format",
          "id": 48
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 137,
        "character": 17
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.format",
      "id": 48
    }
  },
  {
    "id": 1212,
    "name": "isEqual",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 1213,
        "name": "isEqual",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Should two values be considered equal?",
          "text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
        },
        "parameters": [
          {
            "id": 1214,
            "name": "value1",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "intrinsic",
              "name": "number"
            }
          },
          {
            "id": 1215,
            "name": "value2",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "intrinsic",
              "name": "number"
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.isEqual",
          "id": 64
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 209,
        "character": 18
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.isEqual",
      "id": 64
    }
  },
  {
    "id": 1202,
    "name": "normalize",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 1203,
        "name": "normalize",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
          "text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
        },
        "parameters": [
          {
            "id": 1204,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "\n"
            },
            "type": {
              "type": "intrinsic",
              "name": "any"
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "number"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.normalize",
          "id": 54
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 175,
        "character": 20
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.normalize",
      "id": 54
    }
  },
  {
    "id": 1199,
    "name": "parse",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 1200,
        "name": "parse",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
        },
        "parameters": [
          {
            "id": 1201,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "\n"
            },
            "type": {
              "type": "intrinsic",
              "name": "any"
            }
          }
        ],
        "type": {
          "type": "union",
          "types": [
            {
              "type": "intrinsic",
              "name": "number"
            },
            {
              "type": "intrinsic",
              "name": "null"
            }
          ]
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.parse",
          "id": 51
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 146,
        "character": 16
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.parse",
      "id": 51
    }
  },
  {
    "id": 1205,
    "name": "toJS",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 1206,
        "name": "toJS",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
        },
        "parameters": [
          {
            "id": 1207,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "\n"
            },
            "type": {
              "type": "intrinsic",
              "name": "number"
            }
          }
        ],
        "type": {
          "type": "union",
          "types": [
            {
              "type": "intrinsic",
              "name": "string"
            },
            {
              "type": "intrinsic",
              "name": "number"
            },
            {
              "type": "intrinsic",
              "name": "null"
            },
            {
              "type": "reference",
              "name": "__type"
            }
          ]
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.toJS",
          "id": 57
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 184,
        "character": 8
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.toJS",
      "id": 57
    }
  },
  {
    "id": 1210,
    "name": "toString",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 1211,
        "name": "toString",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "type": {
          "type": "intrinsic",
          "name": "string"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.toString",
          "id": 62
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 199,
        "character": 12
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.toString",
      "id": 62
    }
  },
  {
    "id": 1264,
    "name": "JsonField",
    "kind": 128,
    "kindString": "Class",
    "flags": {
      "isExported": true
    },
    "typeParameter": [
      {
        "id": 1265,
        "name": "T",
        "kind": 131072,
        "kindString": "Type parameter",
        "flags": {}
      }
    ],
    "groups": [
      {
        "title": "Constructors",
        "kind": 512,
        "children": [1271]
      },
      {
        "title": "Properties",
        "kind": 1024,
        "children": [1288, 1285, 1284, 1283, 1270, 1286, 1282, 1287]
      },
      {
        "title": "Accessors",
        "kind": 262144,
        "children": [1300, 1278, 1274]
      },
      {
        "title": "Methods",
        "kind": 2048,
        "children": [1308, 1291, 1304, 1294, 1266, 1297, 1302]
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/JsonField.ts",
        "line": 12,
        "character": 30
      }
    ],
    "extendedTypes": [
      {
        "type": "reference",
        "name": "CharField",
        "id": 467
      }
    ],
    "childIds": [
      1271,
      1288,
      1285,
      1284,
      1283,
      1270,
      1286,
      1282,
      1287,
      1300,
      1278,
      1274,
      1308,
      1291,
      1304,
      1294,
      1266,
      1297,
      1302
    ]
  },
  {
    "id": 1271,
    "name": "constructor",
    "kind": 512,
    "kindString": "Constructor",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 1272,
        "name": "new JsonField",
        "kind": 16384,
        "kindString": "Constructor signature",
        "flags": {},
        "parameters": [
          {
            "id": 1273,
            "name": "values",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "name": "CharFieldProps",
              "id": 511
            },
            "defaultValue": " {}"
          }
        ],
        "type": {
          "type": "reference",
          "name": "JsonField",
          "id": 1264
        },
        "overwrites": {
          "type": "reference",
          "name": "Field.__constructor",
          "id": 45
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "CharField.__constructor",
          "id": 469
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/CharField.ts",
        "line": 11,
        "character": 30
      }
    ],
    "overwrites": {
      "type": "reference",
      "name": "Field.__constructor",
      "id": 45
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "CharField.__constructor",
      "id": 469
    }
  },
  {
    "id": 1288,
    "name": "_defaultValue",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isProtected": true,
      "isExported": true,
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 79,
        "character": 27
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "string"
        },
        {
          "type": "reflection",
          "declaration": {
            "id": 1289,
            "name": "__type",
            "kind": 65536,
            "kindString": "Type literal",
            "flags": {},
            "signatures": [
              {
                "id": 1290,
                "name": "__call",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "reference",
                  "name": "Promise",
                  "typeArguments": [
                    {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  ]
                }
              }
            ],
            "sources": [
              {
                "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
                "line": 79,
                "character": 33
              }
            ]
          }
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field._defaultValue",
      "id": 42
    }
  },
  {
    "id": 1285,
    "name": "choices",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true,
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 67,
        "character": 18
      }
    ],
    "type": {
      "type": "reference",
      "name": "Map",
      "typeArguments": [
        {
          "type": "intrinsic",
          "name": "string"
        },
        {
          "type": "intrinsic",
          "name": "string"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.choices",
      "id": 39
    }
  },
  {
    "id": 1284,
    "name": "helpText",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true,
      "isOptional": true
    },
    "comment": {
      "shortText": "Help text that can be displayed with the form widget"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 61,
        "character": 19
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "undefined"
        },
        {
          "type": "intrinsic",
          "name": "string"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.helpText",
      "id": 38
    }
  },
  {
    "id": 1283,
    "name": "label",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true,
      "isOptional": true
    },
    "comment": {
      "shortText": "Label that can be displayed as the form label for a widget",
      "text": "If not specified will be generated from `name`.\n"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 57,
        "character": 16
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "undefined"
        },
        {
          "type": "intrinsic",
          "name": "string"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.label",
      "id": 37
    }
  },
  {
    "id": 1270,
    "name": "maxLength",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true,
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/CharField.ts",
        "line": 11,
        "character": 20
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "undefined"
        },
        {
          "type": "intrinsic",
          "name": "number"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "CharField.maxLength",
      "id": 468
    }
  },
  {
    "id": 1286,
    "name": "readOnly",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "comment": {
      "shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 72,
        "character": 19
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "boolean"
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.readOnly",
      "id": 40
    }
  },
  {
    "id": 1282,
    "name": "required",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "comment": {
      "shortText": "Is this field required when saving a record?"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 51,
        "character": 19
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "boolean"
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.required",
      "id": 36
    }
  },
  {
    "id": 1287,
    "name": "writeOnly",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "comment": {
      "shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 77,
        "character": 20
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "boolean"
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.writeOnly",
      "id": 41
    }
  },
  {
    "id": 1300,
    "name": "defaultValue",
    "kind": 262144,
    "kindString": "Accessor",
    "flags": {
      "isExported": true
    },
    "comment": {
      "shortText": "Get the default value for this field. Note that this returns a promise that resolve to the default value\nas some default values may need to resolve data from a backend."
    },
    "getSignature": [
      {
        "id": 1301,
        "name": "__get",
        "kind": 524288,
        "kindString": "Get signature",
        "flags": {},
        "comment": {
          "shortText": "Get the default value for this field. Note that this returns a promise that resolve to the default value\nas some default values may need to resolve data from a backend."
        },
        "type": {
          "type": "reference",
          "name": "Promise",
          "typeArguments": [
            {
              "type": "union",
              "types": [
                {
                  "type": "intrinsic",
                  "name": "string"
                },
                {
                  "type": "intrinsic",
                  "name": "null"
                },
                {
                  "type": "intrinsic",
                  "name": "undefined"
                }
              ]
            }
          ]
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.defaultValue",
          "id": 60
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 192,
        "character": 20
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.defaultValue",
      "id": 60
    }
  },
  {
    "id": 1278,
    "name": "name",
    "kind": 262144,
    "kindString": "Accessor",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "getSignature": [
      {
        "id": 1281,
        "name": "__get",
        "kind": 524288,
        "kindString": "Get signature",
        "flags": {},
        "type": {
          "type": "intrinsic",
          "name": "string"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.name",
          "id": 32
        }
      }
    ],
    "setSignature": [
      {
        "id": 1279,
        "name": "__set",
        "kind": 1048576,
        "kindString": "Set signature",
        "flags": {},
        "parameters": [
          {
            "id": 1280,
            "name": "name",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "void"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.name",
          "id": 32
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 41,
        "character": 19
      },
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 44,
        "character": 19
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.name",
      "id": 32
    }
  },
  {
    "id": 1274,
    "name": "parent",
    "kind": 262144,
    "kindString": "Accessor",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "getSignature": [
      {
        "id": 1277,
        "name": "__get",
        "kind": 524288,
        "kindString": "Get signature",
        "flags": {},
        "type": {
          "type": "reference",
          "name": "FieldBinder",
          "id": 79
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.parent",
          "id": 27
        }
      }
    ],
    "setSignature": [
      {
        "id": 1275,
        "name": "__set",
        "kind": 1048576,
        "kindString": "Set signature",
        "flags": {},
        "parameters": [
          {
            "id": 1276,
            "name": "viewModel",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "name": "FieldBinder",
              "id": 79
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "void"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.parent",
          "id": 27
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 30,
        "character": 21
      },
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 33,
        "character": 21
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.parent",
      "id": 27
    }
  },
  {
    "id": 1308,
    "name": "clone",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 1309,
        "name": "clone",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Returns a clone of the field that should be functionally equivalent"
        },
        "type": {
          "type": "reference",
          "name": "Field",
          "id": 24,
          "typeArguments": [
            {
              "type": "intrinsic",
              "name": "string"
            }
          ]
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.clone",
          "id": 68
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 216,
        "character": 16
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.clone",
      "id": 68
    }
  },
  {
    "id": 1291,
    "name": "format",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 1292,
        "name": "format",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
        },
        "parameters": [
          {
            "id": 1293,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "\n"
            },
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "any"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.format",
          "id": 48
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 137,
        "character": 17
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.format",
      "id": 48
    }
  },
  {
    "id": 1304,
    "name": "isEqual",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 1305,
        "name": "isEqual",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Should two values be considered equal?",
          "text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
        },
        "parameters": [
          {
            "id": 1306,
            "name": "value1",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          },
          {
            "id": 1307,
            "name": "value2",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.isEqual",
          "id": 64
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 209,
        "character": 18
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.isEqual",
      "id": 64
    }
  },
  {
    "id": 1294,
    "name": "normalize",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 1295,
        "name": "normalize",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
          "text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
        },
        "parameters": [
          {
            "id": 1296,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "\n"
            },
            "type": {
              "type": "intrinsic",
              "name": "any"
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "string"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.normalize",
          "id": 54
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 175,
        "character": 20
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.normalize",
      "id": 54
    }
  },
  {
    "id": 1266,
    "name": "parse",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 1267,
        "name": "parse",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "typeParameter": [
          {
            "id": 1268,
            "name": "T",
            "kind": 131072,
            "kindString": "Type parameter",
            "flags": {}
          }
        ],
        "parameters": [
          {
            "id": 1269,
            "name": "json",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "name": "JSON",
              "id": 1310,
              "typeArguments": [
                {
                  "type": "typeParameter",
                  "name": "T"
                }
              ]
            }
          }
        ],
        "type": {
          "type": "typeParameter",
          "name": "T"
        },
        "overwrites": {
          "type": "reference",
          "name": "Field.parse",
          "id": 51
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/JsonField.ts",
        "line": 13,
        "character": 9
      }
    ],
    "overwrites": {
      "type": "reference",
      "name": "Field.parse",
      "id": 51
    }
  },
  {
    "id": 1297,
    "name": "toJS",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 1298,
        "name": "toJS",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
        },
        "parameters": [
          {
            "id": 1299,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "\n"
            },
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          }
        ],
        "type": {
          "type": "union",
          "types": [
            {
              "type": "intrinsic",
              "name": "string"
            },
            {
              "type": "intrinsic",
              "name": "number"
            },
            {
              "type": "intrinsic",
              "name": "null"
            },
            {
              "type": "reference",
              "name": "__type"
            }
          ]
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.toJS",
          "id": 57
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 184,
        "character": 8
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.toJS",
      "id": 57
    }
  },
  {
    "id": 1302,
    "name": "toString",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 1303,
        "name": "toString",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "type": {
          "type": "intrinsic",
          "name": "string"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.toString",
          "id": 62
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 199,
        "character": 12
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.toString",
      "id": 62
    }
  },
  {
    "id": 379,
    "name": "NullableBooleanField",
    "kind": 128,
    "kindString": "Class",
    "flags": {
      "isExported": true
    },
    "comment": {
      "shortText": "Field for Boolean type values with Null being a valid option. Count both undefined and null as null instead of False.",
      "text": "Follows standard javascript Truthy and Falsy definition except undefined and null.\n\nSee also: BooleanField.\n"
    },
    "groups": [
      {
        "title": "Constructors",
        "kind": 512,
        "children": [400]
      },
      {
        "title": "Properties",
        "kind": 1024,
        "children": [397, 394, 393, 392, 395, 391, 396]
      },
      {
        "title": "Accessors",
        "kind": 262144,
        "children": [412, 387, 383]
      },
      {
        "title": "Methods",
        "kind": 2048,
        "children": [420, 403, 416, 406, 380, 409, 414]
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/NullableBooleanField.ts",
        "line": 10,
        "character": 41
      }
    ],
    "extendedTypes": [
      {
        "type": "reference",
        "name": "Field",
        "id": 24,
        "typeArguments": [
          {
            "type": "intrinsic",
            "name": "boolean"
          }
        ]
      }
    ],
    "extendedBy": [
      {
        "type": "reference",
        "name": "BooleanField",
        "id": 423
      }
    ],
    "childIds": [
      400,
      397,
      394,
      393,
      392,
      395,
      391,
      396,
      412,
      387,
      383,
      420,
      403,
      416,
      406,
      380,
      409,
      414
    ]
  },
  {
    "id": 400,
    "name": "constructor",
    "kind": 512,
    "kindString": "Constructor",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 401,
        "name": "new NullableBooleanField",
        "kind": 16384,
        "kindString": "Constructor signature",
        "flags": {},
        "parameters": [
          {
            "id": 402,
            "name": "values",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "name": "Props",
              "id": 4,
              "typeArguments": [
                {
                  "type": "intrinsic",
                  "name": "boolean"
                }
              ]
            },
            "defaultValue": " {}"
          }
        ],
        "type": {
          "type": "reference",
          "name": "NullableBooleanField",
          "id": 379
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.__constructor",
          "id": 45
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 79,
        "character": 53
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.__constructor",
      "id": 45
    }
  },
  {
    "id": 397,
    "name": "_defaultValue",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isProtected": true,
      "isExported": true,
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 79,
        "character": 27
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "boolean"
        },
        {
          "type": "reflection",
          "declaration": {
            "id": 398,
            "name": "__type",
            "kind": 65536,
            "kindString": "Type literal",
            "flags": {},
            "signatures": [
              {
                "id": 399,
                "name": "__call",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "reference",
                  "name": "Promise",
                  "typeArguments": [
                    {
                      "type": "intrinsic",
                      "name": "boolean"
                    }
                  ]
                }
              }
            ],
            "sources": [
              {
                "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
                "line": 79,
                "character": 33
              }
            ]
          }
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field._defaultValue",
      "id": 42
    }
  },
  {
    "id": 394,
    "name": "choices",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true,
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 67,
        "character": 18
      }
    ],
    "type": {
      "type": "reference",
      "name": "Map",
      "typeArguments": [
        {
          "type": "intrinsic",
          "name": "boolean"
        },
        {
          "type": "intrinsic",
          "name": "string"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.choices",
      "id": 39
    }
  },
  {
    "id": 393,
    "name": "helpText",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true,
      "isOptional": true
    },
    "comment": {
      "shortText": "Help text that can be displayed with the form widget"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 61,
        "character": 19
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "undefined"
        },
        {
          "type": "intrinsic",
          "name": "string"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.helpText",
      "id": 38
    }
  },
  {
    "id": 392,
    "name": "label",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true,
      "isOptional": true
    },
    "comment": {
      "shortText": "Label that can be displayed as the form label for a widget",
      "text": "If not specified will be generated from `name`.\n"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 57,
        "character": 16
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "undefined"
        },
        {
          "type": "intrinsic",
          "name": "string"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.label",
      "id": 37
    }
  },
  {
    "id": 395,
    "name": "readOnly",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "comment": {
      "shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 72,
        "character": 19
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "boolean"
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.readOnly",
      "id": 40
    }
  },
  {
    "id": 391,
    "name": "required",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "comment": {
      "shortText": "Is this field required when saving a record?"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 51,
        "character": 19
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "boolean"
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.required",
      "id": 36
    }
  },
  {
    "id": 396,
    "name": "writeOnly",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "comment": {
      "shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 77,
        "character": 20
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "boolean"
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.writeOnly",
      "id": 41
    }
  },
  {
    "id": 412,
    "name": "defaultValue",
    "kind": 262144,
    "kindString": "Accessor",
    "flags": {
      "isExported": true
    },
    "comment": {
      "shortText": "Get the default value for this field. Note that this returns a promise that resolve to the default value\nas some default values may need to resolve data from a backend."
    },
    "getSignature": [
      {
        "id": 413,
        "name": "__get",
        "kind": 524288,
        "kindString": "Get signature",
        "flags": {},
        "comment": {
          "shortText": "Get the default value for this field. Note that this returns a promise that resolve to the default value\nas some default values may need to resolve data from a backend."
        },
        "type": {
          "type": "reference",
          "name": "Promise",
          "typeArguments": [
            {
              "type": "union",
              "types": [
                {
                  "type": "intrinsic",
                  "name": "boolean"
                },
                {
                  "type": "intrinsic",
                  "name": "null"
                },
                {
                  "type": "intrinsic",
                  "name": "undefined"
                }
              ]
            }
          ]
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.defaultValue",
          "id": 60
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 192,
        "character": 20
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.defaultValue",
      "id": 60
    }
  },
  {
    "id": 387,
    "name": "name",
    "kind": 262144,
    "kindString": "Accessor",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "getSignature": [
      {
        "id": 390,
        "name": "__get",
        "kind": 524288,
        "kindString": "Get signature",
        "flags": {},
        "type": {
          "type": "intrinsic",
          "name": "string"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.name",
          "id": 32
        }
      }
    ],
    "setSignature": [
      {
        "id": 388,
        "name": "__set",
        "kind": 1048576,
        "kindString": "Set signature",
        "flags": {},
        "parameters": [
          {
            "id": 389,
            "name": "name",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "void"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.name",
          "id": 32
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 41,
        "character": 19
      },
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 44,
        "character": 19
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.name",
      "id": 32
    }
  },
  {
    "id": 383,
    "name": "parent",
    "kind": 262144,
    "kindString": "Accessor",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "getSignature": [
      {
        "id": 386,
        "name": "__get",
        "kind": 524288,
        "kindString": "Get signature",
        "flags": {},
        "type": {
          "type": "reference",
          "name": "FieldBinder",
          "id": 79
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.parent",
          "id": 27
        }
      }
    ],
    "setSignature": [
      {
        "id": 384,
        "name": "__set",
        "kind": 1048576,
        "kindString": "Set signature",
        "flags": {},
        "parameters": [
          {
            "id": 385,
            "name": "viewModel",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "name": "FieldBinder",
              "id": 79
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "void"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.parent",
          "id": 27
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 30,
        "character": 21
      },
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 33,
        "character": 21
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.parent",
      "id": 27
    }
  },
  {
    "id": 420,
    "name": "clone",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 421,
        "name": "clone",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Returns a clone of the field that should be functionally equivalent"
        },
        "type": {
          "type": "reference",
          "name": "Field",
          "id": 24,
          "typeArguments": [
            {
              "type": "intrinsic",
              "name": "boolean"
            }
          ]
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.clone",
          "id": 68
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 216,
        "character": 16
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.clone",
      "id": 68
    }
  },
  {
    "id": 403,
    "name": "format",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 404,
        "name": "format",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
        },
        "parameters": [
          {
            "id": 405,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "\n"
            },
            "type": {
              "type": "intrinsic",
              "name": "boolean"
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "any"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.format",
          "id": 48
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 137,
        "character": 17
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.format",
      "id": 48
    }
  },
  {
    "id": 416,
    "name": "isEqual",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 417,
        "name": "isEqual",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Should two values be considered equal?",
          "text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
        },
        "parameters": [
          {
            "id": 418,
            "name": "value1",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "intrinsic",
              "name": "boolean"
            }
          },
          {
            "id": 419,
            "name": "value2",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "intrinsic",
              "name": "boolean"
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.isEqual",
          "id": 64
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 209,
        "character": 18
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.isEqual",
      "id": 64
    }
  },
  {
    "id": 406,
    "name": "normalize",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 407,
        "name": "normalize",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
          "text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
        },
        "parameters": [
          {
            "id": 408,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "\n"
            },
            "type": {
              "type": "intrinsic",
              "name": "any"
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.normalize",
          "id": 54
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 175,
        "character": 20
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.normalize",
      "id": 54
    }
  },
  {
    "id": 380,
    "name": "parse",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 381,
        "name": "parse",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "parameters": [
          {
            "id": 382,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "intrinsic",
              "name": "any"
            }
          }
        ],
        "type": {
          "type": "union",
          "types": [
            {
              "type": "intrinsic",
              "name": "boolean"
            },
            {
              "type": "intrinsic",
              "name": "null"
            }
          ]
        },
        "overwrites": {
          "type": "reference",
          "name": "Field.parse",
          "id": 51
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/NullableBooleanField.ts",
        "line": 11,
        "character": 9
      }
    ],
    "overwrites": {
      "type": "reference",
      "name": "Field.parse",
      "id": 51
    }
  },
  {
    "id": 409,
    "name": "toJS",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 410,
        "name": "toJS",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
        },
        "parameters": [
          {
            "id": 411,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "\n"
            },
            "type": {
              "type": "intrinsic",
              "name": "boolean"
            }
          }
        ],
        "type": {
          "type": "union",
          "types": [
            {
              "type": "intrinsic",
              "name": "string"
            },
            {
              "type": "intrinsic",
              "name": "number"
            },
            {
              "type": "intrinsic",
              "name": "null"
            },
            {
              "type": "reference",
              "name": "__type"
            }
          ]
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.toJS",
          "id": 57
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 184,
        "character": 8
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.toJS",
      "id": 57
    }
  },
  {
    "id": 414,
    "name": "toString",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 415,
        "name": "toString",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "type": {
          "type": "intrinsic",
          "name": "string"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.toString",
          "id": 62
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 199,
        "character": 12
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.toString",
      "id": 62
    }
  },
  {
    "id": 101,
    "name": "NumberField",
    "kind": 128,
    "kindString": "Class",
    "flags": {
      "isExported": true
    },
    "comment": {
      "shortText": "Base class for numeric fields",
      "text": "Other numeric fields (IntegerField, DecimalField, FloatField...) will extend this.\n\n"
    },
    "typeParameter": [
      {
        "id": 102,
        "name": "T",
        "kind": 131072,
        "kindString": "Type parameter",
        "flags": {}
      }
    ],
    "groups": [
      {
        "title": "Constructors",
        "kind": 512,
        "children": [105]
      },
      {
        "title": "Properties",
        "kind": 1024,
        "children": [122, 119, 118, 117, 104, 103, 120, 116, 121]
      },
      {
        "title": "Accessors",
        "kind": 262144,
        "children": [137, 112, 108]
      },
      {
        "title": "Methods",
        "kind": 2048,
        "children": [145, 125, 141, 131, 128, 134, 139]
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/NumberField.ts",
        "line": 14,
        "character": 32
      }
    ],
    "extendedTypes": [
      {
        "type": "reference",
        "name": "Field",
        "id": 24,
        "typeArguments": [
          {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "string"
              },
              {
                "type": "intrinsic",
                "name": "number"
              }
            ]
          }
        ]
      }
    ],
    "extendedBy": [
      {
        "type": "reference",
        "name": "DecimalField",
        "id": 515
      },
      {
        "type": "reference",
        "name": "FloatField",
        "id": 989
      },
      {
        "type": "reference",
        "name": "IntegerField",
        "id": 1126
      }
    ],
    "childIds": [
      105,
      122,
      119,
      118,
      117,
      104,
      103,
      120,
      116,
      121,
      137,
      112,
      108,
      145,
      125,
      141,
      131,
      128,
      134,
      139
    ]
  },
  {
    "id": 105,
    "name": "constructor",
    "kind": 512,
    "kindString": "Constructor",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 106,
        "name": "new NumberField",
        "kind": 16384,
        "kindString": "Constructor signature",
        "flags": {},
        "parameters": [
          {
            "id": 107,
            "name": "values",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "name": "NumberFieldProps",
              "id": 147
            },
            "defaultValue": " {}"
          }
        ],
        "type": {
          "type": "reference",
          "name": "NumberField",
          "id": 101
        },
        "overwrites": {
          "type": "reference",
          "name": "Field.__constructor",
          "id": 45
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/NumberField.ts",
        "line": 16,
        "character": 29
      }
    ],
    "overwrites": {
      "type": "reference",
      "name": "Field.__constructor",
      "id": 45
    }
  },
  {
    "id": 122,
    "name": "_defaultValue",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isProtected": true,
      "isExported": true,
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 79,
        "character": 27
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "union",
          "types": [
            {
              "type": "intrinsic",
              "name": "string"
            },
            {
              "type": "intrinsic",
              "name": "number"
            }
          ]
        },
        {
          "type": "reflection",
          "declaration": {
            "id": 123,
            "name": "__type",
            "kind": 65536,
            "kindString": "Type literal",
            "flags": {},
            "signatures": [
              {
                "id": 124,
                "name": "__call",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "reference",
                  "name": "Promise",
                  "typeArguments": [
                    {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "string"
                        },
                        {
                          "type": "intrinsic",
                          "name": "number"
                        }
                      ]
                    }
                  ]
                }
              }
            ],
            "sources": [
              {
                "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
                "line": 79,
                "character": 33
              }
            ]
          }
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field._defaultValue",
      "id": 42
    }
  },
  {
    "id": 119,
    "name": "choices",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true,
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 67,
        "character": 18
      }
    ],
    "type": {
      "type": "reference",
      "name": "Map",
      "typeArguments": [
        {
          "type": "union",
          "types": [
            {
              "type": "intrinsic",
              "name": "string"
            },
            {
              "type": "intrinsic",
              "name": "number"
            }
          ]
        },
        {
          "type": "intrinsic",
          "name": "string"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.choices",
      "id": 39
    }
  },
  {
    "id": 118,
    "name": "helpText",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true,
      "isOptional": true
    },
    "comment": {
      "shortText": "Help text that can be displayed with the form widget"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 61,
        "character": 19
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "undefined"
        },
        {
          "type": "intrinsic",
          "name": "string"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.helpText",
      "id": 38
    }
  },
  {
    "id": 117,
    "name": "label",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true,
      "isOptional": true
    },
    "comment": {
      "shortText": "Label that can be displayed as the form label for a widget",
      "text": "If not specified will be generated from `name`.\n"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 57,
        "character": 16
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "undefined"
        },
        {
          "type": "intrinsic",
          "name": "string"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.label",
      "id": 37
    }
  },
  {
    "id": 104,
    "name": "maxValue",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true,
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/NumberField.ts",
        "line": 16,
        "character": 19
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "undefined"
        },
        {
          "type": "intrinsic",
          "name": "number"
        }
      ]
    }
  },
  {
    "id": 103,
    "name": "minValue",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true,
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/NumberField.ts",
        "line": 15,
        "character": 19
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "undefined"
        },
        {
          "type": "intrinsic",
          "name": "number"
        }
      ]
    }
  },
  {
    "id": 120,
    "name": "readOnly",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "comment": {
      "shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 72,
        "character": 19
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "boolean"
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.readOnly",
      "id": 40
    }
  },
  {
    "id": 116,
    "name": "required",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "comment": {
      "shortText": "Is this field required when saving a record?"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 51,
        "character": 19
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "boolean"
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.required",
      "id": 36
    }
  },
  {
    "id": 121,
    "name": "writeOnly",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "comment": {
      "shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 77,
        "character": 20
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "boolean"
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.writeOnly",
      "id": 41
    }
  },
  {
    "id": 137,
    "name": "defaultValue",
    "kind": 262144,
    "kindString": "Accessor",
    "flags": {
      "isExported": true
    },
    "comment": {
      "shortText": "Get the default value for this field. Note that this returns a promise that resolve to the default value\nas some default values may need to resolve data from a backend."
    },
    "getSignature": [
      {
        "id": 138,
        "name": "__get",
        "kind": 524288,
        "kindString": "Get signature",
        "flags": {},
        "comment": {
          "shortText": "Get the default value for this field. Note that this returns a promise that resolve to the default value\nas some default values may need to resolve data from a backend."
        },
        "type": {
          "type": "reference",
          "name": "Promise",
          "typeArguments": [
            {
              "type": "union",
              "types": [
                {
                  "type": "union",
                  "types": [
                    {
                      "type": "intrinsic",
                      "name": "string"
                    },
                    {
                      "type": "intrinsic",
                      "name": "number"
                    }
                  ]
                },
                {
                  "type": "intrinsic",
                  "name": "null"
                },
                {
                  "type": "intrinsic",
                  "name": "undefined"
                }
              ]
            }
          ]
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.defaultValue",
          "id": 60
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 192,
        "character": 20
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.defaultValue",
      "id": 60
    }
  },
  {
    "id": 112,
    "name": "name",
    "kind": 262144,
    "kindString": "Accessor",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "getSignature": [
      {
        "id": 115,
        "name": "__get",
        "kind": 524288,
        "kindString": "Get signature",
        "flags": {},
        "type": {
          "type": "intrinsic",
          "name": "string"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.name",
          "id": 32
        }
      }
    ],
    "setSignature": [
      {
        "id": 113,
        "name": "__set",
        "kind": 1048576,
        "kindString": "Set signature",
        "flags": {},
        "parameters": [
          {
            "id": 114,
            "name": "name",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "void"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.name",
          "id": 32
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 41,
        "character": 19
      },
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 44,
        "character": 19
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.name",
      "id": 32
    }
  },
  {
    "id": 108,
    "name": "parent",
    "kind": 262144,
    "kindString": "Accessor",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "getSignature": [
      {
        "id": 111,
        "name": "__get",
        "kind": 524288,
        "kindString": "Get signature",
        "flags": {},
        "type": {
          "type": "reference",
          "name": "FieldBinder",
          "id": 79
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.parent",
          "id": 27
        }
      }
    ],
    "setSignature": [
      {
        "id": 109,
        "name": "__set",
        "kind": 1048576,
        "kindString": "Set signature",
        "flags": {},
        "parameters": [
          {
            "id": 110,
            "name": "viewModel",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "name": "FieldBinder",
              "id": 79
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "void"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.parent",
          "id": 27
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 30,
        "character": 21
      },
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 33,
        "character": 21
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.parent",
      "id": 27
    }
  },
  {
    "id": 145,
    "name": "clone",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 146,
        "name": "clone",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Returns a clone of the field that should be functionally equivalent"
        },
        "type": {
          "type": "reference",
          "name": "Field",
          "id": 24,
          "typeArguments": [
            {
              "type": "union",
              "types": [
                {
                  "type": "intrinsic",
                  "name": "string"
                },
                {
                  "type": "intrinsic",
                  "name": "number"
                }
              ]
            }
          ]
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.clone",
          "id": 68
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 216,
        "character": 16
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.clone",
      "id": 68
    }
  },
  {
    "id": 125,
    "name": "format",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 126,
        "name": "format",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
        },
        "parameters": [
          {
            "id": 127,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "\n"
            },
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "intrinsic",
                  "name": "string"
                },
                {
                  "type": "intrinsic",
                  "name": "number"
                }
              ]
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "any"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.format",
          "id": 48
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 137,
        "character": 17
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.format",
      "id": 48
    }
  },
  {
    "id": 141,
    "name": "isEqual",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 142,
        "name": "isEqual",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Should two values be considered equal?",
          "text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
        },
        "parameters": [
          {
            "id": 143,
            "name": "value1",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "intrinsic",
                  "name": "string"
                },
                {
                  "type": "intrinsic",
                  "name": "number"
                }
              ]
            }
          },
          {
            "id": 144,
            "name": "value2",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "intrinsic",
                  "name": "string"
                },
                {
                  "type": "intrinsic",
                  "name": "number"
                }
              ]
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.isEqual",
          "id": 64
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 209,
        "character": 18
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.isEqual",
      "id": 64
    }
  },
  {
    "id": 131,
    "name": "normalize",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 132,
        "name": "normalize",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
          "text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
        },
        "parameters": [
          {
            "id": 133,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "\n"
            },
            "type": {
              "type": "intrinsic",
              "name": "any"
            }
          }
        ],
        "type": {
          "type": "union",
          "types": [
            {
              "type": "intrinsic",
              "name": "string"
            },
            {
              "type": "intrinsic",
              "name": "number"
            }
          ]
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.normalize",
          "id": 54
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 175,
        "character": 20
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.normalize",
      "id": 54
    }
  },
  {
    "id": 128,
    "name": "parse",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 129,
        "name": "parse",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
        },
        "parameters": [
          {
            "id": 130,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "\n"
            },
            "type": {
              "type": "intrinsic",
              "name": "any"
            }
          }
        ],
        "type": {
          "type": "union",
          "types": [
            {
              "type": "union",
              "types": [
                {
                  "type": "intrinsic",
                  "name": "string"
                },
                {
                  "type": "intrinsic",
                  "name": "number"
                }
              ]
            },
            {
              "type": "intrinsic",
              "name": "null"
            }
          ]
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.parse",
          "id": 51
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 146,
        "character": 16
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.parse",
      "id": 51
    }
  },
  {
    "id": 134,
    "name": "toJS",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 135,
        "name": "toJS",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
        },
        "parameters": [
          {
            "id": 136,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "\n"
            },
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "intrinsic",
                  "name": "string"
                },
                {
                  "type": "intrinsic",
                  "name": "number"
                }
              ]
            }
          }
        ],
        "type": {
          "type": "union",
          "types": [
            {
              "type": "intrinsic",
              "name": "string"
            },
            {
              "type": "intrinsic",
              "name": "number"
            },
            {
              "type": "intrinsic",
              "name": "null"
            },
            {
              "type": "reference",
              "name": "__type"
            }
          ]
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.toJS",
          "id": 57
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 184,
        "character": 8
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.toJS",
      "id": 57
    }
  },
  {
    "id": 139,
    "name": "toString",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 140,
        "name": "toString",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "type": {
          "type": "intrinsic",
          "name": "string"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.toString",
          "id": 62
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 199,
        "character": 12
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.toString",
      "id": 62
    }
  },
  {
    "id": 669,
    "name": "RangeField",
    "kind": 128,
    "kindString": "Class",
    "flags": {
      "isExported": true
    },
    "comment": {
      "shortText": "Base class for range fields (fields with a boundary).",
      "text": "supply lowerBound and upperBound to the constructor to define boundaries. they're optional (can be undefined / null).\n\nOther range based fields (DateTimeRangeField, IntegerRangeField, ...) will extend this.\n\n"
    },
    "typeParameter": [
      {
        "id": 670,
        "name": "T",
        "kind": 131072,
        "kindString": "Type parameter",
        "flags": {}
      }
    ],
    "groups": [
      {
        "title": "Constructors",
        "kind": 512,
        "children": [674]
      },
      {
        "title": "Properties",
        "kind": 1024,
        "children": [691, 688, 687, 686, 671, 689, 685, 673, 672, 690]
      },
      {
        "title": "Accessors",
        "kind": 262144,
        "children": [706, 681, 677]
      },
      {
        "title": "Methods",
        "kind": 2048,
        "children": [714, 694, 710, 700, 697, 703, 708]
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/RangeField.ts",
        "line": 18,
        "character": 31
      }
    ],
    "extendedTypes": [
      {
        "type": "reference",
        "name": "Field",
        "id": 24,
        "typeArguments": [
          {
            "type": "typeParameter",
            "name": "T"
          }
        ]
      }
    ],
    "extendedBy": [
      {
        "type": "reference",
        "name": "DateRangeField",
        "id": 717
      },
      {
        "type": "reference",
        "name": "DateTimeRangeField",
        "id": 808
      },
      {
        "type": "reference",
        "name": "FloatRangeField",
        "id": 1035
      },
      {
        "type": "reference",
        "name": "IntegerRangeField",
        "id": 1172
      }
    ],
    "childIds": [
      674,
      691,
      688,
      687,
      686,
      671,
      689,
      685,
      673,
      672,
      690,
      706,
      681,
      677,
      714,
      694,
      710,
      700,
      697,
      703,
      708
    ]
  },
  {
    "id": 674,
    "name": "constructor",
    "kind": 512,
    "kindString": "Constructor",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 675,
        "name": "new RangeField",
        "kind": 16384,
        "kindString": "Constructor signature",
        "flags": {},
        "parameters": [
          {
            "id": 676,
            "name": "values",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "name": "Boundary",
              "id": 653,
              "typeArguments": [
                {
                  "type": "typeParameter",
                  "name": "T"
                }
              ]
            }
          }
        ],
        "type": {
          "type": "reference",
          "name": "RangeField",
          "id": 669
        },
        "overwrites": {
          "type": "reference",
          "name": "Field.__constructor",
          "id": 45
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/RangeField.ts",
        "line": 21,
        "character": 29
      }
    ],
    "overwrites": {
      "type": "reference",
      "name": "Field.__constructor",
      "id": 45
    }
  },
  {
    "id": 691,
    "name": "_defaultValue",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isProtected": true,
      "isExported": true,
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 79,
        "character": 27
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "typeParameter",
          "name": "T"
        },
        {
          "type": "reflection",
          "declaration": {
            "id": 692,
            "name": "__type",
            "kind": 65536,
            "kindString": "Type literal",
            "flags": {},
            "signatures": [
              {
                "id": 693,
                "name": "__call",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "reference",
                  "name": "Promise",
                  "typeArguments": [
                    {
                      "type": "typeParameter",
                      "name": "T"
                    }
                  ]
                }
              }
            ],
            "sources": [
              {
                "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
                "line": 79,
                "character": 33
              }
            ]
          }
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field._defaultValue",
      "id": 42
    }
  },
  {
    "id": 688,
    "name": "choices",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true,
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 67,
        "character": 18
      }
    ],
    "type": {
      "type": "reference",
      "name": "Map",
      "typeArguments": [
        {
          "type": "typeParameter",
          "name": "T"
        },
        {
          "type": "intrinsic",
          "name": "string"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.choices",
      "id": 39
    }
  },
  {
    "id": 687,
    "name": "helpText",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true,
      "isOptional": true
    },
    "comment": {
      "shortText": "Help text that can be displayed with the form widget"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 61,
        "character": 19
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "undefined"
        },
        {
          "type": "intrinsic",
          "name": "string"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.helpText",
      "id": 38
    }
  },
  {
    "id": 686,
    "name": "label",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true,
      "isOptional": true
    },
    "comment": {
      "shortText": "Label that can be displayed as the form label for a widget",
      "text": "If not specified will be generated from `name`.\n"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 57,
        "character": 16
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "undefined"
        },
        {
          "type": "intrinsic",
          "name": "string"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.label",
      "id": 37
    }
  },
  {
    "id": 671,
    "name": "lowerBound",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/RangeField.ts",
        "line": 19,
        "character": 21
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "typeParameter",
          "name": "T"
        },
        {
          "type": "intrinsic",
          "name": "null"
        },
        {
          "type": "intrinsic",
          "name": "undefined"
        }
      ]
    }
  },
  {
    "id": 689,
    "name": "readOnly",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "comment": {
      "shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 72,
        "character": 19
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "boolean"
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.readOnly",
      "id": 40
    }
  },
  {
    "id": 685,
    "name": "required",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "comment": {
      "shortText": "Is this field required when saving a record?"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 51,
        "character": 19
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "boolean"
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.required",
      "id": 36
    }
  },
  {
    "id": 673,
    "name": "separator",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/RangeField.ts",
        "line": 21,
        "character": 20
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "string"
    }
  },
  {
    "id": 672,
    "name": "upperBound",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/RangeField.ts",
        "line": 20,
        "character": 21
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "typeParameter",
          "name": "T"
        },
        {
          "type": "intrinsic",
          "name": "null"
        },
        {
          "type": "intrinsic",
          "name": "undefined"
        }
      ]
    }
  },
  {
    "id": 690,
    "name": "writeOnly",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "comment": {
      "shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 77,
        "character": 20
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "boolean"
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.writeOnly",
      "id": 41
    }
  },
  {
    "id": 706,
    "name": "defaultValue",
    "kind": 262144,
    "kindString": "Accessor",
    "flags": {
      "isExported": true
    },
    "comment": {
      "shortText": "Get the default value for this field. Note that this returns a promise that resolve to the default value\nas some default values may need to resolve data from a backend."
    },
    "getSignature": [
      {
        "id": 707,
        "name": "__get",
        "kind": 524288,
        "kindString": "Get signature",
        "flags": {},
        "comment": {
          "shortText": "Get the default value for this field. Note that this returns a promise that resolve to the default value\nas some default values may need to resolve data from a backend."
        },
        "type": {
          "type": "reference",
          "name": "Promise",
          "typeArguments": [
            {
              "type": "union",
              "types": [
                {
                  "type": "typeParameter",
                  "name": "T"
                },
                {
                  "type": "intrinsic",
                  "name": "null"
                },
                {
                  "type": "intrinsic",
                  "name": "undefined"
                }
              ]
            }
          ]
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.defaultValue",
          "id": 60
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 192,
        "character": 20
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.defaultValue",
      "id": 60
    }
  },
  {
    "id": 681,
    "name": "name",
    "kind": 262144,
    "kindString": "Accessor",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "getSignature": [
      {
        "id": 684,
        "name": "__get",
        "kind": 524288,
        "kindString": "Get signature",
        "flags": {},
        "type": {
          "type": "intrinsic",
          "name": "string"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.name",
          "id": 32
        }
      }
    ],
    "setSignature": [
      {
        "id": 682,
        "name": "__set",
        "kind": 1048576,
        "kindString": "Set signature",
        "flags": {},
        "parameters": [
          {
            "id": 683,
            "name": "name",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "void"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.name",
          "id": 32
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 41,
        "character": 19
      },
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 44,
        "character": 19
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.name",
      "id": 32
    }
  },
  {
    "id": 677,
    "name": "parent",
    "kind": 262144,
    "kindString": "Accessor",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "getSignature": [
      {
        "id": 680,
        "name": "__get",
        "kind": 524288,
        "kindString": "Get signature",
        "flags": {},
        "type": {
          "type": "reference",
          "name": "FieldBinder",
          "id": 79
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.parent",
          "id": 27
        }
      }
    ],
    "setSignature": [
      {
        "id": 678,
        "name": "__set",
        "kind": 1048576,
        "kindString": "Set signature",
        "flags": {},
        "parameters": [
          {
            "id": 679,
            "name": "viewModel",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "name": "FieldBinder",
              "id": 79
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "void"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.parent",
          "id": 27
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 30,
        "character": 21
      },
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 33,
        "character": 21
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.parent",
      "id": 27
    }
  },
  {
    "id": 714,
    "name": "clone",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 715,
        "name": "clone",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Returns a clone of the field that should be functionally equivalent"
        },
        "type": {
          "type": "reference",
          "name": "Field",
          "id": 24,
          "typeArguments": [
            {
              "type": "typeParameter",
              "name": "T"
            }
          ]
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.clone",
          "id": 68
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 216,
        "character": 16
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.clone",
      "id": 68
    }
  },
  {
    "id": 694,
    "name": "format",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 695,
        "name": "format",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
        },
        "parameters": [
          {
            "id": 696,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "\n"
            },
            "type": {
              "type": "typeParameter",
              "name": "T"
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "any"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.format",
          "id": 48
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 137,
        "character": 17
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.format",
      "id": 48
    }
  },
  {
    "id": 710,
    "name": "isEqual",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 711,
        "name": "isEqual",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Should two values be considered equal?",
          "text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
        },
        "parameters": [
          {
            "id": 712,
            "name": "value1",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "typeParameter",
              "name": "T"
            }
          },
          {
            "id": 713,
            "name": "value2",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "typeParameter",
              "name": "T"
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.isEqual",
          "id": 64
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 209,
        "character": 18
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.isEqual",
      "id": 64
    }
  },
  {
    "id": 700,
    "name": "normalize",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 701,
        "name": "normalize",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
          "text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
        },
        "parameters": [
          {
            "id": 702,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "\n"
            },
            "type": {
              "type": "intrinsic",
              "name": "any"
            }
          }
        ],
        "type": {
          "type": "typeParameter",
          "name": "T"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.normalize",
          "id": 54
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 175,
        "character": 20
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.normalize",
      "id": 54
    }
  },
  {
    "id": 697,
    "name": "parse",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 698,
        "name": "parse",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
        },
        "parameters": [
          {
            "id": 699,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "\n"
            },
            "type": {
              "type": "intrinsic",
              "name": "any"
            }
          }
        ],
        "type": {
          "type": "union",
          "types": [
            {
              "type": "typeParameter",
              "name": "T"
            },
            {
              "type": "intrinsic",
              "name": "null"
            }
          ]
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.parse",
          "id": 51
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 146,
        "character": 16
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.parse",
      "id": 51
    }
  },
  {
    "id": 703,
    "name": "toJS",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 704,
        "name": "toJS",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
        },
        "parameters": [
          {
            "id": 705,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "\n"
            },
            "type": {
              "type": "typeParameter",
              "name": "T"
            }
          }
        ],
        "type": {
          "type": "union",
          "types": [
            {
              "type": "intrinsic",
              "name": "string"
            },
            {
              "type": "intrinsic",
              "name": "number"
            },
            {
              "type": "intrinsic",
              "name": "null"
            },
            {
              "type": "reference",
              "name": "__type"
            }
          ]
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.toJS",
          "id": 57
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 184,
        "character": 8
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.toJS",
      "id": 57
    }
  },
  {
    "id": 708,
    "name": "toString",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 709,
        "name": "toString",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "type": {
          "type": "intrinsic",
          "name": "string"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.toString",
          "id": 62
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 199,
        "character": 12
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.toString",
      "id": 62
    }
  },
  {
    "id": 190,
    "name": "RecordCache",
    "kind": 128,
    "kindString": "Class",
    "flags": {},
    "comment": {
      "shortText": "A cache for a single record as identified by it's primary key. This caches the\ndifferent record instances for all the different possible permutations of fields\na record can accept. We don't create these records up front, rather we:",
      "text": "1) When a new or updated record is cached it is set in `cache`\n2) We iterate over all other keys that are set (where a key is the field names set\n   for that cached record) and set them to a `RecordPointer` if they are a subset of\n   the fields for the record added in 1.\n3) We store in `latestRecords` a tuple of the cache key and an incremented counter.\n   This is used to identify the most recent record set for a given set of fields.\n   This is used in get described below\n\nWhen getting a record we:\n\n1) Check if it exists already in `cache`\n2) If it exists but is an instance of `RecordPointer` we clone the linked record\n   otherwise we return the record directly\n3) If it doesn't exist we iterate over the entries in `latestRecords` in descending\n   order of value (which is the counter incremented in step 3 above). If we encounter\n   an entry that is a superset of the fields being retrieved we clone that record\n   and return it.\n4) Otherwise we return null\n"
    },
    "typeParameter": [
      {
        "id": 191,
        "name": "T",
        "kind": 131072,
        "kindString": "Type parameter",
        "flags": {},
        "type": {
          "type": "reference",
          "name": "ViewModel",
          "id": 309
        }
      }
    ],
    "groups": [
      {
        "title": "Constructors",
        "kind": 512,
        "children": [201]
      },
      {
        "title": "Properties",
        "kind": 1024,
        "children": [194, 195, 200, 196, 193, 192]
      },
      {
        "title": "Methods",
        "kind": 2048,
        "children": [214, 223, 220, 217, 204, 207, 210]
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
        "line": 84,
        "character": 17
      }
    ],
    "childIds": [201, 194, 195, 200, 196, 193, 192, 214, 223, 220, 217, 204, 207, 210]
  },
  {
    "id": 201,
    "name": "constructor",
    "kind": 512,
    "kindString": "Constructor",
    "flags": {},
    "signatures": [
      {
        "id": 202,
        "name": "new RecordCache",
        "kind": 16384,
        "kindString": "Constructor signature",
        "flags": {},
        "parameters": [
          {
            "id": 203,
            "name": "viewModel",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "name": "Class",
              "id": 152,
              "typeArguments": [
                {
                  "type": "typeParameter",
                  "name": "T",
                  "constraint": {
                    "type": "reference",
                    "name": "ViewModel",
                    "id": 309
                  }
                }
              ]
            }
          }
        ],
        "type": {
          "type": "reference",
          "name": "RecordCache",
          "id": 190
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
        "line": 90,
        "character": 16
      }
    ]
  },
  {
    "id": 194,
    "name": "cache",
    "kind": 1024,
    "kindString": "Property",
    "flags": {},
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
        "line": 87,
        "character": 9
      }
    ],
    "type": {
      "type": "reference",
      "name": "Map",
      "typeArguments": [
        {
          "type": "reference",
          "name": "FieldNameCacheKey",
          "id": 270
        },
        {
          "type": "union",
          "types": [
            {
              "type": "typeParameter",
              "name": "T",
              "constraint": {
                "type": "reference",
                "name": "ViewModel",
                "id": 309
              }
            },
            {
              "type": "reference",
              "name": "RecordPointer",
              "id": 184,
              "typeArguments": [
                {
                  "type": "typeParameter",
                  "name": "T",
                  "constraint": {
                    "type": "reference",
                    "name": "ViewModel",
                    "id": 309
                  }
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "id": 195,
    "name": "cacheListeners",
    "kind": 1024,
    "kindString": "Property",
    "flags": {},
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
        "line": 88,
        "character": 18
      }
    ],
    "type": {
      "type": "reference",
      "name": "Map",
      "typeArguments": [
        {
          "type": "reference",
          "name": "FieldNameCacheKey",
          "id": 270
        },
        {
          "type": "array",
          "elementType": {
            "type": "reference",
            "name": "ChangeListener",
            "id": 292,
            "typeArguments": [
              {
                "type": "typeParameter",
                "name": "T",
                "constraint": {
                  "type": "reference",
                  "name": "ViewModel",
                  "id": 309
                }
              }
            ]
          }
        }
      ]
    }
  },
  {
    "id": 200,
    "name": "counter",
    "kind": 1024,
    "kindString": "Property",
    "flags": {},
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
        "line": 90,
        "character": 11
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "number"
    },
    "defaultValue": "0"
  },
  {
    "id": 196,
    "name": "latestRecords",
    "kind": 1024,
    "kindString": "Property",
    "flags": {},
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
        "line": 89,
        "character": 17
      }
    ],
    "type": {
      "type": "reflection",
      "declaration": {
        "id": 197,
        "name": "__type",
        "kind": 65536,
        "kindString": "Type literal",
        "flags": {},
        "indexSignature": [
          {
            "id": 198,
            "name": "__index",
            "kind": 8192,
            "kindString": "Index signature",
            "flags": {},
            "parameters": [
              {
                "id": 199,
                "name": "fieldsKey",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "number"
            }
          }
        ],
        "sources": [
          {
            "fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
            "line": 89,
            "character": 18
          }
        ]
      }
    }
  },
  {
    "id": 193,
    "name": "pkFieldNames",
    "kind": 1024,
    "kindString": "Property",
    "flags": {},
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
        "line": 86,
        "character": 16
      }
    ],
    "type": {
      "type": "array",
      "elementType": {
        "type": "intrinsic",
        "name": "string"
      }
    }
  },
  {
    "id": 192,
    "name": "viewModel",
    "kind": 1024,
    "kindString": "Property",
    "flags": {},
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
        "line": 85,
        "character": 13
      }
    ],
    "type": {
      "type": "reference",
      "name": "Class",
      "id": 152,
      "typeArguments": [
        {
          "type": "typeParameter",
          "name": "T",
          "constraint": {
            "type": "reference",
            "name": "ViewModel",
            "id": 309
          }
        }
      ]
    }
  },
  {
    "id": 214,
    "name": "add",
    "kind": 2048,
    "kindString": "Method",
    "flags": {},
    "signatures": [
      {
        "id": 215,
        "name": "add",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Add a record to the cache based on the fields that are set on it.",
          "text": "This will also update any cached entries for records that contain only\na subset of the fields set on `record. Note that this does not update\na superset of fields, ie. updating fields (a,b) won't update a record\nthat contains (a,b,c)\n"
        },
        "parameters": [
          {
            "id": 216,
            "name": "record",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "typeParameter",
              "name": "T",
              "constraint": {
                "type": "reference",
                "name": "ViewModel",
                "id": 309
              }
            }
          }
        ],
        "type": {
          "type": "union",
          "types": [
            {
              "type": "reference",
              "name": "Map",
              "typeArguments": [
                {
                  "type": "intrinsic",
                  "name": "string"
                },
                {
                  "type": "union",
                  "types": [
                    {
                      "type": "typeParameter",
                      "name": "T",
                      "constraint": {
                        "type": "reference",
                        "name": "ViewModel",
                        "id": 309
                      }
                    },
                    {
                      "type": "reference",
                      "name": "RecordPointer",
                      "id": 184,
                      "typeArguments": [
                        {
                          "type": "typeParameter",
                          "name": "T",
                          "constraint": {
                            "type": "reference",
                            "name": "ViewModel",
                            "id": 309
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "intrinsic",
              "name": "null"
            }
          ]
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
        "line": 182,
        "character": 7
      }
    ]
  },
  {
    "id": 223,
    "name": "addListener",
    "kind": 2048,
    "kindString": "Method",
    "flags": {},
    "signatures": [
      {
        "id": 224,
        "name": "addListener",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Add a listener for any changes, additions or deletions for the specified field names"
        },
        "parameters": [
          {
            "id": 225,
            "name": "fieldNames",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "field names to listen to any changes for"
            },
            "type": {
              "type": "array",
              "elementType": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          },
          {
            "id": 226,
            "name": "listener",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "Function to call with any changes\n"
            },
            "type": {
              "type": "reference",
              "name": "ChangeListener",
              "id": 292,
              "typeArguments": [
                {
                  "type": "typeParameter",
                  "name": "T",
                  "constraint": {
                    "type": "reference",
                    "name": "ViewModel",
                    "id": 309
                  }
                }
              ]
            }
          }
        ],
        "type": {
          "type": "reference",
          "name": "ChangeListenerUnsubscribe",
          "id": 304
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
        "line": 268,
        "character": 15
      }
    ]
  },
  {
    "id": 220,
    "name": "delete",
    "kind": 2048,
    "kindString": "Method",
    "flags": {},
    "signatures": [
      {
        "id": 221,
        "name": "delete",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Delete a record for the specified field names.",
          "text": "Returns true if anything was deleted otherwise false\n"
        },
        "parameters": [
          {
            "id": 222,
            "name": "fieldNames",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {
              "isOptional": true
            },
            "type": {
              "type": "array",
              "elementType": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "boolean"
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
        "line": 246,
        "character": 10
      }
    ]
  },
  {
    "id": 217,
    "name": "get",
    "kind": 2048,
    "kindString": "Method",
    "flags": {},
    "signatures": [
      {
        "id": 218,
        "name": "get",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Get the cached record for the specified field names"
        },
        "parameters": [
          {
            "id": 219,
            "name": "fieldNames",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "array",
              "elementType": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          }
        ],
        "type": {
          "type": "union",
          "types": [
            {
              "type": "typeParameter",
              "name": "T",
              "constraint": {
                "type": "reference",
                "name": "ViewModel",
                "id": 309
              }
            },
            {
              "type": "intrinsic",
              "name": "null"
            }
          ]
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
        "line": 199,
        "character": 7
      }
    ]
  },
  {
    "id": 204,
    "name": "getCacheKey",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPrivate": true
    },
    "signatures": [
      {
        "id": 205,
        "name": "getCacheKey",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Return the key to use into `cache` for the specified field names"
        },
        "parameters": [
          {
            "id": 206,
            "name": "fieldNames",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "array",
              "elementType": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "string"
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
        "line": 105,
        "character": 23
      }
    ]
  },
  {
    "id": 207,
    "name": "reverseCacheKey",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPrivate": true
    },
    "signatures": [
      {
        "id": 208,
        "name": "reverseCacheKey",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Take a cache key generated with `getCacheKey` and return the list of fields"
        },
        "parameters": [
          {
            "id": 209,
            "name": "fieldsKey",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          }
        ],
        "type": {
          "type": "array",
          "elementType": {
            "type": "intrinsic",
            "name": "string"
          }
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
        "line": 115,
        "character": 27
      }
    ]
  },
  {
    "id": 210,
    "name": "setValueForKey",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPrivate": true
    },
    "signatures": [
      {
        "id": 211,
        "name": "setValueForKey",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Set a value for the specified key notifying any listeners"
        },
        "parameters": [
          {
            "id": 212,
            "name": "key",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "intrinsic",
              "name": "any"
            }
          },
          {
            "id": 213,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "typeParameter",
                  "name": "T",
                  "constraint": {
                    "type": "reference",
                    "name": "ViewModel",
                    "id": 309
                  }
                },
                {
                  "type": "reference",
                  "name": "RecordPointer",
                  "id": 184,
                  "typeArguments": [
                    {
                      "type": "typeParameter",
                      "name": "T",
                      "constraint": {
                        "type": "reference",
                        "name": "ViewModel",
                        "id": 309
                      }
                    }
                  ]
                },
                {
                  "type": "intrinsic",
                  "name": "null"
                }
              ]
            }
          }
        ],
        "type": {
          "type": "union",
          "types": [
            {
              "type": "reference",
              "name": "Map",
              "typeArguments": [
                {
                  "type": "intrinsic",
                  "name": "string"
                },
                {
                  "type": "union",
                  "types": [
                    {
                      "type": "typeParameter",
                      "name": "T",
                      "constraint": {
                        "type": "reference",
                        "name": "ViewModel",
                        "id": 309
                      }
                    },
                    {
                      "type": "reference",
                      "name": "RecordPointer",
                      "id": 184,
                      "typeArguments": [
                        {
                          "type": "typeParameter",
                          "name": "T",
                          "constraint": {
                            "type": "reference",
                            "name": "ViewModel",
                            "id": 309
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "intrinsic",
              "name": "null"
            }
          ]
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
        "line": 122,
        "character": 26
      }
    ]
  },
  {
    "id": 184,
    "name": "RecordPointer",
    "kind": 128,
    "kindString": "Class",
    "flags": {},
    "comment": {
      "shortText": "Points to a record that is cached already. The purpose of this is to have a single object\nin memory and only clone it as needed (eg. a single instance of the RecordPointer is stored\non multiple other cache keys). We could do it by storing the record directly but we'd then\nhave to check if the _assignedFields is what we expect and then clone - it's easier and faster\nto just check if it's an instanceof RecordPointer"
    },
    "typeParameter": [
      {
        "id": 185,
        "name": "T",
        "kind": 131072,
        "kindString": "Type parameter",
        "flags": {},
        "type": {
          "type": "reference",
          "name": "ViewModel",
          "id": 309
        }
      }
    ],
    "groups": [
      {
        "title": "Constructors",
        "kind": 512,
        "children": [187]
      },
      {
        "title": "Properties",
        "kind": 1024,
        "children": [186]
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
        "line": 11,
        "character": 19
      }
    ],
    "childIds": [187, 186]
  },
  {
    "id": 187,
    "name": "constructor",
    "kind": 512,
    "kindString": "Constructor",
    "flags": {},
    "signatures": [
      {
        "id": 188,
        "name": "new RecordPointer",
        "kind": 16384,
        "kindString": "Constructor signature",
        "flags": {},
        "parameters": [
          {
            "id": 189,
            "name": "record",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "typeParameter",
              "name": "T",
              "constraint": {
                "type": "reference",
                "name": "ViewModel",
                "id": 309
              }
            }
          }
        ],
        "type": {
          "type": "reference",
          "name": "RecordPointer",
          "id": 184
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
        "line": 12,
        "character": 14
      }
    ]
  },
  {
    "id": 186,
    "name": "record",
    "kind": 1024,
    "kindString": "Property",
    "flags": {},
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
        "line": 12,
        "character": 10
      }
    ],
    "type": {
      "type": "typeParameter",
      "name": "T",
      "constraint": {
        "type": "reference",
        "name": "ViewModel",
        "id": 309
      }
    }
  },
  {
    "id": 1315,
    "name": "SlugField",
    "kind": 128,
    "kindString": "Class",
    "flags": {
      "isExported": true
    },
    "groups": [
      {
        "title": "Constructors",
        "kind": 512,
        "children": [1317]
      },
      {
        "title": "Properties",
        "kind": 1024,
        "children": [1334, 1331, 1330, 1329, 1316, 1332, 1328, 1333]
      },
      {
        "title": "Accessors",
        "kind": 262144,
        "children": [1349, 1324, 1320]
      },
      {
        "title": "Methods",
        "kind": 2048,
        "children": [1357, 1337, 1353, 1343, 1340, 1346, 1351]
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/SlugField.ts",
        "line": 3,
        "character": 30
      }
    ],
    "extendedTypes": [
      {
        "type": "reference",
        "name": "CharField",
        "id": 467
      }
    ],
    "childIds": [
      1317,
      1334,
      1331,
      1330,
      1329,
      1316,
      1332,
      1328,
      1333,
      1349,
      1324,
      1320,
      1357,
      1337,
      1353,
      1343,
      1340,
      1346,
      1351
    ]
  },
  {
    "id": 1317,
    "name": "constructor",
    "kind": 512,
    "kindString": "Constructor",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 1318,
        "name": "new SlugField",
        "kind": 16384,
        "kindString": "Constructor signature",
        "flags": {},
        "parameters": [
          {
            "id": 1319,
            "name": "values",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "name": "CharFieldProps",
              "id": 511
            },
            "defaultValue": " {}"
          }
        ],
        "type": {
          "type": "reference",
          "name": "SlugField",
          "id": 1315
        },
        "overwrites": {
          "type": "reference",
          "name": "Field.__constructor",
          "id": 45
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "CharField.__constructor",
          "id": 469
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/CharField.ts",
        "line": 11,
        "character": 30
      }
    ],
    "overwrites": {
      "type": "reference",
      "name": "Field.__constructor",
      "id": 45
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "CharField.__constructor",
      "id": 469
    }
  },
  {
    "id": 1334,
    "name": "_defaultValue",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isProtected": true,
      "isExported": true,
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 79,
        "character": 27
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "string"
        },
        {
          "type": "reflection",
          "declaration": {
            "id": 1335,
            "name": "__type",
            "kind": 65536,
            "kindString": "Type literal",
            "flags": {},
            "signatures": [
              {
                "id": 1336,
                "name": "__call",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "reference",
                  "name": "Promise",
                  "typeArguments": [
                    {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  ]
                }
              }
            ],
            "sources": [
              {
                "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
                "line": 79,
                "character": 33
              }
            ]
          }
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field._defaultValue",
      "id": 42
    }
  },
  {
    "id": 1331,
    "name": "choices",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true,
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 67,
        "character": 18
      }
    ],
    "type": {
      "type": "reference",
      "name": "Map",
      "typeArguments": [
        {
          "type": "intrinsic",
          "name": "string"
        },
        {
          "type": "intrinsic",
          "name": "string"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.choices",
      "id": 39
    }
  },
  {
    "id": 1330,
    "name": "helpText",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true,
      "isOptional": true
    },
    "comment": {
      "shortText": "Help text that can be displayed with the form widget"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 61,
        "character": 19
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "undefined"
        },
        {
          "type": "intrinsic",
          "name": "string"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.helpText",
      "id": 38
    }
  },
  {
    "id": 1329,
    "name": "label",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true,
      "isOptional": true
    },
    "comment": {
      "shortText": "Label that can be displayed as the form label for a widget",
      "text": "If not specified will be generated from `name`.\n"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 57,
        "character": 16
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "undefined"
        },
        {
          "type": "intrinsic",
          "name": "string"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.label",
      "id": 37
    }
  },
  {
    "id": 1316,
    "name": "maxLength",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true,
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/CharField.ts",
        "line": 11,
        "character": 20
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "undefined"
        },
        {
          "type": "intrinsic",
          "name": "number"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "CharField.maxLength",
      "id": 468
    }
  },
  {
    "id": 1332,
    "name": "readOnly",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "comment": {
      "shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 72,
        "character": 19
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "boolean"
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.readOnly",
      "id": 40
    }
  },
  {
    "id": 1328,
    "name": "required",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "comment": {
      "shortText": "Is this field required when saving a record?"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 51,
        "character": 19
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "boolean"
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.required",
      "id": 36
    }
  },
  {
    "id": 1333,
    "name": "writeOnly",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "comment": {
      "shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 77,
        "character": 20
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "boolean"
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.writeOnly",
      "id": 41
    }
  },
  {
    "id": 1349,
    "name": "defaultValue",
    "kind": 262144,
    "kindString": "Accessor",
    "flags": {
      "isExported": true
    },
    "comment": {
      "shortText": "Get the default value for this field. Note that this returns a promise that resolve to the default value\nas some default values may need to resolve data from a backend."
    },
    "getSignature": [
      {
        "id": 1350,
        "name": "__get",
        "kind": 524288,
        "kindString": "Get signature",
        "flags": {},
        "comment": {
          "shortText": "Get the default value for this field. Note that this returns a promise that resolve to the default value\nas some default values may need to resolve data from a backend."
        },
        "type": {
          "type": "reference",
          "name": "Promise",
          "typeArguments": [
            {
              "type": "union",
              "types": [
                {
                  "type": "intrinsic",
                  "name": "string"
                },
                {
                  "type": "intrinsic",
                  "name": "null"
                },
                {
                  "type": "intrinsic",
                  "name": "undefined"
                }
              ]
            }
          ]
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.defaultValue",
          "id": 60
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 192,
        "character": 20
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.defaultValue",
      "id": 60
    }
  },
  {
    "id": 1324,
    "name": "name",
    "kind": 262144,
    "kindString": "Accessor",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "getSignature": [
      {
        "id": 1327,
        "name": "__get",
        "kind": 524288,
        "kindString": "Get signature",
        "flags": {},
        "type": {
          "type": "intrinsic",
          "name": "string"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.name",
          "id": 32
        }
      }
    ],
    "setSignature": [
      {
        "id": 1325,
        "name": "__set",
        "kind": 1048576,
        "kindString": "Set signature",
        "flags": {},
        "parameters": [
          {
            "id": 1326,
            "name": "name",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "void"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.name",
          "id": 32
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 41,
        "character": 19
      },
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 44,
        "character": 19
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.name",
      "id": 32
    }
  },
  {
    "id": 1320,
    "name": "parent",
    "kind": 262144,
    "kindString": "Accessor",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "getSignature": [
      {
        "id": 1323,
        "name": "__get",
        "kind": 524288,
        "kindString": "Get signature",
        "flags": {},
        "type": {
          "type": "reference",
          "name": "FieldBinder",
          "id": 79
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.parent",
          "id": 27
        }
      }
    ],
    "setSignature": [
      {
        "id": 1321,
        "name": "__set",
        "kind": 1048576,
        "kindString": "Set signature",
        "flags": {},
        "parameters": [
          {
            "id": 1322,
            "name": "viewModel",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "name": "FieldBinder",
              "id": 79
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "void"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.parent",
          "id": 27
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 30,
        "character": 21
      },
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 33,
        "character": 21
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.parent",
      "id": 27
    }
  },
  {
    "id": 1357,
    "name": "clone",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 1358,
        "name": "clone",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Returns a clone of the field that should be functionally equivalent"
        },
        "type": {
          "type": "reference",
          "name": "Field",
          "id": 24,
          "typeArguments": [
            {
              "type": "intrinsic",
              "name": "string"
            }
          ]
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.clone",
          "id": 68
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 216,
        "character": 16
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.clone",
      "id": 68
    }
  },
  {
    "id": 1337,
    "name": "format",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 1338,
        "name": "format",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
        },
        "parameters": [
          {
            "id": 1339,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "\n"
            },
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "any"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.format",
          "id": 48
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 137,
        "character": 17
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.format",
      "id": 48
    }
  },
  {
    "id": 1353,
    "name": "isEqual",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 1354,
        "name": "isEqual",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Should two values be considered equal?",
          "text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
        },
        "parameters": [
          {
            "id": 1355,
            "name": "value1",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          },
          {
            "id": 1356,
            "name": "value2",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.isEqual",
          "id": 64
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 209,
        "character": 18
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.isEqual",
      "id": 64
    }
  },
  {
    "id": 1343,
    "name": "normalize",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 1344,
        "name": "normalize",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
          "text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
        },
        "parameters": [
          {
            "id": 1345,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "\n"
            },
            "type": {
              "type": "intrinsic",
              "name": "any"
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "string"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.normalize",
          "id": 54
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 175,
        "character": 20
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.normalize",
      "id": 54
    }
  },
  {
    "id": 1340,
    "name": "parse",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 1341,
        "name": "parse",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
        },
        "parameters": [
          {
            "id": 1342,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "\n"
            },
            "type": {
              "type": "intrinsic",
              "name": "any"
            }
          }
        ],
        "type": {
          "type": "union",
          "types": [
            {
              "type": "intrinsic",
              "name": "string"
            },
            {
              "type": "intrinsic",
              "name": "null"
            }
          ]
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.parse",
          "id": 51
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 146,
        "character": 16
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.parse",
      "id": 51
    }
  },
  {
    "id": 1346,
    "name": "toJS",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 1347,
        "name": "toJS",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
        },
        "parameters": [
          {
            "id": 1348,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "\n"
            },
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          }
        ],
        "type": {
          "type": "union",
          "types": [
            {
              "type": "intrinsic",
              "name": "string"
            },
            {
              "type": "intrinsic",
              "name": "number"
            },
            {
              "type": "intrinsic",
              "name": "null"
            },
            {
              "type": "reference",
              "name": "__type"
            }
          ]
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.toJS",
          "id": 57
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 184,
        "character": 8
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.toJS",
      "id": 57
    }
  },
  {
    "id": 1351,
    "name": "toString",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 1352,
        "name": "toString",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "type": {
          "type": "intrinsic",
          "name": "string"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.toString",
          "id": 62
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 199,
        "character": 12
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.toString",
      "id": 62
    }
  },
  {
    "id": 1360,
    "name": "TextField",
    "kind": 128,
    "kindString": "Class",
    "flags": {
      "isExported": true
    },
    "groups": [
      {
        "title": "Constructors",
        "kind": 512,
        "children": [1362]
      },
      {
        "title": "Properties",
        "kind": 1024,
        "children": [1379, 1376, 1375, 1374, 1361, 1377, 1373, 1378]
      },
      {
        "title": "Accessors",
        "kind": 262144,
        "children": [1394, 1369, 1365]
      },
      {
        "title": "Methods",
        "kind": 2048,
        "children": [1402, 1382, 1398, 1388, 1385, 1391, 1396]
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/TextField.ts",
        "line": 3,
        "character": 30
      }
    ],
    "extendedTypes": [
      {
        "type": "reference",
        "name": "CharField",
        "id": 467
      }
    ],
    "childIds": [
      1362,
      1379,
      1376,
      1375,
      1374,
      1361,
      1377,
      1373,
      1378,
      1394,
      1369,
      1365,
      1402,
      1382,
      1398,
      1388,
      1385,
      1391,
      1396
    ]
  },
  {
    "id": 1362,
    "name": "constructor",
    "kind": 512,
    "kindString": "Constructor",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 1363,
        "name": "new TextField",
        "kind": 16384,
        "kindString": "Constructor signature",
        "flags": {},
        "parameters": [
          {
            "id": 1364,
            "name": "values",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "name": "CharFieldProps",
              "id": 511
            },
            "defaultValue": " {}"
          }
        ],
        "type": {
          "type": "reference",
          "name": "TextField",
          "id": 1360
        },
        "overwrites": {
          "type": "reference",
          "name": "Field.__constructor",
          "id": 45
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "CharField.__constructor",
          "id": 469
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/CharField.ts",
        "line": 11,
        "character": 30
      }
    ],
    "overwrites": {
      "type": "reference",
      "name": "Field.__constructor",
      "id": 45
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "CharField.__constructor",
      "id": 469
    }
  },
  {
    "id": 1379,
    "name": "_defaultValue",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isProtected": true,
      "isExported": true,
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 79,
        "character": 27
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "string"
        },
        {
          "type": "reflection",
          "declaration": {
            "id": 1380,
            "name": "__type",
            "kind": 65536,
            "kindString": "Type literal",
            "flags": {},
            "signatures": [
              {
                "id": 1381,
                "name": "__call",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "reference",
                  "name": "Promise",
                  "typeArguments": [
                    {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  ]
                }
              }
            ],
            "sources": [
              {
                "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
                "line": 79,
                "character": 33
              }
            ]
          }
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field._defaultValue",
      "id": 42
    }
  },
  {
    "id": 1376,
    "name": "choices",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true,
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 67,
        "character": 18
      }
    ],
    "type": {
      "type": "reference",
      "name": "Map",
      "typeArguments": [
        {
          "type": "intrinsic",
          "name": "string"
        },
        {
          "type": "intrinsic",
          "name": "string"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.choices",
      "id": 39
    }
  },
  {
    "id": 1375,
    "name": "helpText",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true,
      "isOptional": true
    },
    "comment": {
      "shortText": "Help text that can be displayed with the form widget"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 61,
        "character": 19
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "undefined"
        },
        {
          "type": "intrinsic",
          "name": "string"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.helpText",
      "id": 38
    }
  },
  {
    "id": 1374,
    "name": "label",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true,
      "isOptional": true
    },
    "comment": {
      "shortText": "Label that can be displayed as the form label for a widget",
      "text": "If not specified will be generated from `name`.\n"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 57,
        "character": 16
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "undefined"
        },
        {
          "type": "intrinsic",
          "name": "string"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.label",
      "id": 37
    }
  },
  {
    "id": 1361,
    "name": "maxLength",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true,
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/CharField.ts",
        "line": 11,
        "character": 20
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "undefined"
        },
        {
          "type": "intrinsic",
          "name": "number"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "CharField.maxLength",
      "id": 468
    }
  },
  {
    "id": 1377,
    "name": "readOnly",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "comment": {
      "shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 72,
        "character": 19
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "boolean"
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.readOnly",
      "id": 40
    }
  },
  {
    "id": 1373,
    "name": "required",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "comment": {
      "shortText": "Is this field required when saving a record?"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 51,
        "character": 19
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "boolean"
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.required",
      "id": 36
    }
  },
  {
    "id": 1378,
    "name": "writeOnly",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "comment": {
      "shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 77,
        "character": 20
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "boolean"
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.writeOnly",
      "id": 41
    }
  },
  {
    "id": 1394,
    "name": "defaultValue",
    "kind": 262144,
    "kindString": "Accessor",
    "flags": {
      "isExported": true
    },
    "comment": {
      "shortText": "Get the default value for this field. Note that this returns a promise that resolve to the default value\nas some default values may need to resolve data from a backend."
    },
    "getSignature": [
      {
        "id": 1395,
        "name": "__get",
        "kind": 524288,
        "kindString": "Get signature",
        "flags": {},
        "comment": {
          "shortText": "Get the default value for this field. Note that this returns a promise that resolve to the default value\nas some default values may need to resolve data from a backend."
        },
        "type": {
          "type": "reference",
          "name": "Promise",
          "typeArguments": [
            {
              "type": "union",
              "types": [
                {
                  "type": "intrinsic",
                  "name": "string"
                },
                {
                  "type": "intrinsic",
                  "name": "null"
                },
                {
                  "type": "intrinsic",
                  "name": "undefined"
                }
              ]
            }
          ]
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.defaultValue",
          "id": 60
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 192,
        "character": 20
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.defaultValue",
      "id": 60
    }
  },
  {
    "id": 1369,
    "name": "name",
    "kind": 262144,
    "kindString": "Accessor",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "getSignature": [
      {
        "id": 1372,
        "name": "__get",
        "kind": 524288,
        "kindString": "Get signature",
        "flags": {},
        "type": {
          "type": "intrinsic",
          "name": "string"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.name",
          "id": 32
        }
      }
    ],
    "setSignature": [
      {
        "id": 1370,
        "name": "__set",
        "kind": 1048576,
        "kindString": "Set signature",
        "flags": {},
        "parameters": [
          {
            "id": 1371,
            "name": "name",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "void"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.name",
          "id": 32
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 41,
        "character": 19
      },
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 44,
        "character": 19
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.name",
      "id": 32
    }
  },
  {
    "id": 1365,
    "name": "parent",
    "kind": 262144,
    "kindString": "Accessor",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "getSignature": [
      {
        "id": 1368,
        "name": "__get",
        "kind": 524288,
        "kindString": "Get signature",
        "flags": {},
        "type": {
          "type": "reference",
          "name": "FieldBinder",
          "id": 79
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.parent",
          "id": 27
        }
      }
    ],
    "setSignature": [
      {
        "id": 1366,
        "name": "__set",
        "kind": 1048576,
        "kindString": "Set signature",
        "flags": {},
        "parameters": [
          {
            "id": 1367,
            "name": "viewModel",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "name": "FieldBinder",
              "id": 79
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "void"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.parent",
          "id": 27
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 30,
        "character": 21
      },
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 33,
        "character": 21
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.parent",
      "id": 27
    }
  },
  {
    "id": 1402,
    "name": "clone",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 1403,
        "name": "clone",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Returns a clone of the field that should be functionally equivalent"
        },
        "type": {
          "type": "reference",
          "name": "Field",
          "id": 24,
          "typeArguments": [
            {
              "type": "intrinsic",
              "name": "string"
            }
          ]
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.clone",
          "id": 68
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 216,
        "character": 16
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.clone",
      "id": 68
    }
  },
  {
    "id": 1382,
    "name": "format",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 1383,
        "name": "format",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
        },
        "parameters": [
          {
            "id": 1384,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "\n"
            },
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "any"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.format",
          "id": 48
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 137,
        "character": 17
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.format",
      "id": 48
    }
  },
  {
    "id": 1398,
    "name": "isEqual",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 1399,
        "name": "isEqual",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Should two values be considered equal?",
          "text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
        },
        "parameters": [
          {
            "id": 1400,
            "name": "value1",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          },
          {
            "id": 1401,
            "name": "value2",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.isEqual",
          "id": 64
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 209,
        "character": 18
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.isEqual",
      "id": 64
    }
  },
  {
    "id": 1388,
    "name": "normalize",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 1389,
        "name": "normalize",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
          "text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
        },
        "parameters": [
          {
            "id": 1390,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "\n"
            },
            "type": {
              "type": "intrinsic",
              "name": "any"
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "string"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.normalize",
          "id": 54
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 175,
        "character": 20
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.normalize",
      "id": 54
    }
  },
  {
    "id": 1385,
    "name": "parse",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 1386,
        "name": "parse",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
        },
        "parameters": [
          {
            "id": 1387,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "\n"
            },
            "type": {
              "type": "intrinsic",
              "name": "any"
            }
          }
        ],
        "type": {
          "type": "union",
          "types": [
            {
              "type": "intrinsic",
              "name": "string"
            },
            {
              "type": "intrinsic",
              "name": "null"
            }
          ]
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.parse",
          "id": 51
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 146,
        "character": 16
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.parse",
      "id": 51
    }
  },
  {
    "id": 1391,
    "name": "toJS",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 1392,
        "name": "toJS",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
        },
        "parameters": [
          {
            "id": 1393,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "\n"
            },
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          }
        ],
        "type": {
          "type": "union",
          "types": [
            {
              "type": "intrinsic",
              "name": "string"
            },
            {
              "type": "intrinsic",
              "name": "number"
            },
            {
              "type": "intrinsic",
              "name": "null"
            },
            {
              "type": "reference",
              "name": "__type"
            }
          ]
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.toJS",
          "id": 57
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 184,
        "character": 8
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.toJS",
      "id": 57
    }
  },
  {
    "id": 1396,
    "name": "toString",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 1397,
        "name": "toString",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "type": {
          "type": "intrinsic",
          "name": "string"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.toString",
          "id": 62
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 199,
        "character": 12
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.toString",
      "id": 62
    }
  },
  {
    "id": 1405,
    "name": "TimeField",
    "kind": 128,
    "kindString": "Class",
    "flags": {
      "isExported": true
    },
    "comment": {
      "shortText": "Time Field.",
      "text": "String based: Native javascript Date does not have a nice way to describe a time-only object. Make sure any third party library of your choice like MomentJS handles this correctly.\n"
    },
    "groups": [
      {
        "title": "Constructors",
        "kind": 512,
        "children": [1423]
      },
      {
        "title": "Properties",
        "kind": 1024,
        "children": [1420, 1417, 1416, 1415, 1418, 1414, 1419]
      },
      {
        "title": "Accessors",
        "kind": 262144,
        "children": [1438, 1410, 1406]
      },
      {
        "title": "Methods",
        "kind": 2048,
        "children": [1446, 1426, 1442, 1432, 1429, 1435, 1440]
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/TimeField.ts",
        "line": 8,
        "character": 30
      }
    ],
    "extendedTypes": [
      {
        "type": "reference",
        "name": "Field",
        "id": 24,
        "typeArguments": [
          {
            "type": "intrinsic",
            "name": "string"
          }
        ]
      }
    ],
    "childIds": [
      1423,
      1420,
      1417,
      1416,
      1415,
      1418,
      1414,
      1419,
      1438,
      1410,
      1406,
      1446,
      1426,
      1442,
      1432,
      1429,
      1435,
      1440
    ]
  },
  {
    "id": 1423,
    "name": "constructor",
    "kind": 512,
    "kindString": "Constructor",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 1424,
        "name": "new TimeField",
        "kind": 16384,
        "kindString": "Constructor signature",
        "flags": {},
        "parameters": [
          {
            "id": 1425,
            "name": "values",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "name": "Props",
              "id": 4,
              "typeArguments": [
                {
                  "type": "intrinsic",
                  "name": "string"
                }
              ]
            },
            "defaultValue": " {}"
          }
        ],
        "type": {
          "type": "reference",
          "name": "TimeField",
          "id": 1405
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.__constructor",
          "id": 45
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 79,
        "character": 53
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.__constructor",
      "id": 45
    }
  },
  {
    "id": 1420,
    "name": "_defaultValue",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isProtected": true,
      "isExported": true,
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 79,
        "character": 27
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "string"
        },
        {
          "type": "reflection",
          "declaration": {
            "id": 1421,
            "name": "__type",
            "kind": 65536,
            "kindString": "Type literal",
            "flags": {},
            "signatures": [
              {
                "id": 1422,
                "name": "__call",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "reference",
                  "name": "Promise",
                  "typeArguments": [
                    {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  ]
                }
              }
            ],
            "sources": [
              {
                "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
                "line": 79,
                "character": 33
              }
            ]
          }
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field._defaultValue",
      "id": 42
    }
  },
  {
    "id": 1417,
    "name": "choices",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true,
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 67,
        "character": 18
      }
    ],
    "type": {
      "type": "reference",
      "name": "Map",
      "typeArguments": [
        {
          "type": "intrinsic",
          "name": "string"
        },
        {
          "type": "intrinsic",
          "name": "string"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.choices",
      "id": 39
    }
  },
  {
    "id": 1416,
    "name": "helpText",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true,
      "isOptional": true
    },
    "comment": {
      "shortText": "Help text that can be displayed with the form widget"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 61,
        "character": 19
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "undefined"
        },
        {
          "type": "intrinsic",
          "name": "string"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.helpText",
      "id": 38
    }
  },
  {
    "id": 1415,
    "name": "label",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true,
      "isOptional": true
    },
    "comment": {
      "shortText": "Label that can be displayed as the form label for a widget",
      "text": "If not specified will be generated from `name`.\n"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 57,
        "character": 16
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "undefined"
        },
        {
          "type": "intrinsic",
          "name": "string"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.label",
      "id": 37
    }
  },
  {
    "id": 1418,
    "name": "readOnly",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "comment": {
      "shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 72,
        "character": 19
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "boolean"
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.readOnly",
      "id": 40
    }
  },
  {
    "id": 1414,
    "name": "required",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "comment": {
      "shortText": "Is this field required when saving a record?"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 51,
        "character": 19
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "boolean"
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.required",
      "id": 36
    }
  },
  {
    "id": 1419,
    "name": "writeOnly",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "comment": {
      "shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 77,
        "character": 20
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "boolean"
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.writeOnly",
      "id": 41
    }
  },
  {
    "id": 1438,
    "name": "defaultValue",
    "kind": 262144,
    "kindString": "Accessor",
    "flags": {
      "isExported": true
    },
    "comment": {
      "shortText": "Get the default value for this field. Note that this returns a promise that resolve to the default value\nas some default values may need to resolve data from a backend."
    },
    "getSignature": [
      {
        "id": 1439,
        "name": "__get",
        "kind": 524288,
        "kindString": "Get signature",
        "flags": {},
        "comment": {
          "shortText": "Get the default value for this field. Note that this returns a promise that resolve to the default value\nas some default values may need to resolve data from a backend."
        },
        "type": {
          "type": "reference",
          "name": "Promise",
          "typeArguments": [
            {
              "type": "union",
              "types": [
                {
                  "type": "intrinsic",
                  "name": "string"
                },
                {
                  "type": "intrinsic",
                  "name": "null"
                },
                {
                  "type": "intrinsic",
                  "name": "undefined"
                }
              ]
            }
          ]
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.defaultValue",
          "id": 60
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 192,
        "character": 20
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.defaultValue",
      "id": 60
    }
  },
  {
    "id": 1410,
    "name": "name",
    "kind": 262144,
    "kindString": "Accessor",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "getSignature": [
      {
        "id": 1413,
        "name": "__get",
        "kind": 524288,
        "kindString": "Get signature",
        "flags": {},
        "type": {
          "type": "intrinsic",
          "name": "string"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.name",
          "id": 32
        }
      }
    ],
    "setSignature": [
      {
        "id": 1411,
        "name": "__set",
        "kind": 1048576,
        "kindString": "Set signature",
        "flags": {},
        "parameters": [
          {
            "id": 1412,
            "name": "name",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "void"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.name",
          "id": 32
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 41,
        "character": 19
      },
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 44,
        "character": 19
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.name",
      "id": 32
    }
  },
  {
    "id": 1406,
    "name": "parent",
    "kind": 262144,
    "kindString": "Accessor",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "getSignature": [
      {
        "id": 1409,
        "name": "__get",
        "kind": 524288,
        "kindString": "Get signature",
        "flags": {},
        "type": {
          "type": "reference",
          "name": "FieldBinder",
          "id": 79
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.parent",
          "id": 27
        }
      }
    ],
    "setSignature": [
      {
        "id": 1407,
        "name": "__set",
        "kind": 1048576,
        "kindString": "Set signature",
        "flags": {},
        "parameters": [
          {
            "id": 1408,
            "name": "viewModel",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "name": "FieldBinder",
              "id": 79
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "void"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.parent",
          "id": 27
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 30,
        "character": 21
      },
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 33,
        "character": 21
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.parent",
      "id": 27
    }
  },
  {
    "id": 1446,
    "name": "clone",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 1447,
        "name": "clone",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Returns a clone of the field that should be functionally equivalent"
        },
        "type": {
          "type": "reference",
          "name": "Field",
          "id": 24,
          "typeArguments": [
            {
              "type": "intrinsic",
              "name": "string"
            }
          ]
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.clone",
          "id": 68
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 216,
        "character": 16
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.clone",
      "id": 68
    }
  },
  {
    "id": 1426,
    "name": "format",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 1427,
        "name": "format",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
        },
        "parameters": [
          {
            "id": 1428,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "\n"
            },
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "any"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.format",
          "id": 48
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 137,
        "character": 17
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.format",
      "id": 48
    }
  },
  {
    "id": 1442,
    "name": "isEqual",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 1443,
        "name": "isEqual",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Should two values be considered equal?",
          "text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
        },
        "parameters": [
          {
            "id": 1444,
            "name": "value1",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          },
          {
            "id": 1445,
            "name": "value2",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.isEqual",
          "id": 64
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 209,
        "character": 18
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.isEqual",
      "id": 64
    }
  },
  {
    "id": 1432,
    "name": "normalize",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 1433,
        "name": "normalize",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
          "text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
        },
        "parameters": [
          {
            "id": 1434,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "\n"
            },
            "type": {
              "type": "intrinsic",
              "name": "any"
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "string"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.normalize",
          "id": 54
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 175,
        "character": 20
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.normalize",
      "id": 54
    }
  },
  {
    "id": 1429,
    "name": "parse",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 1430,
        "name": "parse",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
        },
        "parameters": [
          {
            "id": 1431,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "\n"
            },
            "type": {
              "type": "intrinsic",
              "name": "any"
            }
          }
        ],
        "type": {
          "type": "union",
          "types": [
            {
              "type": "intrinsic",
              "name": "string"
            },
            {
              "type": "intrinsic",
              "name": "null"
            }
          ]
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.parse",
          "id": 51
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 146,
        "character": 16
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.parse",
      "id": 51
    }
  },
  {
    "id": 1435,
    "name": "toJS",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 1436,
        "name": "toJS",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
        },
        "parameters": [
          {
            "id": 1437,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "\n"
            },
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          }
        ],
        "type": {
          "type": "union",
          "types": [
            {
              "type": "intrinsic",
              "name": "string"
            },
            {
              "type": "intrinsic",
              "name": "number"
            },
            {
              "type": "intrinsic",
              "name": "null"
            },
            {
              "type": "reference",
              "name": "__type"
            }
          ]
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.toJS",
          "id": 57
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 184,
        "character": 8
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.toJS",
      "id": 57
    }
  },
  {
    "id": 1440,
    "name": "toString",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 1441,
        "name": "toString",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "type": {
          "type": "intrinsic",
          "name": "string"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.toString",
          "id": 62
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 199,
        "character": 12
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.toString",
      "id": 62
    }
  },
  {
    "id": 1449,
    "name": "URLField",
    "kind": 128,
    "kindString": "Class",
    "flags": {
      "isExported": true
    },
    "groups": [
      {
        "title": "Constructors",
        "kind": 512,
        "children": [1451]
      },
      {
        "title": "Properties",
        "kind": 1024,
        "children": [1468, 1465, 1464, 1463, 1450, 1466, 1462, 1467]
      },
      {
        "title": "Accessors",
        "kind": 262144,
        "children": [1483, 1458, 1454]
      },
      {
        "title": "Methods",
        "kind": 2048,
        "children": [1491, 1471, 1487, 1477, 1474, 1480, 1485]
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/URLField.ts",
        "line": 3,
        "character": 29
      }
    ],
    "extendedTypes": [
      {
        "type": "reference",
        "name": "CharField",
        "id": 467
      }
    ],
    "childIds": [
      1451,
      1468,
      1465,
      1464,
      1463,
      1450,
      1466,
      1462,
      1467,
      1483,
      1458,
      1454,
      1491,
      1471,
      1487,
      1477,
      1474,
      1480,
      1485
    ]
  },
  {
    "id": 1451,
    "name": "constructor",
    "kind": 512,
    "kindString": "Constructor",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 1452,
        "name": "new URLField",
        "kind": 16384,
        "kindString": "Constructor signature",
        "flags": {},
        "parameters": [
          {
            "id": 1453,
            "name": "values",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "name": "CharFieldProps",
              "id": 511
            },
            "defaultValue": " {}"
          }
        ],
        "type": {
          "type": "reference",
          "name": "URLField",
          "id": 1449
        },
        "overwrites": {
          "type": "reference",
          "name": "Field.__constructor",
          "id": 45
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "CharField.__constructor",
          "id": 469
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/CharField.ts",
        "line": 11,
        "character": 30
      }
    ],
    "overwrites": {
      "type": "reference",
      "name": "Field.__constructor",
      "id": 45
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "CharField.__constructor",
      "id": 469
    }
  },
  {
    "id": 1468,
    "name": "_defaultValue",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isProtected": true,
      "isExported": true,
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 79,
        "character": 27
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "string"
        },
        {
          "type": "reflection",
          "declaration": {
            "id": 1469,
            "name": "__type",
            "kind": 65536,
            "kindString": "Type literal",
            "flags": {},
            "signatures": [
              {
                "id": 1470,
                "name": "__call",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "reference",
                  "name": "Promise",
                  "typeArguments": [
                    {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  ]
                }
              }
            ],
            "sources": [
              {
                "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
                "line": 79,
                "character": 33
              }
            ]
          }
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field._defaultValue",
      "id": 42
    }
  },
  {
    "id": 1465,
    "name": "choices",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true,
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 67,
        "character": 18
      }
    ],
    "type": {
      "type": "reference",
      "name": "Map",
      "typeArguments": [
        {
          "type": "intrinsic",
          "name": "string"
        },
        {
          "type": "intrinsic",
          "name": "string"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.choices",
      "id": 39
    }
  },
  {
    "id": 1464,
    "name": "helpText",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true,
      "isOptional": true
    },
    "comment": {
      "shortText": "Help text that can be displayed with the form widget"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 61,
        "character": 19
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "undefined"
        },
        {
          "type": "intrinsic",
          "name": "string"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.helpText",
      "id": 38
    }
  },
  {
    "id": 1463,
    "name": "label",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true,
      "isOptional": true
    },
    "comment": {
      "shortText": "Label that can be displayed as the form label for a widget",
      "text": "If not specified will be generated from `name`.\n"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 57,
        "character": 16
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "undefined"
        },
        {
          "type": "intrinsic",
          "name": "string"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.label",
      "id": 37
    }
  },
  {
    "id": 1450,
    "name": "maxLength",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true,
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/CharField.ts",
        "line": 11,
        "character": 20
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "undefined"
        },
        {
          "type": "intrinsic",
          "name": "number"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "CharField.maxLength",
      "id": 468
    }
  },
  {
    "id": 1466,
    "name": "readOnly",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "comment": {
      "shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 72,
        "character": 19
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "boolean"
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.readOnly",
      "id": 40
    }
  },
  {
    "id": 1462,
    "name": "required",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "comment": {
      "shortText": "Is this field required when saving a record?"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 51,
        "character": 19
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "boolean"
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.required",
      "id": 36
    }
  },
  {
    "id": 1467,
    "name": "writeOnly",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "comment": {
      "shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 77,
        "character": 20
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "boolean"
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.writeOnly",
      "id": 41
    }
  },
  {
    "id": 1483,
    "name": "defaultValue",
    "kind": 262144,
    "kindString": "Accessor",
    "flags": {
      "isExported": true
    },
    "comment": {
      "shortText": "Get the default value for this field. Note that this returns a promise that resolve to the default value\nas some default values may need to resolve data from a backend."
    },
    "getSignature": [
      {
        "id": 1484,
        "name": "__get",
        "kind": 524288,
        "kindString": "Get signature",
        "flags": {},
        "comment": {
          "shortText": "Get the default value for this field. Note that this returns a promise that resolve to the default value\nas some default values may need to resolve data from a backend."
        },
        "type": {
          "type": "reference",
          "name": "Promise",
          "typeArguments": [
            {
              "type": "union",
              "types": [
                {
                  "type": "intrinsic",
                  "name": "string"
                },
                {
                  "type": "intrinsic",
                  "name": "null"
                },
                {
                  "type": "intrinsic",
                  "name": "undefined"
                }
              ]
            }
          ]
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.defaultValue",
          "id": 60
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 192,
        "character": 20
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.defaultValue",
      "id": 60
    }
  },
  {
    "id": 1458,
    "name": "name",
    "kind": 262144,
    "kindString": "Accessor",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "getSignature": [
      {
        "id": 1461,
        "name": "__get",
        "kind": 524288,
        "kindString": "Get signature",
        "flags": {},
        "type": {
          "type": "intrinsic",
          "name": "string"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.name",
          "id": 32
        }
      }
    ],
    "setSignature": [
      {
        "id": 1459,
        "name": "__set",
        "kind": 1048576,
        "kindString": "Set signature",
        "flags": {},
        "parameters": [
          {
            "id": 1460,
            "name": "name",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "void"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.name",
          "id": 32
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 41,
        "character": 19
      },
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 44,
        "character": 19
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.name",
      "id": 32
    }
  },
  {
    "id": 1454,
    "name": "parent",
    "kind": 262144,
    "kindString": "Accessor",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "getSignature": [
      {
        "id": 1457,
        "name": "__get",
        "kind": 524288,
        "kindString": "Get signature",
        "flags": {},
        "type": {
          "type": "reference",
          "name": "FieldBinder",
          "id": 79
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.parent",
          "id": 27
        }
      }
    ],
    "setSignature": [
      {
        "id": 1455,
        "name": "__set",
        "kind": 1048576,
        "kindString": "Set signature",
        "flags": {},
        "parameters": [
          {
            "id": 1456,
            "name": "viewModel",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "name": "FieldBinder",
              "id": 79
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "void"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.parent",
          "id": 27
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 30,
        "character": 21
      },
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 33,
        "character": 21
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.parent",
      "id": 27
    }
  },
  {
    "id": 1491,
    "name": "clone",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 1492,
        "name": "clone",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Returns a clone of the field that should be functionally equivalent"
        },
        "type": {
          "type": "reference",
          "name": "Field",
          "id": 24,
          "typeArguments": [
            {
              "type": "intrinsic",
              "name": "string"
            }
          ]
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.clone",
          "id": 68
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 216,
        "character": 16
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.clone",
      "id": 68
    }
  },
  {
    "id": 1471,
    "name": "format",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 1472,
        "name": "format",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
        },
        "parameters": [
          {
            "id": 1473,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "\n"
            },
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "any"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.format",
          "id": 48
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 137,
        "character": 17
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.format",
      "id": 48
    }
  },
  {
    "id": 1487,
    "name": "isEqual",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 1488,
        "name": "isEqual",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Should two values be considered equal?",
          "text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
        },
        "parameters": [
          {
            "id": 1489,
            "name": "value1",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          },
          {
            "id": 1490,
            "name": "value2",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.isEqual",
          "id": 64
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 209,
        "character": 18
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.isEqual",
      "id": 64
    }
  },
  {
    "id": 1477,
    "name": "normalize",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 1478,
        "name": "normalize",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
          "text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
        },
        "parameters": [
          {
            "id": 1479,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "\n"
            },
            "type": {
              "type": "intrinsic",
              "name": "any"
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "string"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.normalize",
          "id": 54
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 175,
        "character": 20
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.normalize",
      "id": 54
    }
  },
  {
    "id": 1474,
    "name": "parse",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 1475,
        "name": "parse",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
        },
        "parameters": [
          {
            "id": 1476,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "\n"
            },
            "type": {
              "type": "intrinsic",
              "name": "any"
            }
          }
        ],
        "type": {
          "type": "union",
          "types": [
            {
              "type": "intrinsic",
              "name": "string"
            },
            {
              "type": "intrinsic",
              "name": "null"
            }
          ]
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.parse",
          "id": 51
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 146,
        "character": 16
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.parse",
      "id": 51
    }
  },
  {
    "id": 1480,
    "name": "toJS",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 1481,
        "name": "toJS",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
        },
        "parameters": [
          {
            "id": 1482,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "\n"
            },
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          }
        ],
        "type": {
          "type": "union",
          "types": [
            {
              "type": "intrinsic",
              "name": "string"
            },
            {
              "type": "intrinsic",
              "name": "number"
            },
            {
              "type": "intrinsic",
              "name": "null"
            },
            {
              "type": "reference",
              "name": "__type"
            }
          ]
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.toJS",
          "id": 57
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 184,
        "character": 8
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.toJS",
      "id": 57
    }
  },
  {
    "id": 1485,
    "name": "toString",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 1486,
        "name": "toString",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "type": {
          "type": "intrinsic",
          "name": "string"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.toString",
          "id": 62
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 199,
        "character": 12
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.toString",
      "id": 62
    }
  },
  {
    "id": 1494,
    "name": "UUIDField",
    "kind": 128,
    "kindString": "Class",
    "flags": {
      "isExported": true
    },
    "groups": [
      {
        "title": "Constructors",
        "kind": 512,
        "children": [1496]
      },
      {
        "title": "Properties",
        "kind": 1024,
        "children": [1513, 1510, 1509, 1508, 1495, 1511, 1507, 1512]
      },
      {
        "title": "Accessors",
        "kind": 262144,
        "children": [1528, 1503, 1499]
      },
      {
        "title": "Methods",
        "kind": 2048,
        "children": [1536, 1516, 1532, 1522, 1519, 1525, 1530]
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/UUIDField.ts",
        "line": 3,
        "character": 30
      }
    ],
    "extendedTypes": [
      {
        "type": "reference",
        "name": "CharField",
        "id": 467
      }
    ],
    "childIds": [
      1496,
      1513,
      1510,
      1509,
      1508,
      1495,
      1511,
      1507,
      1512,
      1528,
      1503,
      1499,
      1536,
      1516,
      1532,
      1522,
      1519,
      1525,
      1530
    ]
  },
  {
    "id": 1496,
    "name": "constructor",
    "kind": 512,
    "kindString": "Constructor",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 1497,
        "name": "new UUIDField",
        "kind": 16384,
        "kindString": "Constructor signature",
        "flags": {},
        "parameters": [
          {
            "id": 1498,
            "name": "values",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "name": "CharFieldProps",
              "id": 511
            },
            "defaultValue": " {}"
          }
        ],
        "type": {
          "type": "reference",
          "name": "UUIDField",
          "id": 1494
        },
        "overwrites": {
          "type": "reference",
          "name": "Field.__constructor",
          "id": 45
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "CharField.__constructor",
          "id": 469
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/CharField.ts",
        "line": 11,
        "character": 30
      }
    ],
    "overwrites": {
      "type": "reference",
      "name": "Field.__constructor",
      "id": 45
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "CharField.__constructor",
      "id": 469
    }
  },
  {
    "id": 1513,
    "name": "_defaultValue",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isProtected": true,
      "isExported": true,
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 79,
        "character": 27
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "string"
        },
        {
          "type": "reflection",
          "declaration": {
            "id": 1514,
            "name": "__type",
            "kind": 65536,
            "kindString": "Type literal",
            "flags": {},
            "signatures": [
              {
                "id": 1515,
                "name": "__call",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "reference",
                  "name": "Promise",
                  "typeArguments": [
                    {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  ]
                }
              }
            ],
            "sources": [
              {
                "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
                "line": 79,
                "character": 33
              }
            ]
          }
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field._defaultValue",
      "id": 42
    }
  },
  {
    "id": 1510,
    "name": "choices",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true,
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 67,
        "character": 18
      }
    ],
    "type": {
      "type": "reference",
      "name": "Map",
      "typeArguments": [
        {
          "type": "intrinsic",
          "name": "string"
        },
        {
          "type": "intrinsic",
          "name": "string"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.choices",
      "id": 39
    }
  },
  {
    "id": 1509,
    "name": "helpText",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true,
      "isOptional": true
    },
    "comment": {
      "shortText": "Help text that can be displayed with the form widget"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 61,
        "character": 19
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "undefined"
        },
        {
          "type": "intrinsic",
          "name": "string"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.helpText",
      "id": 38
    }
  },
  {
    "id": 1508,
    "name": "label",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true,
      "isOptional": true
    },
    "comment": {
      "shortText": "Label that can be displayed as the form label for a widget",
      "text": "If not specified will be generated from `name`.\n"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 57,
        "character": 16
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "undefined"
        },
        {
          "type": "intrinsic",
          "name": "string"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.label",
      "id": 37
    }
  },
  {
    "id": 1495,
    "name": "maxLength",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true,
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/CharField.ts",
        "line": 11,
        "character": 20
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "undefined"
        },
        {
          "type": "intrinsic",
          "name": "number"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "CharField.maxLength",
      "id": 468
    }
  },
  {
    "id": 1511,
    "name": "readOnly",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "comment": {
      "shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 72,
        "character": 19
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "boolean"
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.readOnly",
      "id": 40
    }
  },
  {
    "id": 1507,
    "name": "required",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "comment": {
      "shortText": "Is this field required when saving a record?"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 51,
        "character": 19
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "boolean"
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.required",
      "id": 36
    }
  },
  {
    "id": 1512,
    "name": "writeOnly",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "comment": {
      "shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 77,
        "character": 20
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "boolean"
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.writeOnly",
      "id": 41
    }
  },
  {
    "id": 1528,
    "name": "defaultValue",
    "kind": 262144,
    "kindString": "Accessor",
    "flags": {
      "isExported": true
    },
    "comment": {
      "shortText": "Get the default value for this field. Note that this returns a promise that resolve to the default value\nas some default values may need to resolve data from a backend."
    },
    "getSignature": [
      {
        "id": 1529,
        "name": "__get",
        "kind": 524288,
        "kindString": "Get signature",
        "flags": {},
        "comment": {
          "shortText": "Get the default value for this field. Note that this returns a promise that resolve to the default value\nas some default values may need to resolve data from a backend."
        },
        "type": {
          "type": "reference",
          "name": "Promise",
          "typeArguments": [
            {
              "type": "union",
              "types": [
                {
                  "type": "intrinsic",
                  "name": "string"
                },
                {
                  "type": "intrinsic",
                  "name": "null"
                },
                {
                  "type": "intrinsic",
                  "name": "undefined"
                }
              ]
            }
          ]
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.defaultValue",
          "id": 60
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 192,
        "character": 20
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.defaultValue",
      "id": 60
    }
  },
  {
    "id": 1503,
    "name": "name",
    "kind": 262144,
    "kindString": "Accessor",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "getSignature": [
      {
        "id": 1506,
        "name": "__get",
        "kind": 524288,
        "kindString": "Get signature",
        "flags": {},
        "type": {
          "type": "intrinsic",
          "name": "string"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.name",
          "id": 32
        }
      }
    ],
    "setSignature": [
      {
        "id": 1504,
        "name": "__set",
        "kind": 1048576,
        "kindString": "Set signature",
        "flags": {},
        "parameters": [
          {
            "id": 1505,
            "name": "name",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "void"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.name",
          "id": 32
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 41,
        "character": 19
      },
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 44,
        "character": 19
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.name",
      "id": 32
    }
  },
  {
    "id": 1499,
    "name": "parent",
    "kind": 262144,
    "kindString": "Accessor",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "getSignature": [
      {
        "id": 1502,
        "name": "__get",
        "kind": 524288,
        "kindString": "Get signature",
        "flags": {},
        "type": {
          "type": "reference",
          "name": "FieldBinder",
          "id": 79
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.parent",
          "id": 27
        }
      }
    ],
    "setSignature": [
      {
        "id": 1500,
        "name": "__set",
        "kind": 1048576,
        "kindString": "Set signature",
        "flags": {},
        "parameters": [
          {
            "id": 1501,
            "name": "viewModel",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "name": "FieldBinder",
              "id": 79
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "void"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.parent",
          "id": 27
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 30,
        "character": 21
      },
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 33,
        "character": 21
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.parent",
      "id": 27
    }
  },
  {
    "id": 1536,
    "name": "clone",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 1537,
        "name": "clone",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Returns a clone of the field that should be functionally equivalent"
        },
        "type": {
          "type": "reference",
          "name": "Field",
          "id": 24,
          "typeArguments": [
            {
              "type": "intrinsic",
              "name": "string"
            }
          ]
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.clone",
          "id": 68
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 216,
        "character": 16
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.clone",
      "id": 68
    }
  },
  {
    "id": 1516,
    "name": "format",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 1517,
        "name": "format",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
        },
        "parameters": [
          {
            "id": 1518,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "\n"
            },
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "any"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.format",
          "id": 48
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 137,
        "character": 17
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.format",
      "id": 48
    }
  },
  {
    "id": 1532,
    "name": "isEqual",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 1533,
        "name": "isEqual",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Should two values be considered equal?",
          "text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
        },
        "parameters": [
          {
            "id": 1534,
            "name": "value1",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          },
          {
            "id": 1535,
            "name": "value2",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.isEqual",
          "id": 64
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 209,
        "character": 18
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.isEqual",
      "id": 64
    }
  },
  {
    "id": 1522,
    "name": "normalize",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 1523,
        "name": "normalize",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
          "text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
        },
        "parameters": [
          {
            "id": 1524,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "\n"
            },
            "type": {
              "type": "intrinsic",
              "name": "any"
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "string"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.normalize",
          "id": 54
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 175,
        "character": 20
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.normalize",
      "id": 54
    }
  },
  {
    "id": 1519,
    "name": "parse",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 1520,
        "name": "parse",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
        },
        "parameters": [
          {
            "id": 1521,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "\n"
            },
            "type": {
              "type": "intrinsic",
              "name": "any"
            }
          }
        ],
        "type": {
          "type": "union",
          "types": [
            {
              "type": "intrinsic",
              "name": "string"
            },
            {
              "type": "intrinsic",
              "name": "null"
            }
          ]
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.parse",
          "id": 51
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 146,
        "character": 16
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.parse",
      "id": 51
    }
  },
  {
    "id": 1525,
    "name": "toJS",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 1526,
        "name": "toJS",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
        },
        "parameters": [
          {
            "id": 1527,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "\n"
            },
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          }
        ],
        "type": {
          "type": "union",
          "types": [
            {
              "type": "intrinsic",
              "name": "string"
            },
            {
              "type": "intrinsic",
              "name": "number"
            },
            {
              "type": "intrinsic",
              "name": "null"
            },
            {
              "type": "reference",
              "name": "__type"
            }
          ]
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.toJS",
          "id": 57
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 184,
        "character": 8
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.toJS",
      "id": 57
    }
  },
  {
    "id": 1530,
    "name": "toString",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 1531,
        "name": "toString",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "type": {
          "type": "intrinsic",
          "name": "string"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Field.toString",
          "id": 62
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 199,
        "character": 12
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Field.toString",
      "id": 62
    }
  },
  {
    "id": 15,
    "name": "UnboundFieldError",
    "kind": 128,
    "kindString": "Class",
    "flags": {},
    "typeParameter": [
      {
        "id": 16,
        "name": "T",
        "kind": 131072,
        "kindString": "Type parameter",
        "flags": {}
      }
    ],
    "groups": [
      {
        "title": "Constructors",
        "kind": 512,
        "children": [17]
      },
      {
        "title": "Properties",
        "kind": 1024,
        "children": [21, 20, 22, 23]
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 18,
        "character": 23
      }
    ],
    "extendedTypes": [
      {
        "type": "reference",
        "name": "Error"
      }
    ],
    "childIds": [17, 21, 20, 22, 23]
  },
  {
    "id": 17,
    "name": "constructor",
    "kind": 512,
    "kindString": "Constructor",
    "flags": {},
    "signatures": [
      {
        "id": 18,
        "name": "new UnboundFieldError",
        "kind": 16384,
        "kindString": "Constructor signature",
        "flags": {},
        "parameters": [
          {
            "id": 19,
            "name": "field",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "name": "Field",
              "id": 24,
              "typeArguments": [
                {
                  "type": "typeParameter",
                  "name": "T"
                }
              ]
            }
          }
        ],
        "type": {
          "type": "reference",
          "name": "UnboundFieldError",
          "id": 15
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 18,
        "character": 42
      }
    ]
  },
  {
    "id": 21,
    "name": "message",
    "kind": 1024,
    "kindString": "Property",
    "flags": {},
    "sources": [
      {
        "fileName": "node_modules/typescript/lib/lib.es5.d.ts",
        "line": 974,
        "character": 11
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "string"
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Error.message"
    }
  },
  {
    "id": 20,
    "name": "name",
    "kind": 1024,
    "kindString": "Property",
    "flags": {},
    "sources": [
      {
        "fileName": "node_modules/typescript/lib/lib.es5.d.ts",
        "line": 973,
        "character": 8
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "string"
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Error.name"
    }
  },
  {
    "id": 22,
    "name": "stack",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "node_modules/typescript/lib/lib.es5.d.ts",
        "line": 975,
        "character": 9
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "undefined"
        },
        {
          "type": "intrinsic",
          "name": "string"
        }
      ]
    },
    "overwrites": {
      "type": "reference",
      "name": "Error.stack"
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Error.stack"
    }
  },
  {
    "id": 23,
    "name": "Error",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isStatic": true
    },
    "sources": [
      {
        "fileName": "node_modules/typescript/lib/lib.es5.d.ts",
        "line": 984,
        "character": 17
      }
    ],
    "type": {
      "type": "reference",
      "name": "ErrorConstructor"
    }
  },
  {
    "id": 309,
    "name": "ViewModel",
    "kind": 128,
    "kindString": "Class",
    "flags": {
      "isExported": true
    },
    "comment": {
      "shortText": "Base ViewModel class for any model in the system. This should be extended and have relevant fields and meta data\nset on it:",
      "text": "```js\nclass User extends ViewModel {\n    // Optional; default cache is usually sufficient\n    static cache = new MyCustomCache();\n\n    // Default pkFieldName is 'id'; if you have a different pk specify here\n    // static pkFieldName = 'userId';\n\n    // Used to describe a single user\n    static label = 'User';\n    // User to describe an indeterminate number of users\n    static labelPlural = 'Users';\n\n    static _fields = {\n        userId: new IntegerField({ label: 'User ID' })\n        firstName: new CharField({ label: 'First Name' }),\n        // label is optional; will be generated as 'Last name'\n        lastName: new CharField(),\n    };\n}\n```\n"
    },
    "indexSignature": [
      {
        "id": 336,
        "name": "__index",
        "kind": 8192,
        "kindString": "Index signature",
        "flags": {},
        "comment": {
          "shortText": "Base ViewModel class for any model in the system. This should be extended and have relevant fields and meta data\nset on it:",
          "text": "```js\nclass User extends ViewModel {\n    // Optional; default cache is usually sufficient\n    static cache = new MyCustomCache();\n\n    // Default pkFieldName is 'id'; if you have a different pk specify here\n    // static pkFieldName = 'userId';\n\n    // Used to describe a single user\n    static label = 'User';\n    // User to describe an indeterminate number of users\n    static labelPlural = 'Users';\n\n    static _fields = {\n        userId: new IntegerField({ label: 'User ID' })\n        firstName: new CharField({ label: 'First Name' }),\n        // label is optional; will be generated as 'Last name'\n        lastName: new CharField(),\n    };\n}\n```\n"
        },
        "parameters": [
          {
            "id": 337,
            "name": "fieldName",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "any"
        }
      }
    ],
    "groups": [
      {
        "title": "Constructors",
        "kind": 512,
        "children": [347]
      },
      {
        "title": "Properties",
        "kind": 1024,
        "children": [342, 343, 365, 329, 312, 364, 310, 311]
      },
      {
        "title": "Accessors",
        "kind": 262144,
        "children": [338, 340, 330, 368, 313, 334, 366]
      },
      {
        "title": "Methods",
        "kind": 2048,
        "children": [361, 358, 350, 356, 354, 325, 320, 323, 317, 352]
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/ViewModel.ts",
        "line": 38,
        "character": 30
      }
    ],
    "extendedTypes": [
      {
        "type": "reference",
        "name": "FieldBinder",
        "id": 79
      }
    ],
    "childIds": [
      347,
      342,
      343,
      365,
      329,
      312,
      364,
      310,
      311,
      338,
      340,
      330,
      368,
      313,
      334,
      366,
      361,
      358,
      350,
      356,
      354,
      325,
      320,
      323,
      317,
      352
    ]
  },
  {
    "id": 347,
    "name": "constructor",
    "kind": 512,
    "kindString": "Constructor",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 348,
        "name": "new ViewModel",
        "kind": 16384,
        "kindString": "Constructor signature",
        "flags": {},
        "parameters": [
          {
            "id": 349,
            "name": "data",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "name": "__type"
            }
          }
        ],
        "type": {
          "type": "reference",
          "name": "ViewModel",
          "id": 309
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/ViewModel.ts",
        "line": 269,
        "character": 47
      }
    ]
  },
  {
    "id": 342,
    "name": "_assignedFields",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/ViewModel.ts",
        "line": 260,
        "character": 26
      }
    ],
    "type": {
      "type": "array",
      "elementType": {
        "type": "intrinsic",
        "name": "string"
      }
    }
  },
  {
    "id": 343,
    "name": "_data",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "comment": {
      "shortText": "Get the data for each field on this record. This won't transform any special field\nrepresentations - for that use toJS(). This is a shortcut to manually iterating of the\nfields to get the data out of the record.",
      "text": "In general use toJS() instead.\n"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/ViewModel.ts",
        "line": 269,
        "character": 16
      }
    ],
    "type": {
      "type": "reflection",
      "declaration": {
        "id": 344,
        "name": "__type",
        "kind": 65536,
        "kindString": "Type literal",
        "flags": {},
        "indexSignature": [
          {
            "id": 345,
            "name": "__index",
            "kind": 8192,
            "kindString": "Index signature",
            "flags": {},
            "parameters": [
              {
                "id": 346,
                "name": "fieldName",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "any"
            }
          }
        ],
        "sources": [
          {
            "fileName": "js-packages/@prestojs/viewmodel/src/ViewModel.ts",
            "line": 269,
            "character": 17
          }
        ]
      }
    }
  },
  {
    "id": 365,
    "name": "__boundFields",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isProtected": true,
      "isStatic": true,
      "isExported": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/FieldBinder.ts",
        "line": 65,
        "character": 34
      }
    ],
    "type": {
      "type": "reference",
      "name": "Map",
      "typeArguments": [
        {
          "type": "reference",
          "name": "FieldBinder",
          "id": 79
        },
        {
          "type": "reference",
          "name": "FieldsMapping",
          "id": 93
        }
      ]
    },
    "defaultValue": " new Map()",
    "inheritedFrom": {
      "type": "reference",
      "name": "FieldBinder.__boundFields",
      "id": 82
    }
  },
  {
    "id": 329,
    "name": "__cache",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPrivate": true,
      "isStatic": true,
      "isExported": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/ViewModel.ts",
        "line": 205,
        "character": 26
      }
    ],
    "type": {
      "type": "reference",
      "name": "Map",
      "typeArguments": [
        {
          "type": "reference",
          "name": "ViewModel",
          "id": 309
        },
        {
          "type": "reference",
          "name": "ViewModelCache",
          "id": 227,
          "typeArguments": [
            {
              "type": "reference",
              "name": "ViewModel",
              "id": 309
            }
          ]
        }
      ]
    },
    "defaultValue": " new Map()"
  },
  {
    "id": 312,
    "name": "__pkFieldNameMap",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPrivate": true,
      "isStatic": true,
      "isExported": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/ViewModel.ts",
        "line": 42,
        "character": 35
      }
    ],
    "type": {
      "type": "reference",
      "name": "Map",
      "typeArguments": [
        {
          "type": "reference",
          "name": "ViewModel",
          "id": 309
        },
        {
          "type": "union",
          "types": [
            {
              "type": "intrinsic",
              "name": "string"
            },
            {
              "type": "array",
              "elementType": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ]
        }
      ]
    },
    "defaultValue": " new Map()"
  },
  {
    "id": 364,
    "name": "_fields",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isPublic": true,
      "isStatic": true,
      "isExported": true
    },
    "comment": {
      "shortText": "This should be a mapping from the field name to an instance of `Field`.",
      "text": "To access fields use `<model>.fields` which will return the field instance with a link back\nto the `parent` and it's `name` property set.\n"
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/FieldBinder.ts",
        "line": 53,
        "character": 25
      }
    ],
    "type": {
      "type": "reference",
      "name": "FieldsMapping",
      "id": 93
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "FieldBinder._fields",
      "id": 80
    }
  },
  {
    "id": 310,
    "name": "label",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isStatic": true,
      "isExported": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/ViewModel.ts",
        "line": 39,
        "character": 16
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "string"
    }
  },
  {
    "id": 311,
    "name": "labelPlural",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isStatic": true,
      "isExported": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/ViewModel.ts",
        "line": 40,
        "character": 22
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "string"
    }
  },
  {
    "id": 338,
    "name": "_model",
    "kind": 262144,
    "kindString": "Accessor",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "getSignature": [
      {
        "id": 339,
        "name": "__get",
        "kind": 524288,
        "kindString": "Get signature",
        "flags": {},
        "type": {
          "type": "reference",
          "name": "ViewModel",
          "id": 309
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/ViewModel.ts",
        "line": 240,
        "character": 21
      }
    ]
  },
  {
    "id": 340,
    "name": "_pk",
    "kind": 262144,
    "kindString": "Accessor",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "comment": {
      "shortText": "Shortcut to get the primary key for this record"
    },
    "getSignature": [
      {
        "id": 341,
        "name": "__get",
        "kind": 524288,
        "kindString": "Get signature",
        "flags": {},
        "comment": {
          "shortText": "Shortcut to get the primary key for this record"
        },
        "type": {
          "type": "reference",
          "name": "PrimaryKey",
          "id": 377
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/ViewModel.ts",
        "line": 247,
        "character": 18
      }
    ]
  },
  {
    "id": 330,
    "name": "cache",
    "kind": 262144,
    "kindString": "Accessor",
    "flags": {
      "isPublic": true,
      "isStatic": true,
      "isExported": true
    },
    "getSignature": [
      {
        "id": 331,
        "name": "__get",
        "kind": 524288,
        "kindString": "Get signature",
        "flags": {},
        "type": {
          "type": "reference",
          "name": "ViewModelCache",
          "id": 227,
          "typeArguments": [
            {
              "type": "reference",
              "name": "ViewModel",
              "id": 309
            }
          ]
        }
      }
    ],
    "setSignature": [
      {
        "id": 332,
        "name": "__set",
        "kind": 1048576,
        "kindString": "Set signature",
        "flags": {},
        "parameters": [
          {
            "id": 333,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "name": "ViewModelCache",
              "id": 227,
              "typeArguments": [
                {
                  "type": "reference",
                  "name": "ViewModel",
                  "id": 309
                }
              ]
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "void"
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/ViewModel.ts",
        "line": 206,
        "character": 27
      },
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/ViewModel.ts",
        "line": 217,
        "character": 27
      }
    ]
  },
  {
    "id": 368,
    "name": "fields",
    "kind": 262144,
    "kindString": "Accessor",
    "flags": {
      "isPublic": true,
      "isStatic": true,
      "isExported": true
    },
    "getSignature": [
      {
        "id": 371,
        "name": "__get",
        "kind": 524288,
        "kindString": "Get signature",
        "flags": {},
        "type": {
          "type": "reference",
          "name": "FieldsMapping",
          "id": 93
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "FieldBinder.fields",
          "id": 89
        }
      }
    ],
    "setSignature": [
      {
        "id": 369,
        "name": "__set",
        "kind": 1048576,
        "kindString": "Set signature",
        "flags": {},
        "parameters": [
          {
            "id": 370,
            "name": "fields",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "name": "FieldsMapping",
              "id": 93
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "void"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "FieldBinder.fields",
          "id": 89
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/FieldBinder.ts",
        "line": 92,
        "character": 28
      },
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/FieldBinder.ts",
        "line": 96,
        "character": 28
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "FieldBinder.fields",
      "id": 89
    }
  },
  {
    "id": 313,
    "name": "pkFieldName",
    "kind": 262144,
    "kindString": "Accessor",
    "flags": {
      "isPublic": true,
      "isStatic": true,
      "isExported": true
    },
    "comment": {
      "shortText": "Name of the primary key field for this this ViewModel (or fields for compound keys)",
      "text": "If not specified a field will be created from `getImplicitPk`.\n"
    },
    "getSignature": [
      {
        "id": 316,
        "name": "__get",
        "kind": 524288,
        "kindString": "Get signature",
        "flags": {},
        "comment": {
          "shortText": "Name of the primary key field for this this ViewModel (or fields for compound keys)",
          "text": "If not specified a field will be created from `getImplicitPk`.\n"
        },
        "type": {
          "type": "union",
          "types": [
            {
              "type": "intrinsic",
              "name": "string"
            },
            {
              "type": "array",
              "elementType": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ]
        }
      }
    ],
    "setSignature": [
      {
        "id": 314,
        "name": "__set",
        "kind": 1048576,
        "kindString": "Set signature",
        "flags": {},
        "comment": {
          "shortText": "Name of the primary key field for this this ViewModel (or fields for compound keys)",
          "text": "If not specified a field will be created from `getImplicitPk`.\n"
        },
        "parameters": [
          {
            "id": 315,
            "name": "pkFieldName",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "intrinsic",
                  "name": "string"
                },
                {
                  "type": "array",
                  "elementType": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ]
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "void"
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/ViewModel.ts",
        "line": 54,
        "character": 33
      },
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/ViewModel.ts",
        "line": 63,
        "character": 33
      }
    ]
  },
  {
    "id": 334,
    "name": "pkFieldNames",
    "kind": 262144,
    "kindString": "Accessor",
    "flags": {
      "isPublic": true,
      "isStatic": true,
      "isExported": true
    },
    "comment": {
      "shortText": "Shortcut to get pkFieldName as an array always, even for non-compound keys"
    },
    "getSignature": [
      {
        "id": 335,
        "name": "__get",
        "kind": 524288,
        "kindString": "Get signature",
        "flags": {},
        "comment": {
          "shortText": "Shortcut to get pkFieldName as an array always, even for non-compound keys"
        },
        "type": {
          "type": "array",
          "elementType": {
            "type": "intrinsic",
            "name": "string"
          }
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/ViewModel.ts",
        "line": 227,
        "character": 34
      }
    ]
  },
  {
    "id": 366,
    "name": "unboundFields",
    "kind": 262144,
    "kindString": "Accessor",
    "flags": {
      "isPublic": true,
      "isStatic": true,
      "isExported": true
    },
    "comment": {
      "shortText": "Get the unbound fields. Use this instead of accessing _fields directly. Accessing _fields after binding\nresults in an error to avoid accidentally retrieving the unbound version when the intention was to retrieve\nthe bound versions from `fields`."
    },
    "getSignature": [
      {
        "id": 367,
        "name": "__get",
        "kind": 524288,
        "kindString": "Get signature",
        "flags": {},
        "comment": {
          "shortText": "Get the unbound fields. Use this instead of accessing _fields directly. Accessing _fields after binding\nresults in an error to avoid accidentally retrieving the unbound version when the intention was to retrieve\nthe bound versions from `fields`."
        },
        "type": {
          "type": "reference",
          "name": "FieldsMapping",
          "id": 93
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "FieldBinder.unboundFields",
          "id": 87
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/FieldBinder.ts",
        "line": 85,
        "character": 35
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "FieldBinder.unboundFields",
      "id": 87
    }
  },
  {
    "id": 361,
    "name": "clone",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 362,
        "name": "clone",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Clone this record, optionally with only a subset of the fields"
        },
        "parameters": [
          {
            "id": 363,
            "name": "fieldNames",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {
              "isOptional": true
            },
            "type": {
              "type": "array",
              "elementType": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "this"
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/ViewModel.ts",
        "line": 415,
        "character": 16
      }
    ]
  },
  {
    "id": 358,
    "name": "isEqual",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 359,
        "name": "isEqual",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Compares two records to see if they are equivalent.",
          "text": "- If the ViewModel is different then the records are always considered different\n- If the records were initialised with a different set of fields then they are\n  considered different even if the common fields are the same and other fields are\n  all null\n"
        },
        "parameters": [
          {
            "id": 360,
            "name": "record",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "name": "ViewModel",
              "id": 309
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "boolean"
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/ViewModel.ts",
        "line": 396,
        "character": 18
      }
    ]
  },
  {
    "id": 350,
    "name": "serializeToForm",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 351,
        "name": "serializeToForm",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Return data as object to pass as initial values to a form"
        },
        "type": {
          "type": "reference",
          "name": "__type"
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/ViewModel.ts",
        "line": 365,
        "character": 19
      }
    ]
  },
  {
    "id": 356,
    "name": "toJS",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 357,
        "name": "toJS",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Return the data for this record as an object"
        },
        "type": {
          "type": "reference",
          "name": "__type"
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/ViewModel.ts",
        "line": 380,
        "character": 15
      }
    ]
  },
  {
    "id": 354,
    "name": "toString",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 355,
        "name": "toString",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "type": {
          "type": "intrinsic",
          "name": "string"
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/ViewModel.ts",
        "line": 373,
        "character": 19
      }
    ]
  },
  {
    "id": 325,
    "name": "bindFields",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isProtected": true,
      "isStatic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 326,
        "name": "bindFields",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "parameters": [
          {
            "id": 327,
            "name": "fields",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "name": "FieldsMapping",
              "id": 93
            }
          },
          {
            "id": 328,
            "name": "bindTo",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "name": "FieldBinder",
              "id": 79
            }
          }
        ],
        "type": {
          "type": "reference",
          "name": "FieldsMapping",
          "id": 93
        },
        "overwrites": {
          "type": "reference",
          "name": "FieldBinder.bindFields",
          "id": 83
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/ViewModel.ts",
        "line": 187,
        "character": 31
      }
    ],
    "overwrites": {
      "type": "reference",
      "name": "FieldBinder.bindFields",
      "id": 83
    }
  },
  {
    "id": 320,
    "name": "createImplicitPkField",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isProtected": true,
      "isStatic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 321,
        "name": "createImplicitPkField",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Create the implicit primary key field(s). If `fields` is provided then the new field(s) will be\nadded to this object otherwise `this._fields` will be replaced with a new object with the additional\nfields added.",
          "text": "The difference is to do with order of operations: if this.fields is accessed first then\nfields will be passed in from bindFields otherwise if pkFieldName is accessed first we operate\ndirectly on _fields.\n"
        },
        "parameters": [
          {
            "id": 322,
            "name": "fields",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {
              "isOptional": true
            },
            "type": {
              "type": "reference",
              "name": "FieldsMapping",
              "id": 93
            }
          }
        ],
        "type": {
          "type": "union",
          "types": [
            {
              "type": "intrinsic",
              "name": "string"
            },
            {
              "type": "array",
              "elementType": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ]
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/ViewModel.ts",
        "line": 111,
        "character": 42
      }
    ]
  },
  {
    "id": 323,
    "name": "getImplicitPkField",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isStatic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 324,
        "name": "getImplicitPkField",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "When a primary key hasn't been explicitly defined on a ViewModel this method is\ncalled to generate the default.",
          "text": "This can inspect the class or other fields to generate this.\n\n```js\nstatic getImplicitPkField() {\n    // Generate a name based on model class name\n    // eg. `User` => `userId`, `AdminUser` => `adminUserId`\n    const name = this.name[0].toLowerCase() + this.name.slice(1);\n    return [`${name}Id`, new NumberField()];\n}\n```\n\nYou can also return an existing field to use that:\n\n```js\nstatic getImplicitPkField() {\n    // If a ViewModel has an EntityId field use that, otherwise fallback to default\n    if ('EntityId' in this.unboundFields) {\n        return ['EntityId', this.unboundFields.EntityId];\n    }\n    return ['id', new NumberField()];\n}\n```\n\nCompound keys are also supported:\n\n```js\nstatic getImplicitPkField() {\n     return [\n         ['model', 'uuid'],\n         [new CharField(), new NumberField()],\n     ];\n}\n```\n"
        },
        "type": {
          "type": "union",
          "types": [
            {
              "type": "tuple",
              "elements": [
                {
                  "type": "intrinsic",
                  "name": "string"
                },
                {
                  "type": "reference",
                  "name": "Field",
                  "id": 24,
                  "typeArguments": [
                    {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  ]
                }
              ]
            },
            {
              "type": "tuple",
              "elements": [
                {
                  "type": "array",
                  "elementType": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "type": "array",
                  "elementType": {
                    "type": "reference",
                    "name": "Field",
                    "id": 24,
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    ]
                  }
                }
              ]
            }
          ]
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/ViewModel.ts",
        "line": 179,
        "character": 36
      }
    ]
  },
  {
    "id": 317,
    "name": "getOrCreatePkField",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPrivate": true,
      "isStatic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 318,
        "name": "getOrCreatePkField",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Get or create primary key as required. Returns the primary key name(s).",
          "text": "See createImplicitPkField for details on how `fields` is used\n"
        },
        "parameters": [
          {
            "id": 319,
            "name": "fields",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {
              "isOptional": true
            },
            "type": {
              "type": "reference",
              "name": "FieldsMapping",
              "id": 93
            }
          }
        ],
        "type": {
          "type": "union",
          "types": [
            {
              "type": "intrinsic",
              "name": "string"
            },
            {
              "type": "array",
              "elementType": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ]
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/ViewModel.ts",
        "line": 74,
        "character": 37
      }
    ]
  },
  {
    "id": 352,
    "name": "toString",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPublic": true,
      "isStatic": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 353,
        "name": "toString",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "type": {
          "type": "intrinsic",
          "name": "string"
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/ViewModel.ts",
        "line": 369,
        "character": 26
      }
    ]
  },
  {
    "id": 227,
    "name": "ViewModelCache",
    "kind": 128,
    "kindString": "Class",
    "flags": {
      "isExported": true
    },
    "comment": {
      "shortText": "Cache for ViewModel instances based on the specified field names set.",
      "text": "The key to the cache is the primary key for the record and the field names\nset on it. For example if you have a record that accepts id, name and email\nyou could have a record cached for id, for name, for email or any\ncombination of the 3 fields. This is to handle the common case of fetching\npartial data from a backend.\n\nThe cache implementation will update any cache entries that are a subset\nof a new cache entry. eg. Caching a record with all the possible fields set\nwould result in all the existing partial field cache entries being updated\nto match the data on the full record for the fields it care about.\n\nUsage:\n\n```js\n// Assume User is a ViewModel already defined\n\n// Add a record\nUser.cache.add(new User({ id: 1, name: 'John' }));\n\n// Retrieve a record\nconst record = User.cache.get(1, ['id', 'name']);\n\n// To update a record just add it again\nUser.cache.add(new User({ id: 1, name: 'Johnny' }));\n\n// Cache is per unique set of fields but a superset will update a subset\nUser.cache.add(new User({ id: 1, name: 'Johnny Smith', email: 'johnny@test.com' }));\nUser.cache.get(1, ['id', 'name']);\n// { id: 1, name: 'Johnny Smith' }\nUser.cache.get(1, ['id', 'name', 'email'])\n// { id: 1, name: 'Johnny Smith', email: 'johnny@test.com' }\n\n// Delete a specific cache for a subset of fields\nUser.cache.delete(1, ['id', 'name']);\nUser.cache.get(1, ['id', 'name']);\n// null\nUser.cache.get(1, ['id', 'name', 'email'])\n// { id: 1, name: 'Johnny Smith', email: 'johnny@test.com' }\n\n// Or all fields\nUser.cache.delete(1);\nUser.cache.get(1, ['id', 'name', 'email'])\n// null\n\n// You can add multiple values at a time\nUser.cache.addList([johnny, sam]);\n\n// You can listen to changes\nUser.cache.addListener(2, ['id', 'name'], (previous, next) => console.log(previous, 'change to', next));\nUser.cache.add(new User({ id: 2, name: 'Bob' }));\n// null changed to User({ id: 2, name: 'Bob' })\nUser.cache.add(new User({ id: 2, name: 'Bobby' }));\n// User({ id: 2, name: 'Bob' }) changed to User({ id: 2, name: 'Bobby' })\nUser.cache.delete(2)\n// User({ id: 2, name: 'Bobby' }) changed to null\n\n// You can listen to multiple changes. If you use this and addList then you only get one\n// call for each change that occurs within addList\nUser.cache.addListenerList(\n // Ids to listen for changes to\n [3, 4],\n // Only get updates for cached records with these field names\n ['id', 'name'],\n (previous, next) => console.log(previous, 'change to', next)\n);\nUser.cache.addList([new User({ id: 3, name: 'Jay' }), new User({ id: 4, name: 'Bee' })]);\n// [null, null] changed to [new User({ id: 3, name: 'Jay' }), new User({ id: 4, name: 'Bee' })]\nUser.cache.addList([new User({ id: 3, name: 'Jayz' }), new User({ id: 4, name: 'Beeb' })]);\n// [new User({ id: 3, name: 'Jay' }), new User({ id: 4, name: 'Bee' })] changed to [new User({ id: 3, name: 'Jayz' }), new User({ id: 4, name: 'Beeb' })]\nUser.cache.delete(3)\n// [new User({ id: 3, name: 'Jayz' }), new User({ id: 4, name: 'Beeb' })] changed to [null, new User({ id: 4, name: 'Beeb' })]\n```\n"
    },
    "typeParameter": [
      {
        "id": 228,
        "name": "T",
        "kind": 131072,
        "kindString": "Type parameter",
        "flags": {},
        "type": {
          "type": "reference",
          "name": "ViewModel",
          "id": 309
        }
      }
    ],
    "groups": [
      {
        "title": "Constructors",
        "kind": 512,
        "children": [231]
      },
      {
        "title": "Properties",
        "kind": 1024,
        "children": [229, 240, 241, 230]
      },
      {
        "title": "Methods",
        "kind": 2048,
        "children": [237, 244, 259, 264, 255, 247, 251, 234]
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
        "line": 364,
        "character": 35
      }
    ],
    "childIds": [231, 229, 240, 241, 230, 237, 244, 259, 264, 255, 247, 251, 234]
  },
  {
    "id": 231,
    "name": "constructor",
    "kind": 512,
    "kindString": "Constructor",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 232,
        "name": "new ViewModelCache",
        "kind": 16384,
        "kindString": "Constructor signature",
        "flags": {},
        "parameters": [
          {
            "id": 233,
            "name": "viewModel",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "name": "Class",
              "id": 152,
              "typeArguments": [
                {
                  "type": "typeParameter",
                  "name": "T",
                  "constraint": {
                    "type": "reference",
                    "name": "ViewModel",
                    "id": 309
                  }
                }
              ]
            }
          }
        ],
        "type": {
          "type": "reference",
          "name": "ViewModelCache",
          "id": 227
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
        "line": 366,
        "character": 24
      }
    ]
  },
  {
    "id": 229,
    "name": "cache",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isExported": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
        "line": 365,
        "character": 9
      }
    ],
    "type": {
      "type": "reference",
      "name": "Map",
      "typeArguments": [
        {
          "type": "reference",
          "name": "PrimaryKeyCacheKey",
          "id": 269
        },
        {
          "type": "reference",
          "name": "RecordCache",
          "id": 190,
          "typeArguments": [
            {
              "type": "typeParameter",
              "name": "T",
              "constraint": {
                "type": "reference",
                "name": "ViewModel",
                "id": 309
              }
            }
          ]
        }
      ]
    }
  },
  {
    "id": 240,
    "name": "isAddingList",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isExported": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
        "line": 407,
        "character": 16
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "boolean"
    },
    "defaultValue": "false"
  },
  {
    "id": 241,
    "name": "onAddingListDone",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isExported": true,
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
        "line": 408,
        "character": 20
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "null"
        },
        {
          "type": "reflection",
          "declaration": {
            "id": 242,
            "name": "__type",
            "kind": 65536,
            "kindString": "Type literal",
            "flags": {},
            "signatures": [
              {
                "id": 243,
                "name": "__call",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ],
            "sources": [
              {
                "fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
                "line": 408,
                "character": 29
              }
            ]
          }
        }
      ]
    }
  },
  {
    "id": 230,
    "name": "viewModel",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isExported": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
        "line": 366,
        "character": 13
      }
    ],
    "type": {
      "type": "reference",
      "name": "Class",
      "id": 152,
      "typeArguments": [
        {
          "type": "typeParameter",
          "name": "T",
          "constraint": {
            "type": "reference",
            "name": "ViewModel",
            "id": 309
          }
        }
      ]
    }
  },
  {
    "id": 237,
    "name": "add",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 238,
        "name": "add",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Add a record to the cache. Records are cached based on the fields that are\nset on them (`record._assignedFields`).",
          "text": "If record A has a superset of fields of record B then when A is cached it\nwill update the cache for record B. The reverse isn't true.\n"
        },
        "parameters": [
          {
            "id": 239,
            "name": "record",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "The record to cache\n"
            },
            "type": {
              "type": "typeParameter",
              "name": "T",
              "constraint": {
                "type": "reference",
                "name": "ViewModel",
                "id": 309
              }
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "void"
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
        "line": 394,
        "character": 7
      }
    ]
  },
  {
    "id": 244,
    "name": "addList",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 245,
        "name": "addList",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Add a list of records. Use this in place of manually calling\nadd() on each record individually so that listeners only get\nnotified once of the change to the list rather than for\neach record in the list."
        },
        "parameters": [
          {
            "id": 246,
            "name": "record",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "array",
              "elementType": {
                "type": "typeParameter",
                "name": "T",
                "constraint": {
                  "type": "reference",
                  "name": "ViewModel",
                  "id": 309
                }
              }
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "void"
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
        "line": 416,
        "character": 11
      }
    ]
  },
  {
    "id": 259,
    "name": "addListener",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 260,
        "name": "addListener",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Add a listener for any changes, additions or deletions for the record(s) identified by\n`pkOrPks` for the field names `fieldNames`"
        },
        "parameters": [
          {
            "id": 261,
            "name": "pkOrPks",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "Primary key or array of multiple primary keys that identifies the record(s)\nto listen to changes/additions/deletions to"
            },
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "reference",
                  "name": "PrimaryKey",
                  "id": 377
                },
                {
                  "type": "array",
                  "elementType": {
                    "type": "reference",
                    "name": "PrimaryKey",
                    "id": 377
                  }
                }
              ]
            }
          },
          {
            "id": 262,
            "name": "fieldNames",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "Field names to listen to changes/additions/deletions to"
            },
            "type": {
              "type": "array",
              "elementType": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          },
          {
            "id": 263,
            "name": "listener",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "Function to call with any changes\n"
            },
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "reference",
                  "name": "MultiChangeListener",
                  "id": 298,
                  "typeArguments": [
                    {
                      "type": "typeParameter",
                      "name": "T",
                      "constraint": {
                        "type": "reference",
                        "name": "ViewModel",
                        "id": 309
                      }
                    }
                  ]
                },
                {
                  "type": "reference",
                  "name": "ChangeListener",
                  "id": 292,
                  "typeArguments": [
                    {
                      "type": "typeParameter",
                      "name": "T",
                      "constraint": {
                        "type": "reference",
                        "name": "ViewModel",
                        "id": 309
                      }
                    }
                  ]
                }
              ]
            }
          }
        ],
        "type": {
          "type": "reference",
          "name": "ChangeListenerUnsubscribe",
          "id": 304
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
        "line": 525,
        "character": 15
      }
    ]
  },
  {
    "id": 264,
    "name": "addListenerList",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 265,
        "name": "addListenerList",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "parameters": [
          {
            "id": 266,
            "name": "pks",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "array",
              "elementType": {
                "type": "reference",
                "name": "PrimaryKey",
                "id": 377
              }
            }
          },
          {
            "id": 267,
            "name": "fieldNames",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "array",
              "elementType": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          },
          {
            "id": 268,
            "name": "listener",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "name": "MultiChangeListener",
              "id": 298,
              "typeArguments": [
                {
                  "type": "typeParameter",
                  "name": "T",
                  "constraint": {
                    "type": "reference",
                    "name": "ViewModel",
                    "id": 309
                  }
                }
              ]
            }
          }
        ],
        "type": {
          "type": "reference",
          "name": "ChangeListenerUnsubscribe",
          "id": 304
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
        "line": 554,
        "character": 19
      }
    ]
  },
  {
    "id": 255,
    "name": "delete",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 256,
        "name": "delete",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Delete a record from the cache, optionally only for the specified `fieldNames`",
          "text": "If `fieldNames` is omitted then the cache for the record is cleared in it's entirety.\n",
          "returns": "true if anything was removed, false otherwise\n"
        },
        "parameters": [
          {
            "id": 257,
            "name": "pk",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "The primary key of the record to delete"
            },
            "type": {
              "type": "reference",
              "name": "PrimaryKey",
              "id": 377
            }
          },
          {
            "id": 258,
            "name": "fieldNames",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {
              "isOptional": true
            },
            "comment": {
              "text": "Optionally only delete the entry with the specified field names. If\nthis is not set then all data for the record is removed.\n"
            },
            "type": {
              "type": "array",
              "elementType": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "boolean"
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
        "line": 508,
        "character": 10
      }
    ]
  },
  {
    "id": 247,
    "name": "get",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 248,
        "name": "get",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Get a record with the specified `fieldNames` set from the cache",
          "returns": "The cached record or null if none found\n"
        },
        "parameters": [
          {
            "id": 249,
            "name": "pk",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "the primary key of the record to get"
            },
            "type": {
              "type": "reference",
              "name": "PrimaryKey",
              "id": 377
            }
          },
          {
            "id": 250,
            "name": "fieldNames",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "the field names to use to look up the cache entry\n"
            },
            "type": {
              "type": "array",
              "elementType": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          }
        ],
        "type": {
          "type": "union",
          "types": [
            {
              "type": "typeParameter",
              "name": "T",
              "constraint": {
                "type": "reference",
                "name": "ViewModel",
                "id": 309
              }
            },
            {
              "type": "intrinsic",
              "name": "null"
            }
          ]
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
        "line": 440,
        "character": 7
      }
    ]
  },
  {
    "id": 251,
    "name": "getList",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 252,
        "name": "getList",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Get a list of records with the specified `fieldNames` set from the cache",
          "text": "Any record that is not found will end up in the array as a null value. If this\nisn't desired you must filter them manually.\n",
          "returns": "an array of the cached records. Any records not found will be in\nthe array as a null value\n"
        },
        "parameters": [
          {
            "id": 253,
            "name": "pks",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "An array of primary keys"
            },
            "type": {
              "type": "array",
              "elementType": {
                "type": "reference",
                "name": "PrimaryKey",
                "id": 377
              }
            }
          },
          {
            "id": 254,
            "name": "fieldNames",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "the field names to use to look up the cached entries"
            },
            "type": {
              "type": "array",
              "elementType": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          }
        ],
        "type": {
          "type": "array",
          "elementType": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "null"
              },
              {
                "type": "unknown",
                "name": "T"
              }
            ]
          }
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
        "line": 489,
        "character": 11
      }
    ]
  },
  {
    "id": 234,
    "name": "getPkCacheKey",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isPrivate": true,
      "isExported": true
    },
    "signatures": [
      {
        "id": 235,
        "name": "getPkCacheKey",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Get the cache key to use into for the primary key. Handles compound keys."
        },
        "parameters": [
          {
            "id": 236,
            "name": "pk",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "name": "PrimaryKey",
              "id": 377
            }
          }
        ],
        "type": {
          "type": "union",
          "types": [
            {
              "type": "intrinsic",
              "name": "string"
            },
            {
              "type": "intrinsic",
              "name": "number"
            }
          ]
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
        "line": 376,
        "character": 25
      }
    ]
  },
  {
    "id": 653,
    "name": "Boundary",
    "kind": 256,
    "kindString": "Interface",
    "flags": {},
    "typeParameter": [
      {
        "id": 654,
        "name": "T",
        "kind": 131072,
        "kindString": "Type parameter",
        "flags": {}
      }
    ],
    "indexSignature": [
      {
        "id": 658,
        "name": "__index",
        "kind": 8192,
        "kindString": "Index signature",
        "flags": {},
        "parameters": [
          {
            "id": 659,
            "name": "propName",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "any"
        }
      }
    ],
    "groups": [
      {
        "title": "Properties",
        "kind": 1024,
        "children": [666, 663, 662, 661, 655, 667, 660, 657, 656, 668]
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/RangeField.ts",
        "line": 3,
        "character": 18
      }
    ],
    "extendedTypes": [
      {
        "type": "reference",
        "name": "Props",
        "id": 4,
        "typeArguments": [
          {
            "type": "typeParameter",
            "name": "T"
          }
        ]
      }
    ],
    "childIds": [666, 663, 662, 661, 655, 667, 660, 657, 656, 668]
  },
  {
    "id": 666,
    "name": "choices",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 13,
        "character": 11
      }
    ],
    "type": {
      "type": "reference",
      "name": "Map",
      "typeArguments": [
        {
          "type": "typeParameter",
          "name": "T"
        },
        {
          "type": "intrinsic",
          "name": "string"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Props.choices",
      "id": 12
    }
  },
  {
    "id": 663,
    "name": "defaultValue",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 7,
        "character": 16
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "typeParameter",
          "name": "T"
        },
        {
          "type": "reflection",
          "declaration": {
            "id": 664,
            "name": "__type",
            "kind": 65536,
            "kindString": "Type literal",
            "flags": {},
            "signatures": [
              {
                "id": 665,
                "name": "__call",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "reference",
                  "name": "Promise",
                  "typeArguments": [
                    {
                      "type": "typeParameter",
                      "name": "T"
                    }
                  ]
                }
              }
            ],
            "sources": [
              {
                "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
                "line": 7,
                "character": 22
              }
            ]
          }
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Props.defaultValue",
      "id": 9
    }
  },
  {
    "id": 662,
    "name": "helpText",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 6,
        "character": 12
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "undefined"
        },
        {
          "type": "intrinsic",
          "name": "string"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Props.helpText",
      "id": 8
    }
  },
  {
    "id": 661,
    "name": "label",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 5,
        "character": 9
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "undefined"
        },
        {
          "type": "intrinsic",
          "name": "string"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Props.label",
      "id": 7
    }
  },
  {
    "id": 655,
    "name": "lowerBound",
    "kind": 1024,
    "kindString": "Property",
    "flags": {},
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/RangeField.ts",
        "line": 4,
        "character": 14
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "typeParameter",
          "name": "T"
        },
        {
          "type": "intrinsic",
          "name": "null"
        },
        {
          "type": "intrinsic",
          "name": "undefined"
        }
      ]
    }
  },
  {
    "id": 667,
    "name": "readOnly",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 14,
        "character": 12
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "undefined"
        },
        {
          "type": "intrinsic",
          "name": "false"
        },
        {
          "type": "intrinsic",
          "name": "true"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Props.readOnly",
      "id": 13
    }
  },
  {
    "id": 660,
    "name": "required",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 4,
        "character": 12
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "undefined"
        },
        {
          "type": "intrinsic",
          "name": "false"
        },
        {
          "type": "intrinsic",
          "name": "true"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Props.required",
      "id": 6
    }
  },
  {
    "id": 657,
    "name": "separator",
    "kind": 1024,
    "kindString": "Property",
    "flags": {},
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/RangeField.ts",
        "line": 6,
        "character": 13
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "string"
        },
        {
          "type": "intrinsic",
          "name": "undefined"
        }
      ]
    }
  },
  {
    "id": 656,
    "name": "upperBound",
    "kind": 1024,
    "kindString": "Property",
    "flags": {},
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/RangeField.ts",
        "line": 5,
        "character": 14
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "typeParameter",
          "name": "T"
        },
        {
          "type": "intrinsic",
          "name": "null"
        },
        {
          "type": "intrinsic",
          "name": "undefined"
        }
      ]
    }
  },
  {
    "id": 668,
    "name": "writeOnly",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 15,
        "character": 13
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "undefined"
        },
        {
          "type": "intrinsic",
          "name": "false"
        },
        {
          "type": "intrinsic",
          "name": "true"
        }
      ]
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Props.writeOnly",
      "id": 14
    }
  },
  {
    "id": 152,
    "name": "Class",
    "kind": 256,
    "kindString": "Interface",
    "flags": {
      "isExported": true
    },
    "comment": {
      "shortText": "Utility to type a generic class type, eg.",
      "text": "NOTE: If not dealing with generics just use `typeof <class>` instead\n\n```js\nclass Base<T> {\n  value?: T;\n}\nclass Concrete<T> extends Base<T> {}\nfunction factory<T>(a: Class<Base<T>>): Base<T> {\n  return new a();\n}\nfactory(Concrete);\n```\n"
    },
    "typeParameter": [
      {
        "id": 153,
        "name": "T",
        "kind": 131072,
        "kindString": "Type parameter",
        "flags": {}
      }
    ],
    "groups": [
      {
        "title": "Constructors",
        "kind": 512,
        "children": [154]
      },
      {
        "title": "Properties",
        "kind": 1024,
        "children": [178, 176, 177, 175, 179, 174]
      },
      {
        "title": "Methods",
        "kind": 2048,
        "children": [180, 157, 167, 162, 172]
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/typeUtil.ts",
        "line": 17,
        "character": 22
      }
    ],
    "extendedTypes": [
      {
        "type": "reference",
        "name": "Function"
      }
    ],
    "childIds": [154, 178, 176, 177, 175, 179, 174, 180, 157, 167, 162, 172]
  },
  {
    "id": 154,
    "name": "constructor",
    "kind": 512,
    "kindString": "Constructor",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 155,
        "name": "new Class",
        "kind": 16384,
        "kindString": "Constructor signature",
        "flags": {},
        "parameters": [
          {
            "id": 156,
            "name": "args",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {
              "isRest": true
            },
            "type": {
              "type": "array",
              "elementType": {
                "type": "intrinsic",
                "name": "any"
              }
            }
          }
        ],
        "type": {
          "type": "typeParameter",
          "name": "T"
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/typeUtil.ts",
        "line": 17,
        "character": 44
      }
    ]
  },
  {
    "id": 178,
    "name": "Function",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isExported": true
    },
    "sources": [
      {
        "fileName": "node_modules/typescript/lib/lib.es5.d.ts",
        "line": 316,
        "character": 20
      }
    ],
    "type": {
      "type": "reference",
      "name": "FunctionConstructor"
    }
  },
  {
    "id": 176,
    "name": "arguments",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isExported": true
    },
    "sources": [
      {
        "fileName": "node_modules/typescript/lib/lib.es5.d.ts",
        "line": 302,
        "character": 13
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "any"
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Function.arguments"
    }
  },
  {
    "id": 177,
    "name": "caller",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isExported": true
    },
    "sources": [
      {
        "fileName": "node_modules/typescript/lib/lib.es5.d.ts",
        "line": 303,
        "character": 10
      }
    ],
    "type": {
      "type": "reference",
      "name": "Function"
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Function.caller"
    }
  },
  {
    "id": 175,
    "name": "length",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isExported": true
    },
    "sources": [
      {
        "fileName": "node_modules/typescript/lib/lib.es5.d.ts",
        "line": 299,
        "character": 19
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "number"
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Function.length"
    }
  },
  {
    "id": 179,
    "name": "name",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isExported": true
    },
    "comment": {
      "shortText": "Returns the name of the function. Function names are read-only and can not be changed."
    },
    "sources": [
      {
        "fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
        "line": 97,
        "character": 17
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "string"
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Function.name"
    }
  },
  {
    "id": 174,
    "name": "prototype",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isExported": true
    },
    "sources": [
      {
        "fileName": "node_modules/typescript/lib/lib.es5.d.ts",
        "line": 298,
        "character": 13
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "any"
    },
    "inheritedFrom": {
      "type": "reference",
      "name": "Function.prototype"
    }
  },
  {
    "id": 180,
    "name": "[Symbol.hasInstance]",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 181,
        "name": "[Symbol.hasInstance]",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Determines whether the given value inherits from this function if this function was used\nas a constructor function.",
          "text": "A constructor function can control which objects are recognized as its instances by\n'instanceof' by overriding this method.\n"
        },
        "parameters": [
          {
            "id": 182,
            "name": "value",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "intrinsic",
              "name": "any"
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Function.[Symbol.hasInstance]"
        }
      }
    ],
    "sources": [
      {
        "fileName": "node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts",
        "line": 157,
        "character": 24
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Function.[Symbol.hasInstance]"
    }
  },
  {
    "id": 157,
    "name": "apply",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 158,
        "name": "apply",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Calls the function, substituting the specified object for the this value of the function, and the specified array for the arguments of the function."
        },
        "parameters": [
          {
            "id": 159,
            "name": "this",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "name": "Function"
            }
          },
          {
            "id": 160,
            "name": "thisArg",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "The object to be used as the this object."
            },
            "type": {
              "type": "intrinsic",
              "name": "any"
            }
          },
          {
            "id": 161,
            "name": "argArray",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {
              "isOptional": true
            },
            "comment": {
              "text": "A set of arguments to be passed to the function.\n"
            },
            "type": {
              "type": "intrinsic",
              "name": "any"
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "any"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Function.apply"
        }
      }
    ],
    "sources": [
      {
        "fileName": "node_modules/typescript/lib/lib.es5.d.ts",
        "line": 278,
        "character": 9
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Function.apply"
    }
  },
  {
    "id": 167,
    "name": "bind",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 168,
        "name": "bind",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "For a given function, creates a bound function that has the same body as the original function.\nThe this object of the bound function is associated with the specified object, and has the specified initial parameters."
        },
        "parameters": [
          {
            "id": 169,
            "name": "this",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "name": "Function"
            }
          },
          {
            "id": 170,
            "name": "thisArg",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "An object to which the this keyword can refer inside the new function."
            },
            "type": {
              "type": "intrinsic",
              "name": "any"
            }
          },
          {
            "id": 171,
            "name": "argArray",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {
              "isRest": true
            },
            "comment": {
              "text": "A list of arguments to be passed to the new function.\n"
            },
            "type": {
              "type": "array",
              "elementType": {
                "type": "intrinsic",
                "name": "any"
              }
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "any"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Function.bind"
        }
      }
    ],
    "sources": [
      {
        "fileName": "node_modules/typescript/lib/lib.es5.d.ts",
        "line": 293,
        "character": 8
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Function.bind"
    }
  },
  {
    "id": 162,
    "name": "call",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 163,
        "name": "call",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Calls a method of an object, substituting another object for the current object."
        },
        "parameters": [
          {
            "id": 164,
            "name": "this",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "name": "Function"
            }
          },
          {
            "id": 165,
            "name": "thisArg",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "comment": {
              "text": "The object to be used as the current object."
            },
            "type": {
              "type": "intrinsic",
              "name": "any"
            }
          },
          {
            "id": 166,
            "name": "argArray",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {
              "isRest": true
            },
            "comment": {
              "text": "A list of arguments to be passed to the method.\n"
            },
            "type": {
              "type": "array",
              "elementType": {
                "type": "intrinsic",
                "name": "any"
              }
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "any"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Function.call"
        }
      }
    ],
    "sources": [
      {
        "fileName": "node_modules/typescript/lib/lib.es5.d.ts",
        "line": 285,
        "character": 8
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Function.call"
    }
  },
  {
    "id": 172,
    "name": "toString",
    "kind": 2048,
    "kindString": "Method",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 173,
        "name": "toString",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Returns a string representation of a function."
        },
        "type": {
          "type": "intrinsic",
          "name": "string"
        },
        "inheritedFrom": {
          "type": "reference",
          "name": "Function.toString"
        }
      }
    ],
    "sources": [
      {
        "fileName": "node_modules/typescript/lib/lib.es5.d.ts",
        "line": 296,
        "character": 12
      }
    ],
    "inheritedFrom": {
      "type": "reference",
      "name": "Function.toString"
    }
  },
  {
    "id": 4,
    "name": "Props",
    "kind": 256,
    "kindString": "Interface",
    "flags": {
      "isExported": true
    },
    "typeParameter": [
      {
        "id": 5,
        "name": "T",
        "kind": 131072,
        "kindString": "Type parameter",
        "flags": {}
      }
    ],
    "groups": [
      {
        "title": "Properties",
        "kind": 1024,
        "children": [12, 9, 8, 7, 13, 6, 14]
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 3,
        "character": 22
      }
    ],
    "extendedBy": [
      {
        "type": "reference",
        "name": "Boundary",
        "id": 653
      }
    ],
    "childIds": [12, 9, 8, 7, 13, 6, 14]
  },
  {
    "id": 12,
    "name": "choices",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isExported": true,
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 13,
        "character": 11
      }
    ],
    "type": {
      "type": "reference",
      "name": "Map",
      "typeArguments": [
        {
          "type": "typeParameter",
          "name": "T"
        },
        {
          "type": "intrinsic",
          "name": "string"
        }
      ]
    }
  },
  {
    "id": 9,
    "name": "defaultValue",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isExported": true,
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 7,
        "character": 16
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "typeParameter",
          "name": "T"
        },
        {
          "type": "reflection",
          "declaration": {
            "id": 10,
            "name": "__type",
            "kind": 65536,
            "kindString": "Type literal",
            "flags": {},
            "signatures": [
              {
                "id": 11,
                "name": "__call",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "reference",
                  "name": "Promise",
                  "typeArguments": [
                    {
                      "type": "typeParameter",
                      "name": "T"
                    }
                  ]
                }
              }
            ],
            "sources": [
              {
                "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
                "line": 7,
                "character": 22
              }
            ]
          }
        }
      ]
    }
  },
  {
    "id": 8,
    "name": "helpText",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isExported": true,
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 6,
        "character": 12
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "undefined"
        },
        {
          "type": "intrinsic",
          "name": "string"
        }
      ]
    }
  },
  {
    "id": 7,
    "name": "label",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isExported": true,
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 5,
        "character": 9
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "undefined"
        },
        {
          "type": "intrinsic",
          "name": "string"
        }
      ]
    }
  },
  {
    "id": 13,
    "name": "readOnly",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isExported": true,
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 14,
        "character": 12
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "undefined"
        },
        {
          "type": "intrinsic",
          "name": "false"
        },
        {
          "type": "intrinsic",
          "name": "true"
        }
      ]
    }
  },
  {
    "id": 6,
    "name": "required",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isExported": true,
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 4,
        "character": 12
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "undefined"
        },
        {
          "type": "intrinsic",
          "name": "false"
        },
        {
          "type": "intrinsic",
          "name": "true"
        }
      ]
    }
  },
  {
    "id": 14,
    "name": "writeOnly",
    "kind": 1024,
    "kindString": "Property",
    "flags": {
      "isExported": true,
      "isOptional": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
        "line": 15,
        "character": 13
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "undefined"
        },
        {
          "type": "intrinsic",
          "name": "false"
        },
        {
          "type": "intrinsic",
          "name": "true"
        }
      ]
    }
  },
  {
    "id": 292,
    "name": "ChangeListener",
    "kind": 4194304,
    "kindString": "Type alias",
    "flags": {},
    "typeParameter": [
      {
        "id": 293,
        "name": "T",
        "kind": 131072,
        "kindString": "Type parameter",
        "flags": {}
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
        "line": 52,
        "character": 19
      }
    ],
    "type": {
      "type": "reflection",
      "declaration": {
        "id": 294,
        "name": "__type",
        "kind": 65536,
        "kindString": "Type literal",
        "flags": {},
        "signatures": [
          {
            "id": 295,
            "name": "__call",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "parameters": [
              {
                "id": 296,
                "name": "previous",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {
                  "isOptional": true
                },
                "type": {
                  "type": "reference",
                  "name": "T",
                  "id": 293
                }
              },
              {
                "id": 297,
                "name": "next",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {
                  "isOptional": true
                },
                "type": {
                  "type": "reference",
                  "name": "T",
                  "id": 293
                }
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "void"
            }
          }
        ],
        "sources": [
          {
            "fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
            "line": 52,
            "character": 24
          }
        ]
      }
    }
  },
  {
    "id": 304,
    "name": "ChangeListenerUnsubscribe",
    "kind": 4194304,
    "kindString": "Type alias",
    "flags": {},
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
        "line": 54,
        "character": 30
      }
    ],
    "type": {
      "type": "reflection",
      "declaration": {
        "id": 305,
        "name": "__type",
        "kind": 65536,
        "kindString": "Type literal",
        "flags": {},
        "signatures": [
          {
            "id": 306,
            "name": "__call",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "type": {
              "type": "intrinsic",
              "name": "void"
            }
          }
        ],
        "sources": [
          {
            "fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
            "line": 54,
            "character": 32
          }
        ]
      }
    }
  },
  {
    "id": 511,
    "name": "CharFieldProps",
    "kind": 4194304,
    "kindString": "Type alias",
    "flags": {},
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/CharField.ts",
        "line": 3,
        "character": 19
      }
    ],
    "type": {
      "type": "intersection",
      "types": [
        {
          "type": "reference",
          "name": "Props",
          "id": 4,
          "typeArguments": [
            {
              "type": "intrinsic",
              "name": "string"
            }
          ]
        },
        {
          "type": "reflection",
          "declaration": {
            "id": 512,
            "name": "__type",
            "kind": 65536,
            "kindString": "Type literal",
            "flags": {},
            "children": [
              {
                "id": 513,
                "name": "maxLength",
                "kind": 32,
                "kindString": "Variable",
                "flags": {
                  "isOptional": true
                },
                "sources": [
                  {
                    "fileName": "js-packages/@prestojs/viewmodel/src/fields/CharField.ts",
                    "line": 3,
                    "character": 49
                  }
                ],
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "intrinsic",
                      "name": "undefined"
                    },
                    {
                      "type": "intrinsic",
                      "name": "number"
                    }
                  ]
                }
              }
            ],
            "groups": [
              {
                "title": "Variables",
                "kind": 32,
                "children": [513]
              }
            ],
            "sources": [
              {
                "fileName": "js-packages/@prestojs/viewmodel/src/fields/CharField.ts",
                "line": 3,
                "character": 37
              }
            ]
          }
        }
      ]
    }
  },
  {
    "id": 373,
    "name": "CompoundPrimaryKey",
    "kind": 4194304,
    "kindString": "Type alias",
    "flags": {
      "isExported": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/ViewModel.ts",
        "line": 9,
        "character": 30
      }
    ],
    "type": {
      "type": "reflection",
      "declaration": {
        "id": 374,
        "name": "__type",
        "kind": 65536,
        "kindString": "Type literal",
        "flags": {},
        "indexSignature": [
          {
            "id": 375,
            "name": "__index",
            "kind": 8192,
            "kindString": "Index signature",
            "flags": {},
            "parameters": [
              {
                "id": 376,
                "name": "fieldName",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              }
            ],
            "type": {
              "type": "reference",
              "name": "SinglePrimaryKey",
              "id": 372
            }
          }
        ],
        "sources": [
          {
            "fileName": "js-packages/@prestojs/viewmodel/src/ViewModel.ts",
            "line": 9,
            "character": 32
          }
        ]
      }
    }
  },
  {
    "id": 270,
    "name": "FieldNameCacheKey",
    "kind": 4194304,
    "kindString": "Type alias",
    "flags": {},
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
        "line": 19,
        "character": 22
      }
    ],
    "type": {
      "type": "intrinsic",
      "name": "string"
    }
  },
  {
    "id": 93,
    "name": "FieldsMapping",
    "kind": 4194304,
    "kindString": "Type alias",
    "flags": {
      "isExported": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/FieldBinder.ts",
        "line": 5,
        "character": 25
      }
    ],
    "type": {
      "type": "reflection",
      "declaration": {
        "id": 94,
        "name": "__type",
        "kind": 65536,
        "kindString": "Type literal",
        "flags": {},
        "indexSignature": [
          {
            "id": 95,
            "name": "__index",
            "kind": 8192,
            "kindString": "Index signature",
            "flags": {},
            "parameters": [
              {
                "id": 96,
                "name": "key",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              }
            ],
            "type": {
              "type": "reference",
              "name": "Field",
              "id": 24,
              "typeArguments": [
                {
                  "type": "intrinsic",
                  "name": "any"
                }
              ]
            }
          }
        ],
        "sources": [
          {
            "fileName": "js-packages/@prestojs/viewmodel/src/FieldBinder.ts",
            "line": 5,
            "character": 27
          }
        ]
      }
    }
  },
  {
    "id": 1310,
    "name": "JSON",
    "kind": 4194304,
    "kindString": "Type alias",
    "flags": {
      "isExported": true
    },
    "typeParameter": [
      {
        "id": 1311,
        "name": "T",
        "kind": 131072,
        "kindString": "Type parameter",
        "flags": {}
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/JsonField.ts",
        "line": 3,
        "character": 16
      }
    ],
    "type": {
      "type": "intersection",
      "types": [
        {
          "type": "intrinsic",
          "name": "string"
        },
        {
          "type": "reflection",
          "declaration": {
            "id": 1312,
            "name": "__type",
            "kind": 65536,
            "kindString": "Type literal",
            "flags": {},
            "children": [
              {
                "id": 1313,
                "name": " __JSON",
                "kind": 32,
                "kindString": "Variable",
                "flags": {},
                "sources": [
                  {
                    "fileName": "js-packages/@prestojs/viewmodel/src/fields/JsonField.ts",
                    "line": 3,
                    "character": 42
                  }
                ],
                "type": {
                  "type": "typeParameter",
                  "name": "T"
                }
              }
            ],
            "groups": [
              {
                "title": "Variables",
                "kind": 32,
                "children": [1313]
              }
            ],
            "sources": [
              {
                "fileName": "js-packages/@prestojs/viewmodel/src/fields/JsonField.ts",
                "line": 3,
                "character": 30
              }
            ]
          }
        }
      ]
    }
  },
  {
    "id": 298,
    "name": "MultiChangeListener",
    "kind": 4194304,
    "kindString": "Type alias",
    "flags": {},
    "typeParameter": [
      {
        "id": 299,
        "name": "T",
        "kind": 131072,
        "kindString": "Type parameter",
        "flags": {}
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
        "line": 53,
        "character": 24
      }
    ],
    "type": {
      "type": "reflection",
      "declaration": {
        "id": 300,
        "name": "__type",
        "kind": 65536,
        "kindString": "Type literal",
        "flags": {},
        "signatures": [
          {
            "id": 301,
            "name": "__call",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "parameters": [
              {
                "id": 302,
                "name": "previous",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {
                  "isOptional": true
                },
                "type": {
                  "type": "array",
                  "elementType": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "null"
                      },
                      {
                        "type": "unknown",
                        "name": "T"
                      }
                    ]
                  }
                }
              },
              {
                "id": 303,
                "name": "next",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {
                  "isOptional": true
                },
                "type": {
                  "type": "array",
                  "elementType": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "null"
                      },
                      {
                        "type": "unknown",
                        "name": "T"
                      }
                    ]
                  }
                }
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "void"
            }
          }
        ],
        "sources": [
          {
            "fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
            "line": 53,
            "character": 29
          }
        ]
      }
    }
  },
  {
    "id": 147,
    "name": "NumberFieldProps",
    "kind": 4194304,
    "kindString": "Type alias",
    "flags": {},
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/fields/NumberField.ts",
        "line": 3,
        "character": 21
      }
    ],
    "type": {
      "type": "intersection",
      "types": [
        {
          "type": "reference",
          "name": "Props",
          "id": 4,
          "typeArguments": [
            {
              "type": "union",
              "types": [
                {
                  "type": "intrinsic",
                  "name": "string"
                },
                {
                  "type": "intrinsic",
                  "name": "number"
                }
              ]
            }
          ]
        },
        {
          "type": "reflection",
          "declaration": {
            "id": 148,
            "name": "__type",
            "kind": 65536,
            "kindString": "Type literal",
            "flags": {},
            "children": [
              {
                "id": 150,
                "name": "maxValue",
                "kind": 32,
                "kindString": "Variable",
                "flags": {
                  "isOptional": true
                },
                "sources": [
                  {
                    "fileName": "js-packages/@prestojs/viewmodel/src/fields/NumberField.ts",
                    "line": 5,
                    "character": 12
                  }
                ],
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "intrinsic",
                      "name": "undefined"
                    },
                    {
                      "type": "intrinsic",
                      "name": "number"
                    }
                  ]
                }
              },
              {
                "id": 149,
                "name": "minValue",
                "kind": 32,
                "kindString": "Variable",
                "flags": {
                  "isOptional": true
                },
                "sources": [
                  {
                    "fileName": "js-packages/@prestojs/viewmodel/src/fields/NumberField.ts",
                    "line": 4,
                    "character": 12
                  }
                ],
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "intrinsic",
                      "name": "undefined"
                    },
                    {
                      "type": "intrinsic",
                      "name": "number"
                    }
                  ]
                }
              }
            ],
            "groups": [
              {
                "title": "Variables",
                "kind": 32,
                "children": [150, 149]
              }
            ],
            "sources": [
              {
                "fileName": "js-packages/@prestojs/viewmodel/src/fields/NumberField.ts",
                "line": 3,
                "character": 48
              }
            ]
          }
        }
      ]
    }
  },
  {
    "id": 377,
    "name": "PrimaryKey",
    "kind": 4194304,
    "kindString": "Type alias",
    "flags": {
      "isExported": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/ViewModel.ts",
        "line": 10,
        "character": 22
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "reference",
          "name": "SinglePrimaryKey",
          "id": 372
        },
        {
          "type": "reference",
          "name": "CompoundPrimaryKey",
          "id": 373
        }
      ]
    }
  },
  {
    "id": 269,
    "name": "PrimaryKeyCacheKey",
    "kind": 4194304,
    "kindString": "Type alias",
    "flags": {},
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
        "line": 18,
        "character": 23
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "string"
        },
        {
          "type": "intrinsic",
          "name": "number"
        }
      ]
    }
  },
  {
    "id": 372,
    "name": "SinglePrimaryKey",
    "kind": 4194304,
    "kindString": "Type alias",
    "flags": {
      "isExported": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/ViewModel.ts",
        "line": 8,
        "character": 28
      }
    ],
    "type": {
      "type": "union",
      "types": [
        {
          "type": "intrinsic",
          "name": "string"
        },
        {
          "type": "intrinsic",
          "name": "number"
        }
      ]
    }
  },
  {
    "id": 307,
    "name": "CACHE_KEY_FIELD_SEPARATOR",
    "kind": 32,
    "kindString": "Variable",
    "flags": {
      "isConst": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
        "line": 58,
        "character": 31
      }
    ],
    "type": {
      "type": "stringLiteral",
      "value": "⁞"
    },
    "defaultValue": "\"⁞\""
  },
  {
    "id": 287,
    "name": "compareEntriesOnKey",
    "kind": 32,
    "kindString": "Variable",
    "flags": {
      "isConst": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
        "line": 50,
        "character": 25
      }
    ],
    "type": {
      "type": "reflection",
      "declaration": {
        "id": 288,
        "name": "__type",
        "kind": 65536,
        "kindString": "Type literal",
        "flags": {},
        "signatures": [
          {
            "id": 289,
            "name": "__call",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "parameters": [
              {
                "id": 290,
                "name": "a",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "tuple",
                  "elements": [
                    {
                      "type": "intrinsic",
                      "name": "string"
                    },
                    {
                      "type": "intrinsic",
                      "name": "number"
                    }
                  ]
                }
              },
              {
                "id": 291,
                "name": "b",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "tuple",
                  "elements": [
                    {
                      "type": "intrinsic",
                      "name": "string"
                    },
                    {
                      "type": "intrinsic",
                      "name": "number"
                    }
                  ]
                }
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "number"
            }
          }
        ]
      }
    },
    "defaultValue": " makeEntryComparator(0)"
  },
  {
    "id": 282,
    "name": "compareEntriesOnValue",
    "kind": 32,
    "kindString": "Variable",
    "flags": {
      "isConst": true
    },
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
        "line": 49,
        "character": 27
      }
    ],
    "type": {
      "type": "reflection",
      "declaration": {
        "id": 283,
        "name": "__type",
        "kind": 65536,
        "kindString": "Type literal",
        "flags": {},
        "signatures": [
          {
            "id": 284,
            "name": "__call",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "parameters": [
              {
                "id": 285,
                "name": "a",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "tuple",
                  "elements": [
                    {
                      "type": "intrinsic",
                      "name": "string"
                    },
                    {
                      "type": "intrinsic",
                      "name": "number"
                    }
                  ]
                }
              },
              {
                "id": 286,
                "name": "b",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "tuple",
                  "elements": [
                    {
                      "type": "intrinsic",
                      "name": "string"
                    },
                    {
                      "type": "intrinsic",
                      "name": "number"
                    }
                  ]
                }
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "number"
            }
          }
        ]
      }
    },
    "defaultValue": " makeEntryComparator(1)"
  },
  {
    "id": 75,
    "name": "freezeObject",
    "kind": 64,
    "kindString": "Function",
    "flags": {
      "isExported": true
    },
    "signatures": [
      {
        "id": 76,
        "name": "freezeObject",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "parameters": [
          {
            "id": 77,
            "name": "obj",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "name": "__type"
            }
          }
        ],
        "type": {
          "type": "reference",
          "name": "__type"
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/util.ts",
        "line": 10,
        "character": 28
      }
    ]
  },
  {
    "id": 97,
    "name": "generateFieldLabel",
    "kind": 64,
    "kindString": "Function",
    "flags": {},
    "signatures": [
      {
        "id": 98,
        "name": "generateFieldLabel",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Generate a label for a field based on its name"
        },
        "parameters": [
          {
            "id": 99,
            "name": "name",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "string"
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/FieldBinder.ts",
        "line": 10,
        "character": 27
      }
    ]
  },
  {
    "id": 73,
    "name": "isDev",
    "kind": 64,
    "kindString": "Function",
    "flags": {
      "isExported": true,
      "isConst": true
    },
    "signatures": [
      {
        "id": 74,
        "name": "isDev",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "type": {
          "type": "intrinsic",
          "name": "boolean"
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/util.ts",
        "line": 5,
        "character": 18
      }
    ]
  },
  {
    "id": 271,
    "name": "isSubset",
    "kind": 64,
    "kindString": "Function",
    "flags": {},
    "signatures": [
      {
        "id": 272,
        "name": "isSubset",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Is `a` a subset of `b`?"
        },
        "parameters": [
          {
            "id": 273,
            "name": "a",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "array",
              "elementType": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          },
          {
            "id": 274,
            "name": "b",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "array",
              "elementType": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "boolean"
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
        "line": 24,
        "character": 17
      }
    ]
  },
  {
    "id": 275,
    "name": "makeEntryComparator",
    "kind": 64,
    "kindString": "Function",
    "flags": {},
    "signatures": [
      {
        "id": 276,
        "name": "makeEntryComparator",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Builds a comparator for sorting entries from an object as returned by Object.entries based on either\nkey (index == 0) or value (index == 1)"
        },
        "parameters": [
          {
            "id": 277,
            "name": "index",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "intrinsic",
              "name": "any"
            }
          }
        ],
        "type": {
          "type": "reflection",
          "declaration": {
            "id": 278,
            "name": "__type",
            "kind": 65536,
            "kindString": "Type literal",
            "flags": {},
            "signatures": [
              {
                "id": 279,
                "name": "__call",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 280,
                    "name": "a",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "tuple",
                      "elements": [
                        {
                          "type": "intrinsic",
                          "name": "string"
                        },
                        {
                          "type": "intrinsic",
                          "name": "number"
                        }
                      ]
                    }
                  },
                  {
                    "id": 281,
                    "name": "b",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "tuple",
                      "elements": [
                        {
                          "type": "intrinsic",
                          "name": "string"
                        },
                        {
                          "type": "intrinsic",
                          "name": "number"
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "number"
                }
              }
            ],
            "sources": [
              {
                "fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
                "line": 32,
                "character": 36
              }
            ]
          }
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
        "line": 32,
        "character": 28
      }
    ]
  },
  {
    "id": 71,
    "name": "verifyMinified",
    "kind": 64,
    "kindString": "Function",
    "flags": {},
    "signatures": [
      {
        "id": 72,
        "name": "verifyMinified",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "type": {
          "type": "intrinsic",
          "name": "void"
        }
      }
    ],
    "sources": [
      {
        "fileName": "js-packages/@prestojs/viewmodel/src/util.ts",
        "line": 2,
        "character": 23
      }
    ]
  }
]
