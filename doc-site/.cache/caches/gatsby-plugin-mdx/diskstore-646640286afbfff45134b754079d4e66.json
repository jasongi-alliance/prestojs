{"expireTime":9007200833969725000,"key":"gatsby-plugin-mdx-entire-payload-7a865f67b8432d162a3c2f64f37e9a5d-","val":{"mdast":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"For example to use with ","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":25,"offset":24},"indent":[]}},{"type":"inlineCode","value":"useSWR","position":{"start":{"line":1,"column":25,"offset":24},"end":{"line":1,"column":33,"offset":32},"indent":[]}},{"type":"text","value":" you can do:","position":{"start":{"line":1,"column":33,"offset":32},"end":{"line":1,"column":45,"offset":44},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":45,"offset":44},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const { data } = useSWR([action.prepare()], (preparedAction) => preparedAction.execute());","position":{"start":{"line":3,"column":1,"offset":46},"end":{"line":5,"column":4,"offset":146},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"If you just want to call the action directly then you can bypass ","position":{"start":{"line":7,"column":1,"offset":148},"end":{"line":7,"column":66,"offset":213},"indent":[]}},{"type":"inlineCode","value":"prepare","position":{"start":{"line":7,"column":66,"offset":213},"end":{"line":7,"column":75,"offset":222},"indent":[]}},{"type":"text","value":" and just call ","position":{"start":{"line":7,"column":75,"offset":222},"end":{"line":7,"column":90,"offset":237},"indent":[]}},{"type":"inlineCode","value":"execute","position":{"start":{"line":7,"column":90,"offset":237},"end":{"line":7,"column":99,"offset":246},"indent":[]}},{"type":"text","value":"\ndirectly.","position":{"start":{"line":7,"column":99,"offset":246},"end":{"line":8,"column":10,"offset":256},"indent":[1]}}],"position":{"start":{"line":7,"column":1,"offset":148},"end":{"line":8,"column":10,"offset":256},"indent":[1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":11,"column":1,"offset":259},"end":{"line":11,"column":31,"offset":289},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":11,"column":31,"offset":289}}},"scopeImports":["import React from 'react'"],"scopeIdentifiers":["React"],"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"For example to use with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"useSWR\"), \" you can do:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"const { data } = useSWR([action.prepare()], (preparedAction) => preparedAction.execute());\\n\")), mdx(\"p\", null, \"If you just want to call the action directly then you can bypass \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"prepare\"), \" and just call \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"execute\"), \"\\ndirectly.\"));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`For example to use with `}<inlineCode parentName=\"p\">{`useSWR`}</inlineCode>{` you can do:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const { data } = useSWR([action.prepare()], (preparedAction) => preparedAction.execute());\n`}</code></pre>\n    <p>{`If you just want to call the action directly then you can bypass `}<inlineCode parentName=\"p\">{`prepare`}</inlineCode>{` and just call `}<inlineCode parentName=\"p\">{`execute`}</inlineCode>{`\ndirectly.`}</p>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}