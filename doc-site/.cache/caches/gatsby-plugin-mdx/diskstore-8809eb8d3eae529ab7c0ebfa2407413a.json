{"expireTime":9007200833969725000,"key":"gatsby-plugin-mdx-entire-payload-05201fee09ff44552063e531489c5bc9-","val":{"mdast":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"Provides shortcut to resolve a pattern based on name.","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":54,"offset":53},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":54,"offset":53},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Usage:","position":{"start":{"line":3,"column":1,"offset":55},"end":{"line":3,"column":7,"offset":61},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":55},"end":{"line":3,"column":7,"offset":61},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"// urls.js\nimport { NamedUrlPatterns, UrlPattern} from '@prestojs/routing';\n\nexport default new NamedUrlPatterns({\n  'user-list': new UrlPattern('/users/'),\n  'user-detail': new UrlPattern('/users/:id/'),\n});\n\n// ... elsewhere\nimport namedUrls from '../urls.js';\n\nnamedUrls.resolve('user-list');\n// /users/\nnamedUrls.resolve('user-detail', { id: 5 }, { query: { showAddresses: true }});\n// /users/5/?showAddresses=true\n\n// Or to get the pattern direclty without resolving URL\nnamedUrls.get('user-list')\n// UrlPattern('/users/')","position":{"start":{"line":5,"column":1,"offset":63},"end":{"line":25,"column":4,"offset":600},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":28,"column":1,"offset":603},"end":{"line":28,"column":31,"offset":633},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":28,"column":31,"offset":633}}},"scopeImports":["import React from 'react'"],"scopeIdentifiers":["React"],"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Provides shortcut to resolve a pattern based on name.\"), mdx(\"p\", null, \"Usage:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"// urls.js\\nimport { NamedUrlPatterns, UrlPattern} from '@prestojs/routing';\\n\\nexport default new NamedUrlPatterns({\\n  'user-list': new UrlPattern('/users/'),\\n  'user-detail': new UrlPattern('/users/:id/'),\\n});\\n\\n// ... elsewhere\\nimport namedUrls from '../urls.js';\\n\\nnamedUrls.resolve('user-list');\\n// /users/\\nnamedUrls.resolve('user-detail', { id: 5 }, { query: { showAddresses: true }});\\n// /users/5/?showAddresses=true\\n\\n// Or to get the pattern direclty without resolving URL\\nnamedUrls.get('user-list')\\n// UrlPattern('/users/')\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`Provides shortcut to resolve a pattern based on name.`}</p>\n    <p>{`Usage:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`// urls.js\nimport { NamedUrlPatterns, UrlPattern} from '@prestojs/routing';\n\nexport default new NamedUrlPatterns({\n  'user-list': new UrlPattern('/users/'),\n  'user-detail': new UrlPattern('/users/:id/'),\n});\n\n// ... elsewhere\nimport namedUrls from '../urls.js';\n\nnamedUrls.resolve('user-list');\n// /users/\nnamedUrls.resolve('user-detail', { id: 5 }, { query: { showAddresses: true }});\n// /users/5/?showAddresses=true\n\n// Or to get the pattern direclty without resolving URL\nnamedUrls.get('user-list')\n// UrlPattern('/users/')\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}