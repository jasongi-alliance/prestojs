# For a better understanding of what this file is and how to modify it, see
#
# https://alliancesoftware.atlassian.net/wiki/display/TEC/End-to-End+CI+Testing
#
# All lines starting with # is treated as comment in yaml.
# set your variables here
variables:
  DJANGO_SETTINGS_MODULE: django_site.settings.ci

cache:
  key: global
  paths:
    # No cache (we use artifacts though)

# SSH_DEPLOY_KEY only needs to be used if you need to check out a non-public gitlab repo.
# If you do, then:
#  - generate a new RSA keypair locally: ssh-keygen -t rsa -f myproject -N ''
#  - create a new deploy key in gitlab using the public key in 'myproject.pub'
#  - in the project's settings -> CI -> Secret Variables, add the contents of the private key in 'myproject' to SSH_DEPLOY_KEY
before_script:
  - date
  - time source gitlab-ci-init-python.inc
      --venv venv
      --verbose
      #--ssh-key "$SSH_DEPLOY_KEY"

image: alliance/python

stages:
  - install
  - test-pre-build
  - test-post-build

install:virtualenv:
  stage: install
  script:
    # gitlab-ci doesn't support absolute paths to artifacts so we
    # create a virtualenv here in the working directory
    - test "$VIRTUAL_ENV" = "" || deactivate
    - time bin/init-dev-virtualenv.sh --no-dev --no-pyenv --no-input venv
    - source venv/bin/activate
    - date
    - echo 'Success'
  artifacts:
    name: virtualenv
    paths:
      - venv
    expire_in: '4 hours'

install:node_modules:
  stage: install
  script:
    - time yarn install
    - date
    - echo 'Success'
  artifacts:
    name: node_modules
    paths:
      - node_modules
    expire_in: '4 hours'

# webpack build & django collectstatic into /assets
build:
  stage: test-pre-build
  dependencies:
    - install:virtualenv
    - install:node_modules
  services:
    - postgres:9.5
  script:
    - time yarn build --disable-sentry
    - ( cd django-root && time ./manage.py collectstatic --verbosity 3 --noinput )
    - date
    - echo 'Success'
  artifacts:
    name: assets
    paths:
      - assets
      - frontend/dist/webpack-stats.json
    expire_in: '4 hours'

lint:
  stage: test-pre-build
  dependencies:
    - install:virtualenv
    - install:node_modules
  services:
    - postgres:9.5
  script:
    - time pip install -r requirements/dev.txt
    - time bin/lint.sh
    - bin/template-ci-utils.sh initial-migrations xenopus_frog #TEMPLATEFIXME: remove this line
    - ( cd  django-root && ./manage.py makemigrations --check --dry-run ) || { echo 'Missing migrations!'; false; }
    - (find . -name '_auto_' | grep '.' ) && { echo 'Migrations listed above should be renamed to something more descriptive'; false; }
    - date
    - echo 'Success'

# check that dev fixtures load correctly
test:fixtures:
  stage: test-pre-build
  dependencies:
    - install:virtualenv
  services:
    - postgres:9.5
  script:
    - bin/template-ci-utils.sh initial-migrations xenopus_frog #TEMPLATEFIXME: remove this line
    - time bin/reset-db.sh
    - date
    - echo 'Success'

test:python:
  stage: test-post-build
  dependencies:
    - install:virtualenv
    - build
  services:
    - postgres:9.5
  script:
    - bin/template-ci-utils.sh initial-migrations xenopus_frog #TEMPLATEFIXME: remove this line
    - time pip install -r requirements/dev.txt
    - time bin/run-tests-django.sh
    - date
    - echo 'Success'

# TODO: frontend testing is not currently implemented
# frontend browser-based tests
test:frontend:
  when: manual
  stage: test-post-build
  dependencies:
    - install:node_modules
    - install:virtualenv
    - build
  services:
    - postgres:9.5
  script:
    - time pip install werkzeug
    - time bin/reset-db.sh --no-dev
    - ( cd django-root && ./manage.py collectstatic_djrad && ./manage.py collectstatic --noinput && ../bin/ci-run-server.py 0.0.0.0 8000 --persistenttransactions) &
    - ~/bin/wait-for-server.sh 127.0.0.1 8000
    - unset http_proxy
    - unset https_proxy
    # remove demo tests
    - rm -rf cypress/integration/demo
    - yarn cypress run
    - date
    - echo 'Success'
  artifacts:
    name: "cypress-failures"
    paths:
      - cypress/screenshots/
      - cypress/videos/
      - assets
    when: on_failure
    expire_in: '4 hours'


# ----------------------------------------------------------------------------------------------------------------------
#TEMPLATEFIXME: The following are tests for django-template itself; remove after forking
template:lint-frontend-react:
  stage: test-post-build
  dependencies:
    - install:virtualenv
    - install:node_modules
    - build
  script:
    - '[[ $CI_PROJECT_NAME = "template-django" ]]'
    - yarn lint
    - yarn dev &
    - ~/bin/wait-for-server.sh 127.0.0.1 3000
    - wget "http://127.0.0.1:3000/app.bundle.js" -O /dev/null
    - wget "http://127.0.0.1:3000/admin.bundle.js" -O /dev/null
    - date
    - echo 'Success'

template:test-init-script:
  stage: test-post-build
  dependencies:
    - install:virtualenv
  services:
    - postgres:9.5
  script:
    - bin/init-core-app.py --app-name test_app --class-name-prefix TestApp --client-name 'Test App' --skip-git-check --no-input
    - bin/template-ci-utils.sh initial-migrations test_app
    - time bin/run-tests-django.sh
    - date
    - echo 'Success'
