name: Django test CI

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.6]

    services:
      postgres:
        image: postgres:10.8
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
        # will assign a random free host port
        - 5432/tcp
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    env:
        DJANGO_SETTINGS_MODULE: django_site.settings.ci
        DB_HOST: localhost
        DB_USER: postgres
        DB_PASSWORD: postgres
        DB_NAME: postgres

    steps:
    - name: Use Node.js
      uses: actions/setup-node@v1
      with:
        node-version: 12
    - uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - uses: actions/cache@v1
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        sudo apt-get install -y postgresql-client libpq-dev
        python -m pip install --upgrade pip
        pip install -r requirements/dev.txt

    - name: lint
      env:
        NOVENV: 1
        DB_PORT: ${{ job.services.postgres.ports[5432] }} # get randomly assigned published port
      run: |
        bin/lint.py
        ( cd django-testbed/django-root && ./manage.py makemigrations --check --dry-run ) || { echo 'Missing migrations!'; false; }

    - name: django tests
      run: |
        bin/run-tests-django.sh
      env:
        DB_PORT: ${{ job.services.postgres.ports[5432] }} # get randomly assigned published port
